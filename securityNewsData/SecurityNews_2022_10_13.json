[
   {
      "time": "2022-10-13",
      "title": "Signal will remove support for SMS text messages on Android",
      "text": " Signal says it will start to phase out SMS and MMS message support from its Android app to streamline the user experience and prioritize security and privacy.\"You will have several months to transition away from SMS in Signal, to export your SMS messages to another app, and to let the people you talk to know that they might want to switch to Signal, or find another channel if not.\"The change will only affect Android users who set up Signal as their default SMS app. Signal will start notifying them to export their SMS messages and switch to a new default app to manage their SMS messages.When Signal is used as the unified Android messaging app, both Signal and non-Signal contacts are displayed in the contact list, with Signal ones marked with a blue letter.​This move was mainly prompted by plain text SMS messages being insecure since they can be intercepted using various methods and allow mobile carriers worldwide to access message metadata.Additionally, the company said that having unencrypted SMS messages right next to secure Signal messages in the same interface could easily lead to confusion even though they're each tagged as such.\"It's primarily just the US and parts of Europe that have affordable/unlimited SMS plans. For the most part, the global south is hungry for overlay services that they can use instead of SMS, precisely because SMS is so expensive in those places,\" Signal said.Last but not least, a third reason given by Signal for this move is that they can lead to expensive phone bills when mistakenly sending SMS messages instead of Signal messages due to high fees in some parts of the world.\"We understand that this change will be frustrating for those of you who use Signal on Android for SMS messaging in addition to sending Signal messages. It rarely feels good to have to switch up the ways that you communicate with the people who matter to you,\" Signal added.\"We did not make this choice lightly, but we do believe it is necessary to ensure that Signal meets the highest privacy standards for the future.\""
   },
   {
      "time": "2022-10-13",
      "title": "FinCEN Announces $29 Million Enforcement Action Against  Virtual Asset Service Provider Bittrex for Willful Violations of the Bank Secrecy Act | FinCEN.gov",
      "text": " “For years, Bittrex’s AML program and SAR reporting failures unnecessarily exposed the U.S. financial system to threat actors,” said FinCEN Acting Director Himamauli Das. “Bittrex’s failures created exposure to high-risk counterparties including sanctioned jurisdictions, darknet markets, and ransomware attackers. Virtual asset service providers are on notice that they must implement robust risk-based compliance programs and meet their BSA reporting requirements. FinCEN will not hesitate to act when it identifies willful violations of the BSA.”FinCEN’s investigation found that, from February 2014 through December 2018, Bittrex failed to maintain an effective AML program. Bittrex’s program failed to appropriately address the risks associated with the products and services it offered, including anonymity-enhanced cryptocurrencies. Bittrex failed to implement effective transaction monitoring on its trading platform, relying on as few as two employees with minimal anti-money laundering training and experience to manually review all of the transactions for suspicious activity, which at times were over 20,000 per day.  Bittrex conducted over 116,000 transactions valued at over $260 million with entities and individuals located in jurisdictions subject to comprehensive OFAC sanctions, including transactions with entities and individuals operating openly from OFAC-sanctioned jurisdictions such as Iran, Cuba, Sudan, Syria, and the Crimea region of Ukraine.###"
   },
   {
      "time": "2022-10-13",
      "title": "Caffeine Phishing-as-a-Service Platform | Fresh Phish Market",
      "text": " Explore our multi-vendor XDR platform, delivering Mandiant products and integrating with a range of leading security operations technology.Solve your toughest cyber security challenges with combinations of products and services.Mitigate threats, reduce risk, and get back to business with the help of leading experts.Mandiant specializes in cyber threat intelligence, offering products, services, and more to support our mission to defend against cyber crime.Get the latest insights from cyber security experts at the frontlines of threat intelligence and incident responseLearn more about us and our mission to help organizations defend against cyber crime. Unlike most PhaaS platforms Mandiant encounters, Caffeine is somewhat unique in that it features an entirely open registration process, allowing just about anyone with an email to register for their services instead of working directly through narrow communication channels (such as underground forums or encrypted messaging services) or requiring an endorsement or referral through an existing user. Additionally, to seemingly maximize support for a variety of clientele, Caffeine also provides phishing email templates earmarked for use against Chinese and Russian targets; a generally uncommon and noteworthy feature of the platform (more on this later in the post).Although the use of phishing platforms is certainly not a novel mechanism to facilitate attacks, it is worth noting that such feature-rich options, like Caffeine, are readily accessible to cybercriminals. In this blog post, we explore the method through which we first identified evidence of its use, show the relatively low barrier of entry to the PhaaS platform market, elaborate on the platform’s core capabilities, and delve into the more technical configurations available to Caffeine’s phishermen that allow them to evade detection. We also provide a core set of detections designed to identify phishing campaign elements leveraged by both Caffeine-specific actors as well as more generalized phishing activity.A broadly distributed credential phishing campaign was also Mandiant’s initial observation point of the Caffeine platform in use. In March 2022, Managed Defense observed an email sent to a European architectural consulting firm containing a suspicious URL. While the contents of the email were not recovered in their entirety, domain data contained within the phishing email, eduardorodiguez9584[.]ongraphy[.]com (which resolved to IP address 134.209.156[.]27 around the time of the activity), was recovered and subsequently analyzed.Additionally, the second-stage lure page being hosted on the compromised portion of the site (during the period of time at which it was compromised) was ultimately misconfigured by the attacker (see Figure 3).If it were correctly configured, the page shown in Figure 3 would likely display the final lure page for a campaign as configured by the Caffeine user/attacker (typically a fake Microsoft 365 login page, see Figure 4). Yet, the error message on this page indicates that the associated phishing domain was not configured correctly within the Caffeine platform infrastructure and offers attackers a support link to get help with this issue. While this shows an admirable dedication to user experience on the part of the Caffeine engineers, the provided link to create a support ticket is also a direct link to the support page within the Caffeine platform. In the event a user accessing the support URL is not logged in as a configured user of the platform at the time they access the link, they are simply redirected to the Caffeine login page (see Figure 5).Over the course of its research into the Caffeine platform, Managed Defense observed newer versions of the error page that have replaced the support ticket URL portion with support contact information for an encrypted messaging service instead. This is a good operational security improvement on the part of the platform engineers.A properly configured and campaign-ready, end-to-end implementation of the Caffeine Phishing Platform has several elements, three of which are:Each of these aspects are explored in detail in the following sections.Like any other modern Software-as-a-Service (SaaS) platform, the core of Caffeine’s infrastructure for a new user begins with the creation of a user account. While not all PhaaS platforms function in this manner, in Caffeine’s case, the web site itself is open to the public (all you need to know is the URL). It is possible to register for an account with no significant disclosure of information and no external validation mechanisms (such as endorsement through other existing Caffeine users) to access the site.Once registered, a new Caffeine user is then directed to the service’s main index page to begin their phishing voyages (see Figure 6). It is worth noting that over the course of its investigation into the Caffeine platform, Managed Defense observed Caffeine’s administrators announce several key platform improvements via the Caffeine news feed, including feature updates and expansions of their accepted cryptocurrencies.In addition to word of mouth via its existing users, Caffeine is also advertised on underground forums dedicated to cybercrime. Figure 7 shows a post on nulled[.]to, advertising an email management component for Caffeine, as well as other seemingly malicious utilities that appear to be associated with the same malware author.Another example is a post from the site crax[.]tube demo-ing an older version of some of the platform’s features as shown in Figure 8.As is typical of most modern SaaS platforms, Caffeine does not support perpetual use licenses and is wholly subscription based. Additionally, as modern subscription-based software design doctrine dictates, Caffeine offers three different tiers of service.Much of the Caffeine platform feature-set allows users to pick and choose granular configuration settings for use in their credential phishing campaigns. As mentioned previously, this includes, but is not limited to, self-service mechanisms to customize dynamic URL schemas to assist in dynamically generating pages with potential victim information pre-populated for additional campaign chicanery (see Figure 9), first-stage campaign redirect pages, and final lure pages. It also includes several options to blacklist IP addresses within CIDR ranges and block connections based on their points of origin (see Figure 10).Once an attacker has configured the necessary components of their main campaign tooling (as shown in Figure 10), they must then deploy their tooling (conventionally referred to as “phishing kits”) to their hosted campaign infrastructure. After that step is complete, all that is left to do is connect their deployed kits to their main Caffeine account via a special license token. At that point, an attacker is ready to go phishing! For most traditional phishing campaigns, phishermen generally employ two main mechanisms to host their malicious content. They will typically leverage purpose-built web infrastructure set up for the sole purpose of facilitating their phishing voyages, use legitimate third-party sites and infrastructure compromised by attackers to host their content, or some combination of both.Given the prevalence of compromised web infrastructure observed by Mandiant across its customer base, the authors will focus on this particular avenue of attack for further scenario-based analysis within this blog post.Though a full analysis of the general tactics, techniques, and procedures involved in the deployment of kits to compromised web infrastructure is beyond the scope of this blog post, general techniques for deployment of these kits include:No matter which technique is used, however, the attacker’s ultimate goal is to achieve file-write capabilities on hosted web infrastructure. Once this is achieved, they simply upload the files from their kit, and ensure all relevant dependencies are resolved.At that point, in Caffeine’s case, the attacker must also ensure their kits are configured to leverage a user-specific license token. This links their deployed kits to their main Caffeine user account and allows them to fully utilize the Caffeine platform (and its respective administrative dashboards) to effectively manage campaign operations.If completed correctly, the final lure for Caffeine phishing kits will appear as a Microsoft 365 login page, similar to the one in Figure 4. Pages like this one are the main mechanism to drive successful credential theft during campaign operations.If this step is not completed correctly, anyone accessing the lure page will instead receive an error message like the one shown in Figure 3.Mandiant did not identify additional fake login pages outside of those formatted to appear as Microsoft 365 credential harvesting lures, which is consistent with the way this platform is advertised. However, Mandiant assesses with moderate confidence that additional login page formats will be introduced as Caffeine customer needs shift with technology trends.Once configuration of the campaign infrastructure is complete, the attacker has the option of using a Caffeine-provided email management utility (which is offered in both Python or PHP) to craft and send their phishing emails to potential victims.By default, Caffeine provides configurable HTML files to embed in outgoing email used in conjunction with the aforementioned sender utilities. Several options are available for attackers to use for their phishing email templates, including webmail phishing lures targeting users of major Russian and Chinese services (see Figure 16 to Figure 19).While an extensive, comprehensive analysis of every utility and component within the Caffeine platform is well beyond the scope of this blog post, several key components of its operation can be used to generate a solid set of high efficacy threat detections when used in concert with one another. This rule set is intended to serve as a starting point for hunting efforts to identify phishing infrastructure and activity; however, they may need adjustment over time as the threat evolves. To leverage these detections effectively, run the associated Yara rules against copies of deployed web site files.RuleFilenameMD5Detection NotesM_Hunting_PHP_Caffeine_Toolmarks_1index.phpce9a17f9aec9bd2d9eca70f82e5e048bThough the Caffeine platform has many pages named “index.php” across its various components, this particular “index.php” is the central one that is served up by default when accessing a deployed kit. The strings within the matching detection are toolmarks from the output of Caffeine obfuscation tooling.M_Hunting_PHP_Caffeine_Obfuscation_1index.phpce9a17f9aec9bd2d9eca70f82e5e048bThis detection casts a wider phishing net than the previous rule, looking for PHP files that have a “Caffeine-style” obfuscation mechanism but may not necessarily be Caffeine-specific. Mandiant has uncovered some evidence to suggest the obfuscation mechanism used by Caffeine may be in use by other PhaaS vendors as well.M_Hunting_JSON_Caffeine_Config_1config.json684b524cef81a9ef802ed3422700ab69This is the main configuration file used by deployed Caffeine phishing kits. The strings within the matching detection are configuration artifacts Caffeine leverages by default.M_Hunting_JS_Caffeine_Redirect_1file.htm60cae932b80378110d74fe447fa518d6This is a typical Caffeine redirect page. The strings within the matching detection are configuration artifacts Caffeine leverages by default.M_Hunting_ICO_Caffeine_Favicon_1favicon.ico12e3dac858061d088023b2bd48e2fa96This rule detects the version of the legitimate Microsoft logo favicon included within Caffeine’s kits by default. It may detect some legitimate versions of the favicon, too, but a Microsoft favicon found alongside rouge PHP, HTA, or Javascript files should be investigated closely for the presence of malicious activity.The following domains are core components of Caffeine’s architecture for deployed phishing kits. To leverage these detections effectively, look for anomalous network traffic to a cluster of these domains within web logs or in network traffic within the timeframe of several minutes.Domain/URLIP Address ResolutionContextual Notescaffeinefiles[.]click104.21.6[.]210An active hosting location for Caffeine platform files. Currently behind Cloudflare.caffeines[.]space185.163.46[.]131An inactive hosting location for Caffeine platform files.caffeines[.]store104.26.7[.]11The main Caffeine store domain. Currently behind Cloudflare. ip-api[.]io192.99.71[.]107This is a seemingly legitimate service Caffeine uses for IP address geolocation. On its own it is not inherently malicious, but when activity for this domain appears alongside other Caffeine indicators, it provides immense contextual value.telegram[.]org149.154.167[.]99A legitimate encrypted messaging service used heavily by Caffeine.While the detections listed in this post can certainly assist in detecting the presence of malicious activity, it is also important to keep in mind that defensive measures against PhaaS attacks can be a game of cat and mouse. As quickly as threat actor infrastructure gets taken down, new infrastructure can be spun up. To that end, in addition to leveraging the detections provided in this post, there are a few ways organizations can reduce impact of phishing attacks and compromised domains on a strategic level. These include:Though these strategic elements may seem somewhat self-evident, they are far from being overstated in their importance. Traditional phishing techniques continue to be a reliable Initial Intrusion Vector (IIV) for cyberattacks, and, as demonstrated by the Caffeine PhaaS platform, the tools to conduct full-fledged enterprise-level phishing campaigns are cheap to acquire, simple to use, and readily available to adversaries.The authors would like to thank Jeremy Kennelly for his threat expertise and investigative guidance, Evan Reese for his assistance in detection review, and The Managed Defense Security Operations Center for their continued vigilance.These YARA rules are not intended to be used for real time monitoring or to inform blocking rules without first being validated through an organization's own internal testing processes to ensure appropriate performance and limit the risk of false positives.rule M_Hunting_JS_Caffeine_Redirect_1{    meta:        author = \"adrian.mccabe\"        md5 = \"60cae932b80378110d74fe447fa518d6\"        date_created = \"2022-09-22\"        rev = \"1\"        context = “Searches for string artifacts on Caffeine Javascript redirect pages. Intentionally wide.”    strings:        $cf1 = \"Don't Play Here Kid\" ascii wide        $cf2 = \"mrxc0der\" ascii wide    condition:        all of themrule M_Hunting_PHP_Caffeine_Toolmarks_1{    meta:        author = \"adrian.mccabe\"        md5 = \" ce9a17f9aec9bd2d9eca70f82e5e048b\"        date_created = \"2022-09-22\"        rev = \"1\"        context = “Searches for generic Caffeine obfuscation toolmark strings. Intentionally wide.”    strings:        $attacker_brand = \" - WWW.CAFFEINES.STORE\" ascii wide        $obfuscation_tagline = \"CODED By MRxC0DER\" ascii wide    condition:        all of them}rule M_Hunting_PHP_Caffeine_Obfuscation_1{    meta:        author = \"adrian.mccabe\"        md5 = \"ce9a17f9aec9bd2d9eca70f82e5e048b\"        date_created = \"2022-09-22\"        rev = \"1\"        context = “Searches for obfuscated PHP scripts.”    strings:        $f1 = {3C 3F 70 68 70 }        $a1 = \"__FILE__));\" ascii wide        $a2 = \"=NULL;@eval\" ascii wide        $a3 = \"))));unset\" ascii wide    condition:        uint16(0) == 0x3F3C and             all of themrule M_Hunting_JSON_Caffeine_Config_1{    meta:        author = \"adrian.mccabe\"        md5 = \"684b524cef81a9ef802ed3422700ab69\"        date_created = \"2022-09-22\"        rev = \"1\"        context = “Searches for default Caffeine configuration syntax. Intentionally wide.”    strings:        $cf1 = \"token\" ascii wide        $cf2 = \"ip-api.io\" ascii wide        $cf3 = \"ff57341d-6fb8-4bdb-a6b9-a49f94cbf239\" ascii wide        $cf4 = \"send_to_telegram\" ascii wide        $cf5 = \"telegram_user_id\" ascii wide    condition:        all of themrule M_Hunting_ICO_Caffeine_Favicon_1{    meta:        author = \"adrian.mccabe\"        md5 = \"12e3dac858061d088023b2bd48e2fa96\"        date_created = \"2022-09-22\"        rev = \"1\"        context = “Searches for legitimate Microsoft favicon used by Caffeine. VALIDATION REQUIRED.”    strings:        $a1 = { 01 00 06 00 80 }        $a2 = \"fffffff\" ascii wide        $a3 = \"3333333\" ascii wide        $a4 = \"DDDDDDDDDDDUUUUUUUUUUUP\" ascii wide        $a5 = \"UUUPDDD@\" ascii wide    condition:        uint16(1) == 0x0100 and            all of them }Domain/URLIP Address ResolutionContextual Noteseduardorodiguez9584[.]ongraphy[.]com134.209.156[.]27Phishing campaign redirect site.oculisticaspizzirri[.]it/fill/136.243.82[.]137Misconfigured second-stage credential harvesting url.caffeinefiles[.]click104.21.6[.]210An active hosting location for Caffeine platform files. Currently behind Cloudflare.caffeines[.]space185.163.46[.]131An inactive hosting location for Caffeine platform files.caffeines[.]store104.26.7[.]11The main Caffeine store platform URL. Currently behind Cloudflare. ip-api[.]io192.99.71[.]107This is a seemingly legitimate service Caffeine uses for IP address geolocation. On its own it is not inherently malicious, but when activity for this domain appears alongside other Caffeine indicators, it provides immense contextual value.telegram[.]org149.154.167[.]99A legitimate encrypted messaging service used heavily by Caffeine.Get the Google Cloud Cyberseurity Forecast 2024 report to explore the latest trends on the horizon.Mandiant experts are ready to answer your questions.© Copyright 2023 Mandiant. All rights reserved."
   },
   {
      "time": "2022-10-13",
      "title": "University of Glasgow - University news - AI-driven ‘thermal attack’ system reveals passwords in seconds",
      "text": " Necessary cookies enable core functionality. The website cannot function properly without these cookies, and can only be disabled by changing your browser preferences.Analytical cookies help us improve our website. We use Google Analytics. All data is anonymised.Hotjar helps us to understand and improve our users’ behaviour by visually representing their clicks, taps and scrolling. All data is anonymised.closeComputer security experts have developed a system capable of guessing computer and smartphone users’ passwords in seconds by analysing the traces of heat their fingertips leave on keyboards and screens. Researchers from the University of Glasgow developed the system, called ThermoSecure, to demonstrate how falling prices of thermal imaging cameras and rising access to machine learning are creating new risks for ‘thermal attacks.’ Thermal attacks can occur after users type their passcode on a computer keyboard, smartphone screen or ATM keypad before leaving the device unguarded. A passerby equipped with a thermal camera can take a picture that reveals the heat signature of where their fingers have touched the device. The brighter an area appears in the thermal image, the more recently it was touched. By measuring the relative intensity of the warmer areas, it is possible to determine the specific letters, numbers or symbols that make up the password and estimate the order in which they were used. From there, attackers can try different combinations to crack users’ passwords. Previous research by Dr Mohamed Khamis, who led the development of ThermoSecure, has already demonstrated that non-experts can successfully guess passwords simply by looking carefully at thermal images taken between 30 and 60 seconds after surfaces were touched.  In a paper published in the journal ACM Transactions on Privacy and Security, Dr Khamis and the authoring team, Ms Norah Alotaibi and Dr John Williamson, explain how they set out to harness machine learning to make the attack process more accurate. To do so, they took 1,500 thermal photos of recently-used QWERTY keyboards from different angles.  Then, they trained an artificial intelligence model to effectively read the images and make informed guesses about the passwords from the heat signature clues using a probabilistic model. Through two user studies, they found that ThermoSecure was capable of revealing 86% of passwords  when thermal images are taken within 20 seconds, and 76% when within 30 seconds, dropping to 62% after 60 seconds of entry. They also found that within 20 seconds, ThermoSecure was capable of successfully attacking even long passwords of 16 characters, with a rate of up to 67% correct attempts. As passwords grew shorter, success rates increased – 12-symbol passwords were guessed up to 82% of the time, eight-symbol passwords up to 93% of the time, and six-symbol passwords were successful in up to 100% of attempts. Dr Khamis, of the University of Glasgow’s School of Computing Science, said: “They say you need to think like a thief to catch a thief. We developed ThermoSecure by thinking carefully about how malicious actors might exploit thermal images to break into computers and smartphones.  “Access to thermal imaging cameras is more affordable than ever – they can be found for less than £200 – and machine learning is becoming increasingly accessible too. That makes it very likely that people around the world are developing systems along similar lines to ThermoSecure in order to steal passwords. It’s important that computer security research keeps pace with these developments to find new ways to mitigate risk, and we will continue to develop our technology to try to stay one step ahead of attackers. ”We’re also keen to highlight to policymakers the risks that these kind of thermal attacks pose for computer security. One potential risk-reduction pathway could be to make it illegal to sell thermal cameras without some kind of enhanced security included in their software. We are currently developing an AI-driven countermeasure system that could help address this issue.” The researchers also looked at additional variables which made it easier for ThermoSecure to guess passwords. One was the typing style of the keyboard users. ‘Hunt-and-peck’ keyboard users who type slowly tend to leave their fingers on the keys for longer, creating heat signatures which last longer than faster touch-typists.  Images taken within 30 seconds of the keyboard being touched allowed ThermoSecure to successfully guess hunt-and-peck typists’ passwords 92% of the time, but only 80% of the time for touch-typists. Secondly, the type of material keyboards are made from can affect their ability to absorb heat, with implications for the effectiveness of thermal attacks. ThermoSecure could successfully guess passwords from the heat retained on keycaps made from ABS plastics around half of the time, but only 14% of the time on keys manufactured from PBT plastics. The ThermoSecure team has a number of suggestions for computer and smartphone users to protect themselves from thermal attacks. Dr Khamis added: “Longer passwords are more difficult for ThermoSecure to guess accurately, so we would advise using long passphrases wherever possible. Longer passphrases take longer to type, which also makes it more difficult to get an accurate reading on a thermal camera, particularly if the user is a touch typist. Backlit keyboards also produce more heat, making accurate thermal readings more challenging, so a backlit keyboard with PBT plastics could be inherently more secure. “Finally, users can help make their devices and keyboards more secure by adopting alternative authentication methods, like fingerprint or facial recognition, which mitigate many of the risks of thermal attack. In my team we have previously proposed authentication schemes that rely on eye movements for password entry; gaze-based authentication is resistant to thermal attacks by design.” The team’s paper, titled ‘ThermoSecure: Investigating the effectiveness of AI-driven thermal attacks on commonly used computer keyboards’, is published in ACM Transactions on Privacy and Security.The research was supported by funding from the Royal Society of Edinburgh (RSE Award 65040), the Engineering and Physical Sciences Research Council (EPSRC grant number EP/V008870/1), and the PETRAS National Centre of Excellence for IoT Systems Cybersecurity (Project PT.HEAT) which is also funded by the EPSRC (EP/S035362/1), as well as by a studentship sponsored by Taif University and the Royal Embassy of Saudi Arabia Cultural Bureau in London. First published: 10 October 2022Related links The University of Glasgow is a registered Scottish charity: Registration Number SC004401"
   },
   {
      "time": "2022-10-13",
      "title": "Risky Biz News: White House working on cybersecurity labels for IoT products",
      "text": " The Biden Administration said it plans to meet with vendors, industry groups, and government agencies later this month to discuss how this new labeling scheme should be done.The White House said the new cybersecurity labels will first be mandated for \"the most common, and often most at-risk, technologies — routers and home cameras — to deliver the most impact, most quickly.\"\"Bittrex failed to implement effective transaction monitoring on its trading platform, relying on as few as two employees with minimal anti-money laundering training and experience to manually review all of the transactions for suspicious activity, which at times were over 20,000 per day.\"CreepyDrive, which abuses OneDrive and Dropbox cloud services for C&C;CreepySnail, which executes commands received from the attackers' own infrastructure;DeepCreep and MegaCreep, which make use of Dropbox and Mega file storage services, respectively;FlipCreep, TechnoCreep, and PapaCreep, which receive commands from attackers' servers.\"We demonstrate the first downgrade attacks against RPKI. The key design property in RPKI that allows our attacks is the tradeoff between connectivity and security: when networks cannot retrieve RPKI information from publication points, they make routing decisions in BGP without validating RPKI. We exploit this tradeoff to develop attacks that prevent the retrieval of the RPKI objects from the public repositories, thereby disabling RPKI validation and exposing the RPKI-protected networks to prefix hijack attacks. We demonstrate experimentally that at least 47% of the public repositories are vulnerable against a specific version of our attacks, a rate-limiting off-path downgrade attack. We also show that all the current RPKI relying party implementations are vulnerable to attacks by a malicious publication point. This translates to 20.4% of the IPv4 address space.\"No postsReady for more?"
   },
   {
      "time": "2022-10-13",
      "title": "Critical VM2 flaw lets attackers run code outside the sandbox",
      "text": " Researchers are warning of a critical remote code execution flaw in 'vm2', a JavaScript sandbox library downloaded over 16 million times per month via the NPM package repository.The vm2 vulnerability is tracked as CVE-2022-36067 and received a severity rating of 10.0, the maximum score in the CVSS system, as it could allow attackers to escape the sandbox environment and run commands on a host system.Sandboxes are meant to be an isolated environment that is walled off from the rest of the operating system. However, as developers commonly use sandboxes to run or test potentially unsafe code, the ability to \"escape\" from this confined environment and execute code on the host is a massive security problem.Security researchers at Oxeye have found a clever way to customize the call stack of an error that occurs in VM2 to generate “CallSite” objects created outside the sandbox and use them to access Node’s global objects and execute commands.While the library's authors attempted to mitigate this possibility in the past, Oxeye's researchers found a way to bypass this mitigation mechanism by using a custom implementation of the \"prepareStackTrace\" method.\"This allowed the attacker to provide their own implementation of \"prepareStackTrace,\" then trigger an error, and escape the sandbox.\"The analysts found that it’s also possible to override the global Error object with a custom object that implements the “prepareStackTrace” function, again accessing “CallSite” objects created outside the sandbox and running commands in the current process.Oxeye’s research team discovered this critical problem on August 16, 2022, and reported it to the VM2 team a couple of days later, who confirmed they had launched an investigation.Eventually, the authors of the popular library released version 3.9.11 on August 28, 2022, which addressed the sandbox escape and code execution problems.Software developers are urged to update to the latest VM2 version and replace older releases in their projects as soon as possible.For end users, it is important to note that it could take a while before virtualization software tools relying on VM2 apply the available security update.If you use a sandbox solution, check if it relies on VM2 and whether it's using the latest version."
   },
   {
      "time": "2022-10-13",
      "title": "Russia labels Meta an 'extremist' org, sends legal threats to users",
      "text": " Rosfinmonitoring, Russia's Federal Financial Monitoring Service, has added Meta, the owner of Facebook, Instagram, and WhatsApp, to its list of terrorists and extremists.However, adopting the \"terrorist\" classification for Meta by the Federal State marks a new development, leaving millions of Russian users of Facebook, Instagram, and WhatsApp unsure about what this means.Instead, Meta's inclusion on the extremist list blocks all financial transactions with the company and its subsidiaries or brands.This means that Russia-based users will not be able to legally use monetization options on Instagram or Facebook, run advertisements on the platform, or perform any transactions on shops hosted on either platform.However, Russian lawyer Pavel Chikov is painting a different picture on Telegram today, saying that the prosecutor's office has now started distributing warnings to users of Facebook and Instagram, who are threatened with administrative and criminal liability for posting on the platforms.According to the Russian human rights media project OVD-Info, which has been outlawed in its home country since September 29, 2022, this practice is illegal.In a Telegram post today, OVD-Info reminds users that these notices are neither legally binding nor have any legal basis, so they may as well be ignored.Meanwhile, the western world has taken steps against Russian social media platforms, including removing all VKontakte apps from the Apple App Store."
   },
   {
      "time": "2022-10-13",
      "title": "Hacking group POLONIUM uses ‘Creepy’ malware against Israel",
      "text": " Security researchers reveal previously unknown malware used by the cyber espionage hacking group 'POLONIUM,' threat actors who appear to target Israeli organizations exclusively.According to ESET, POLONIUM uses a broad range of custom malware against engineering, IT, law, communications, marketing, and insurance firms in Israel. The group's campaigns are still active at the time of writing.Since September 2021, the hackers have used at least seven variants of custom backdoors, including four new undocumented backdoors known as 'TechnoCreep', 'FlipCreep', 'MegaCreep',, and 'PapaCreep.'Some backdoors abuse legitimate cloud services, such as OneDrive, Dropbox, and Mega, to act as command and control (C2) servers. Other backdoors utilize standard TCP connections to remote C2 servers or get commands to execute from files hosted on FTP servers.While not all backdoors have the same features, their malicious activity includes the ability to log keystrokes, take screenshots of the desktop, take photos with the webcam, exfiltrate files from the host, install additional malware, and execute commands on the infected device.The most recent backdoor, PapaCreep, spotted in September 2022, is the first one in C++, whereas the hackers wrote older versions either in PowerShell or C#.PapaCreep is also modular, breaking its command execution, C2 communication, file upload, and file download functions into small components.The advantage is that the components can run independently, persist via separate scheduled tasks in the breached system, and make the backdoor harder to detect. Besides the ‘Creepy’ variants, POLONIUM also uses various open source tools, either custom or off-the-shelf, for reverse proxying, screenshot taking, keylogging, and webcam snapping, so there’s a level of redundancy in the operations.ESET couldn't discover POLONIUM's tactics used to initially compromise a network, but Microsoft previously reported that the group was using known VPN product flaws to breach networks.The threat actor's private network infrastructure is hidden behind virtual private servers (VPS) and legitimate compromised websites, so mapping the group's activities remains murky.POLONIUM is a sophisticated and highly targeted threat whose crosshairs are fixed at Israel right now, but this could change any moment if the priorities or interests change."
   },
   {
      "time": "2022-10-13",
      "title": "BazarCall Call Back Phishing Attacks Constantly Evolving Its Social Engineering Tactics",
      "text": " The operators behind the BazaCall call back phishing method have continued to evolve with updated social engineering tactics to deploy malware on targeted networks.Primary targets of the latest attack waves include the U.S., Canada, China, India, Japan, Taiwan, the Philippines, and the U.K.These email baits aim to create a false sense of urgency, informing the recipients about renewal of a trial subscription for, say, an antivirus service. The messages also urge them to contact their support desk to cancel the plan, or risk getting automatically charged for the premium version of the software.The ultimate goal of the attacks is to enable remote access to the endpoint under the guise of terminating the supposed subscription or installing a security solution to rid the machine of malware, effectively paving the way for follow-on activities.Another tactic embraced by the operators involves masquerading as incident responders in PayPal-themed campaigns to deceive the caller into thinking that their accounts were accessed from eight or more devices spread across random locations across the world.Regardless of the scenario employed, the victim is prompted to launch a specific URL – a specially crafted website designed to download and execute a malicious executable that, among other files, also drops the legitimate ScreenConnect remote desktop software.A successful persistent access is followed by the attacker opening fake cancellation forms that ask the victims to fill out personal details and sign in to their bank accounts to complete the refund, but in reality are fooled into sending the money to the scammer.Discover how application detection, response, and automated behavior modeling can revolutionize your defense against insider threats.Join the conversation to learn how to combat Zenbleed and Kubernetes attacks.Sign up for free and start receiving your daily dose of cybersecurity news, insights and tips."
   },
   {
      "time": "2022-10-13",
      "title": "High-Value Targets: String of Aussie Telco Breaches Continues",
      "text": " First it was Optus, followed by Telstra. Now, a third Australian telecom company has disclosed it was breached — this time it's Dialog, an information technology services provider with a sizable market share of Aussie customers in both the public and private sectors. Dialog said it is still investigating the incident further. Days later, the cybercriminals withdrew their ransom demand of $1 million, explaining there were \"too many eyes\" on the data. But before the attackers had a change of heart, they leaked more than 10,000 customer records, reportedly as proof of what they had. The attackers later apologized for leaking the stolen info. Telecommunications companies will always be an attractive target for cybercrime because of the vast amounts of data they gather, process, and store on their customers, Erfan Shadabi, a cybersecurity expert with Comforte AG tells Dark Reading. \"However, they have an obligation to keep this sensitive customer data safe and out of the hands of the wrong people, obligations that are both ethical and regulatory in nature. The outcome of not doing this is exactly what these companies face now,\" he adds.John Bambanek, principal threat hunter with Netenrich, agrees, adding that IT providers, managed service providers (MSPs), managed security service providers (MSSPs), and telcos have always been prime targets from advanced threat actors. \"These companies have privileged access so its easy to go from point A to points B through Z immediately,\" Bambanek explains to Dark Reading. He adds that intelligence services like the National Security Agency (NSA) also regularly turn the focus of their operations to telecommunications service providers because of the wealth of sensitive data inside their systems.  \"Eventually, targeting priorities and techniques filter from the intelligence world into sophisticated cybercriminals such as ransomware groups,\" Bambenek says. \"Ultimately, the math is the same. Why attack one target and have only one victim when you can attack one target and have many victims? More victims means more money.\" Copyright © 2023 Informa PLC Informa UK Limited is a company registered in England and Wales with company number 1072954 whose registered office is 5 Howick Place, London, SW1P 1WG."
   },
   {
      "time": "2022-10-13",
      "title": "POLONIUM targets Israel with Creepy malware",
      "text": " \n      Award-winning news, views, and insight from the ESET security community\n    \n        Award-winning news, views, and insight from the ESET security community\n      ESET ResearchESET researchers analyzed previously undocumented custom backdoors and cyberespionage tools deployed in Israel by the POLONIUM APT group\n11 Oct 2022\n • \n, \n20 min. read\nAs shown in Figure 1, POLONIUM’s toolset consists of seven custom backdoors: CreepyDrive, which abuses OneDrive and Dropbox cloud services for C&C; CreepySnail, which executes commands received from the attackers’ own infrastructure; DeepCreep and MegaCreep, which make use of Dropbox and Mega file storage services respectively; and FlipCreep, TechnoCreep, and PapaCreep, which receive commands from attacker’s servers. The group has also used several custom modules to spy on its targets.Figure 1. Timeline of observed backdoors deployed by POLONIUMPOLONIUM is an active group that constantly introduces modifications to its custom tools. We have seen more than 10 different malicious modules since we started tracking the group, most of them with various versions or with minor changes for a given version. Some of the most interesting characteristics of the group’s toolset are:Figure 2. Code used by CreepyDrive to download files or execute commandsWhile we didn’t observe commands being executed by the attackers on compromised systems, we spotted a log file documenting the execution of a command on a victimized computer. The contents of the log file (decoded) are shown in Figure 3.Figure 3. Execution log of a command and its outputCreepySnail is another PowerShell backdoor that sends HTTP requests to a C&C server and receives and executes PowerShell commands. We saw various versions of this backdoor in the wild, though the differences between them were minimal. Figure 4 shows one version that can run any executable specified by the C&C server (as long as it’s in the malware folder). We won’t go into more details about this backdoor as it has already been described by Microsoft in their report.Figure 4. Code used by CreepySnail to execute commandsDeepCreep is a previously undocumented backdoor written in C# that reads commands from a text file stored in Dropbox accounts and can upload or download files to and from those accounts. Some versions of DeepCreep have obfuscated strings, some separate the code into DLLs, and some have more or less commands. We will focus on the most prevalent version for this analysis, although interesting features of other versions will be mentioned.A command to be executed by the backdoor is read from the file cd.txt on the server-side root folder of the victim; once read, the file is deleted from the cloud. DeepCreep runs this process in an infinite loop, which means that a new cd.txt file has to be placed in the cloud storage for every command to execute. If the file is not found, the backdoor sleeps then tries again. A list of the commands that DeepCreep can process is shown in Table 1.Table 1. List of commands supported by DeepCreep\n\n\nCommand\nDescription\n\n\n\n\nGetNoThing\nDeletes cd.txt.\n\n\nupload \"<local_file_path>\"\n\"<file_name_on_dropbox>\"\nUploads a file on the victim’s computer to a subfolder  2  in Dropbox. Multiple  upload  lines can be included in cd.txt  to execute more than one upload at once.\n\n\ndownload\n\"<file_name_on_dropbox>\"\n\"<local_file_path>\"\n<bool_abs_p>\nDownloads a file from the root folder in Dropbox to the victim’s computer. If <bool_abs_p> is 0, the file is downloaded into %TEMP%\\<local_file_path> (relative path). If it’s 1, the file is downloaded into <local_file_path> (absolute path).\n\n\ndelay <value>\nSets the delay for all sleep operations, where  1000  is 1 minute.\n\n\nzip \"<local_file_folder_path>\" \"⁠<output_path>\" \"<size_mb>\"\nCreates a ZIP file with the specified file or folder and saves it in the specified path on the victim’s computer. The archive is split in chunks of the specified size, in megabytes.\n\n\nExecute with cmd.exe\nWhen none of the previous commands are found in the first line of cd.txt, then all of the lines are taken as commands to be executed with cmd.exe. The output produced by the commands is uploaded to a text file in Dropbox. The output encoding for the console is set to Windows-1255, which handles Hebrew characters.\n\n\nDeepCreep persists by creating a LNK file in %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup and by creating a scheduled task. A PowerShell command is used to create the LNK file, as shown in Figure 5.Figure 5. Part of the code that DeepCreep uses to establish persistenceFigure 6. Part of the code of the loader that executes DeepCreepMegaCreep processes the same commands that we described for DeepCreep, but they are stored in AES-encrypted form in the file cd.txt. It has additional commands, both related to the key used for decryption, which are described in Table 2.Table 2. List of new commands added to MegaCreep\n\n\nCommand\nDescription\n\n\n\n\nNewASKey <key>\nReceives the decryption key <key> that is stored locally in Cert.dll (only if the file doesn’t already exist).\n\n\nUPKY <old_key> <new_key>\nUpdates the decryption key from <old_key> to <new_key>. The process is successful only if <old_key> is the same as the key that the backdoor is currently using. In this case, <new_key> is stored locally in Cert.dll.\n\n\nMegaCreep checks for these commands first, which are stored unencrypted in cd.txt. If none of these commands are found, then the contents of cd.txt are decrypted using the key that is in Cert.dll. After decryption, all the same commands that we described for DeepCreep can be executed by MegaCreep.Figure 7. Code used in MegaCreep to load username and passwordThis backdoor is a good example of the preference that POLONIUM has for using separate DLLs with specific functionality, as shown in Figure 8. In the example, two methods from PRLib.dll are called: CHP, which kills running processes with the same name as the backdoor’s executable (i.e., previous executions of the backdoor that are still running), and XVDFv, which implements persistence (in the same way we described for DeepCreep).Figure 8. Example of MegaCreep calling methods from separate DLLsAnother feature that was added to MegaCreep is that the output from commands executed by cmd.exe is encrypted before it is uploaded to the cloud. The key used for encryption is the same as the one used to decrypt commands.We saw one case where MegaCreep was deployed using a loader, WLAN-AutoConfig.exe. The main code for the backdoor was placed in a DLL file, MainZero.dll, and other routines that communicate with Mega were placed in another DLL, MagLibrary.dll. Figure 9 shows the code in the loader that calls MainZero.Figure 9. Code for MegaCreep's loaderFlipCreep is another previously undocumented backdoor written in C# that has a very similar flow of execution as the other backdoors that we have described: it reads commands from orders.txt – a text file stored on an FTP server operated by POLONIUM – and can upload or download files from the server. The commands that FlipCreep can process are the same as the other backdoors, with the following considerations:Figure 10. Part of the FlipCreep code to upload filesFlipCreep creates a folder with the username of the target on the FTP server, along with these subfolders:Persistence is achieved in the same way as was described for DeepCreep. As for string obfuscation, we’ve seen one sample with ROT13 obfuscation.TechnoCreep is a previously undocumented C# backdoor that communicates with a C&C server via TCP sockets. In this case, commands are not read from a file, but received in an exchange of messages. The first message is sent by the backdoor and contains initial information about the victim, in the format <PC_NAME>#<USERNAME>#<LIST_IP>#<LIST_OTHER>#<OS>TechnoCreep receives commands in an infinite loop. The list of commands is shown in Table 3.Table 3. List of commands supported by TechnoCreep\n\n\nCommand\nDescription\n\n\n\n\nupload\nUploads a file on the victim’s computer to the C&C server. The path of the file to upload is received in a separate message. If the file exists, the backdoor sends Exist, to which the server replies start or stop. If start is received, the size of the file is sent. Finally, the file is sent to the server as raw bytes. If the message is stop, nothing is done. If the specified file doesn’t exist, NotE is sent to the server.\n\n\ndownload\ndownload\tDownloads a file from the C&C server. The path where the file will be saved on the victim’s computer is received in a separate message. If NotE is received instead, the process stops. If the path is an absolute path, and the parent folder doesn’t exist, then the backdoor sends NOT. Otherwise, it sends Exists, to which the server replies by sending the size of the file. Then the backdoor sends ok, sleeps for 1 second, and then receives the file as raw bytes.\n\n\nExecute with  cmd.exe\nWhen neither of the previous commands are received, the message is taken as a command to be executed with cmd.exe. The output is sent to the server.\n\n\nTechnoCreep persists by copying its executable to the Startup folder, as shown in Figure 11. Identical code can also be found in some versions of DeepCreep. Note that no LNK files are used in this method.Figure 11. TechnoCreep code establishing persistencePapaCreep is a previously undocumented custom backdoor written in C++ that can receive and execute commands from a remote server via TCP sockets. First seen in September 2022, this is the first backdoor used by POLONIUM that was not written in C# or PowerShell.PapaCreep is a modular backdoor; its code has been divided in various components, some of them with minimal functionalities. We can summarize the main components as:The Executive and Mailman components run independently from each other and are even persisted with separate scheduled tasks in a compromised system. Communication with the remote server uses raw TCP sockets, but the information that is sent and received by the backdoor is contained in HTML code (with a fake HTTP header). Figure 12 shows that the header is hardcoded in the backdoor, and Content-length is always 1024. Note that Content-Type is text/-html, which is not a normal value.Figure 12. Hardcoded HTTP header used by the PapaCreep backdoorThe Mailman component initiates communication with the C&C server by sending <PC_NAME>-<USERNAME> (base64 encoded). It then starts two threads: one of them receives commands from the server and the other one sends any available output from the execution of commands. Delimiters are used for both sending and receiving: code#s and code#f are used to mark the start and end of the data. An example of a message sent to the server with the output of a dir command is shown in Figure 13.Figure 13. Example of a message sent to the C&C server, and the decoded contentIf the content is bigger than 1024 bytes, more than one message will be transmitted. In that case, the first message will have the start delimiter and the final message will have the end delimiter. The IP address and port of the C&C server is read from a text file, yetty.dll, with the format <IP_address>::<port> (base64 encoded).The CreepyUp and CreepyDown modules are not part of the main flow of execution of the backdoor and can be executed on demand. They are standalone command line tools that take two arguments, a local and a remote file. Curiously, CreepyDown’s filename in compromised computers is UCLN.exe and CreepyUp is DCLN.exe. This is similar as the commands upload and download in the FlipCreep backdoor that do the opposite of what is expected. Both CreepyUp and CreepyDown read the server information from the yetty.dll text file.POLONIUM didn’t use domain names in any of the samples that we analyzed, only IP addresses. Most of the servers are dedicated VPS, likely purchased rather than compromised, hosted at HostGW. There is one special case: IP address 45.80.149[.]154 hosts erichmocanu.tv, which seems to be a legitimate website. It is likely that POLONIUM used this server before it was assigned to its current owner.POLONIUM is a very active threat actor with a vast arsenal of malware tools and is constantly modifying them and developing new ones. A common characteristic of several of the group’s tools is the abuse of cloud services such as Dropbox, Mega and OneDrive for C&C communications.Intelligence and public reports about POLONIUM are very scarce and limited, likely because the group’s attacks are highly targeted, and the initial compromise vector is not known. ESET Research will continue to track its activities and document its attacks.\n\n\nSHA-1\nFilename\nESET detection name\nDescription\n\n\n\n\n3F4E3C5301752D39DAF97384CCA47564DA1C3314\ndnw.exe\nPowerShell/Agent.GJ\nCreepyDrive\n\n\nCC820ED9A23084104807941B76A2679243BA357C\nRequest.exe\nPowerShell/Agent.HF\nCreepySnail\n\n\n03A35A0167684E6CCCA641296969972E49B88D60\nDropBox.exe\nMSIL/Agent.DPT\nDeepCreep\n\n\n4E7DBFF20995E97190536B284D7E5CC65922FD55\nMega.exe\nMSIL/Agent.DPT\nMegaCreep\n\n\n994EAD7666A67E33C57A51EF98076D41AABB7FB7\nRegestries.exe\nMSIL/Tiny.DG\nFlipCreep\n\n\n79DE0AF2F10F8D39A93EED911D4048D87E3C8A1C\nWinUpdate.dll\nMSIL/Agent.DYU\nTechnoCreep\n\n\n2B9444B0E1747EB4F482D29C9DE27D07CCE55A76\nWindowsSartup22.exe\nWin64/HackTool.NetHacker.G\nPapaCreep\n\n\nF26F43AD2E2980B96497242A3F30CA003E5CF54C\nWinSc.exe\nMSIL/Tiny.DG\nScreenshots module\n\n\nF41E27C4C863821DE6CAD91CA7E77CD6CA6CE5D3\n4kyro3fs.dll\nMSIL/Spy.Keylogger.FGC\nKeylogger module\n\n\n94E75BA7C4476AFDACF4B39E403379C5ECD1BED6\nDevice.exe\nMSIL/Spy.Tiny.CZ\nWebcam module\n\n\nB87CC5269A5DF5CF093F8D28DF78952F662162B6\nOnDrive.exe\nMSIL/Agent.DTP\nReverse shell module\n\n\n809048A40274350BD0C453E49D8C1F7D32397164\nRehost.exe\nMSIL/Spy.Tiny.DA\nExfiltration module\n\n\n43E3C3752A15D0BDE7135E1B52F1DE397B5314B5\nMicrosoft Malware Protection.exe\nMSIL/Agent.DYV\nTunnels module\n\n\n\n\n\nIP\nFirst seen\nDetails\n\n\n\n\n37.120.233[.]89\n2022-09-12\nPapaCreep C&C\n\n\n45.80.148[.]119:8080\n2022-05-21\nReverse shell server\n\n\n45.80.148[.]167:21\n45.80.148[.]167:5055\n\n2021-11-27\nExfiltration\n\n\n45.80.148[.]186:8080\n2022-01-08\nReverse shell server\n\n\n45.80.149[.]22:8080\n2022-05-13\nCreepySnail C&C\n\n\n45.80.149[.]108:8080\n2022-02-11\nCreepySnail C&C\n\n\n45.80.149[.]68:63047\n2022-03-01\nCreepySnail C&C\n\n\n45.80.149[.]71:80\n2022-03-11\nCreepySnail C&C\n\n\n185.244.129[.]79:63047\n2022-03-01\nCreepySnail C&C\n\n\n45.80.149[.]154:1302\n45.80.149[.]154:21\n2021-09-23\nTechnoCreep C&C\nExfiltration\n\n\n185.244.129[.]216:5055\n2021-11-24\nExfiltration\n\n\n146.70.86[.]6:1433\n2022-05-26\nExfiltration\n\n\n195.166.100[.]23:5055\n2022-01-05\nExfiltration\n\n\n45.137.148[.]7:2121\n2021-10-29\nFlipCreep C&C\n\n\n185.203.119[.]99:8080\n2022-02-12\nReverse Shell\n\n\n212.73.150[.]174\n2022-02-24\nTunneling\n\n\n94.156.189[.]103\n2022-04-20\nTunneling\n\n\n51.83.246[.]73\n2022-03-12\nTunneling\n\n\n\n      Sign up for our newsletters\n    ESET ResearchUnlucky Kamran: Android malware spying on Urdu-speaking residents of Gilgit-BaltistanESET ResearchUnlucky Kamran: Android malware spying on Urdu-speaking residents of Gilgit-Baltistan • ESET ResearchWho killed Mozi? Finally putting the IoT zombie botnet in its graveESET ResearchWho killed Mozi? Finally putting the IoT zombie botnet in its grave • ESET Research, Threat ReportsESET APT Activity Report Q2–Q3 2023ESET Research, Threat ReportsESET APT Activity Report Q2–Q3 2023 • \n            Award-winning news, views, and insight from the ESET security community\n          "
   }
]