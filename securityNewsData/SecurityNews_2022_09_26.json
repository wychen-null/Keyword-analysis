[
   {
      "time": "2022-09-26",
      "title": "Analysis Report on Lazarus Group's Rootkit Attack Using BYOVD - ASEC BLOG",
      "text": " Since 2009, Lazarus Group, known to be a group of hackers in North Korea, has been attacking not only Korea but various countries of America, Asia, and Europe. According to AhnLab’s ASD (AhnLab Smart Defense) infrastructure, in early 2022, the Lazarus Group performed APT (Advanced Persistent Threat) attacks on Korea’s defense, finance, media, and pharmaceutical industries.AhnLab closely tracked these APT attacks and discovered that these attacks incapacitate security products in the attack process. An analysis of the attack process revealed that the Lazarus Group exploits an old version of the INITECH process to perform the initial compromise before downloading and executing the rootkit malware from the attacker’s server.The rootkit malware identified in the recent product-disabling attack abused vulnerable driver kernel modules to directly read and write to the kernel memory area and accordingly, all monitoring systems inside the system including AV (Anti-Virus) were disabled.This technique is called the “BYOVD (Bring Your Own Vulnerable Driver)” method and is known to be performed mainly on vulnerable driver modules of hardware supply companies. With the latest Windows OS, unsigned drivers can longer be loaded, however, attackers can use such legally-signed vulnerable drivers to control kernel area easily.The vulnerable driver module used by the Lazarus Group, in this case, was a hardware-related module manufactured by “ENE Technology”. This module used the original form of an open source library called “WinIO,” developed by Yariv Kaplan in 1999. The problems with this module include not only the fact that it uses an old open source code but also the fact that the verification condition for calling modules is weak, which enables reading and writing to an arbitrary kernel memory area via a simple bypassing process.Thus, the attacker was able to read and write to an arbitrary kernel memory area through this module and by modifying data in all areas related to the kernel including files, processes, threads, registries, and event filters, disabled all monitoring programs within the system including AV.Contents1. Overview2. ene.sys Analysis… 2.1. Physical Memory Mapping… 2.2 Caller and Data Validity Verification……. 2.2.1. SB_SMBUS_SDK.dll Module Loading Verification……. 2.2.2. AES Encrypted IOCTL Communication and Call Time Verification… 2.3. ene.sys Driver (WinIO Library) Vulnerability3. Rootkit Malware Analysis… 3.1 Rootkit Loader (~BIT353.tmp)… 3.2 Rootkit (Advance Preparation Stage)……. 3.2.1. Rootkit Export Function……. 3.2.2. Infection Target Verification Routine……. 3.2.3. Checking OS Version……. 3.2.4. Loading Vulnerable Driver Modules……. 3.2.5. Obtaining the Kernel DTB (Directory Table Base) Address……. 3.2.6. Address Conversion (Virtual Address > Physical Address)……. 3.2.7. Modification of the Thread Object’s PreviousMode Field… 3.3. Rootkit (Security Product Disabling Stage)……. 3.3.1. Disabling Mini File Filter (fltmgr.sys)……. 3.3.2. Disabling Process/Thread/Module Detection……. 3.3.3. Disabling Registry Callback……. 3.3.4. Disabling Object Callback……. 3.3.5. Disabling WFP Network Filter……. 3.3.6. Disabling Event Tracing……. 3.3.7. Disabling Windows Prefetch File CreationAhnLab Response OverviewConclusionIoC (Indicators of Compromise)File path and nameFile hashes (MD5)References[Important] Consent to Collection and Use of Personal InformationΔ[Important] Consent to Collection and Use of Personal InformationΔ[…] to using a vulnerable driver to mount its rootkit attacks. Just last month, AhnLab’s ASEC detailed the exploitation of a legitimate driver known as “ene.sys” to disarm security software […][…] a pengemudi yang rentan untuk memasang serangan rootkitnya. Baru bulan lalu, ASEC AhnLab terperinci eksploitasi driver yang sah yang dikenal sebagai “ene.sys” untuk melucuti perangkat […][…] a vulnerable driver to mount its rootkit assaults. Simply final month, AhnLab’s ASEC detailed the exploitation of a reputable driver generally known as “ene.sys” to disarm safety […][…] to using a vulnerable driver to mount its rootkit attacks. Just last month, AhnLab’s ASEC detailed the exploitation of a legitimate driver known as “ene.sys” to disarm security software […][…] to using a vulnerable driver to mount its rootkit attacks. Just last month, AhnLab’s ASEC detailed the exploitation of a legitimate driver known as “ene.sys” to disarm security software […][…] to using a  vulnerable driver to mount its rootkit attacks. Just last month, AhnLab’s ASEC  detailed the exploitation of a legitimate driver known as “ene.sys” to disarm security software […][…] to using a vulnerable driver to mount its rootkit attacks. Just last month, AhnLab’s ASEC detailed the exploitation of a legitimate driver known as “ene.sys” to disarm security software […][…] to using a vulnerable driver to mount its rootkit attacks. Just last month, AhnLab’s ASEC detailed the exploitation of a legitimate driver known as “ene.sys” to disarm security software […][…] to using a  vulnerable driver to mount its rootkit attacks. Just last month, AhnLab’s ASEC  detailed the exploitation of a legitimate driver known as “ene.sys” to disarm security software […][…] to using a vulnerable driver to mount its rootkit attacks. Just last month, AhnLab’s ASEC detailed the exploitation of a legitimate driver known as “ene.sys” to disarm security software […][…] to using a vulnerable driver to mount its rootkit attacks. Just last month, AhnLab’s ASEC detailed the exploitation of a legitimate driver known as “ene.sys” to disarm security software […][…] to using a vulnerable driver to mount its rootkit attacks. Just last month, AhnLab’s ASEC detailed the exploitation of a legitimate driver known as “ene.sys” to disarm security software […][…] to using a vulnerable driver to mount its rootkit attacks. Just last month, AhnLab’s ASEC detailed the exploitation of a legitimate driver known as “ene.sys” to disarm security software […][…] to using a vulnerable driver to mount its rootkit attacks. Just last month, AhnLab’s ASEC detailed the exploitation of a legitimate driver known as “ene.sys” to disarm security software […][…] de un conductor vulnerable para activar sus ataques de rootkit. El mes pasado, el ASEC de AhnLab detallado explotar un controlador legítimo conocido como \"ene.sys\" para deshabilitar el software de […][…] a susceptible driver to mount its rootkit assaults. Simply final month, AhnLab’s ASEC detailed the exploitation of a reputable driver generally known as “ene.sys” to disarm safety […][…] to using a vulnerable driver to mount its rootkit attacks. Just last month, AhnLab’s ASEC detailed the exploitation of a legitimate driver known as “ene.sys” to disarm security software […][…] to using a vulnerable driver to mount its rootkit attacks. Just last month, AhnLab’s ASEC detailed the exploitation of a legitimate driver known as “ene.sys” to disarm security software […][…] uso de un conductor vulnerable para montar sus ataques de rootkit. El mes pasado, el ASEC de AhnLab detallado la explotación de un controlador legítimo conocido como «ene.sys» para desarmar el software de […][…] vulnérable pour monter ses attaques de rootkit. Le mois dernier, l’ASEC d’AhnLab détaillé l’exploitation d’un pilote légitime connu sous le nom de « ene.sys » pour […][…] to using a vulnerable driver to mount its rootkit attacks. Just last month, AhnLab’s ASEC detailed the exploitation of a legitimate driver known as “ene.sys” to disarm security software […][…] to using a vulnerable driver to mount its rootkit attacks. Just last month, AhnLab’s ASEC detailed the exploitation of a legitimate driver known as “ene.sys” to disarm security software […][…] to using a vulnerable driver to mount its rootkit attacks. Just last month, AhnLab’s ASEC detailed the exploitation of a legitimate driver known as “ene.sys” to disarm security software […][…] rootkit. في الشهر الماضي فقط. قام ASEC التابع لشركة AhnLab. بتفصيل استغلال برنامج تشغيل شرعي يعرف باسم “ene.sys” لنزع […][…] Scout has been in use for attacks since around 2022. While there are many instances where the specific attack cases could not be confirmed, there are cases where the initial access process was identified. For example, it was found alongside other pieces of malware in the attack case mentioned above, where a security vulnerability of a Korean financial security certification software was exploited. Much like the Lazarus group’s ordinary activities, its targets include multiple Korean enterprises and organizations in the defense, manufacturing, ICT, and financial sectors. The threat actor used this malware to control the infected systems. There has also been a case of BYOVD (Bring Your Own Vulnerable Driver), where the threat actor leveraged a vulnerable driver module of a hardware supplier to disable security products. [6] [7] […][…] Scout has been in use for attacks since around 2022. While there are many instances where the specific attack cases could not be confirmed, there are cases where the initial access process was identified. For example, it was found alongside other pieces of malware in the attack case mentioned above, where a security vulnerability of a Korean financial security certification software was exploited. Much like the Lazarus group’s ordinary activities, its targets include multiple Korean enterprises and organizations in the defense, manufacturing, ICT, and financial sectors. The threat actor used this malware to control the infected systems. There has also been a case of BYOVD (Bring Your Own Vulnerable Driver), where the threat actor leveraged a vulnerable driver module of a hardware supplier to disable security products. [6] [7] […]"
   },
   {
      "time": "2022-09-26",
      "title": "The Metador Enigma: Unveiling an Unattributed Threat",
      "text": " By Juan Andres Guerrero-Saade, Amitai Ben Shushan Ehrlich, and Aleksandar MilenkoskiThe term ‘Magnet of Threats’ is used to describe targets so desirable that multiple threat actors regularly cohabitate on the same victim machine in the course of their collection. In the process of responding to a series of tangled intrusions at one of these Magnets of Threats, SentinelLabs researchers encountered an entirely new threat actor. We dubbed this threat actor ‘Metador’ in reference to the string “I am meta” in one of their malware samples and the expectation of Spanish-language responses from the command-and-control servers.The intrusions we uncovered were located primarily in telcos, ISPs, and universities in the Middle East and Africa. We believe that we’ve only seen a small portion of the operations of what’s clearly a long-running threat actor of unknown origin.Throughout our analysis, we retrieved and analyzed examples of two different malware platforms used by Metador–‘metaMain’ and ‘Mafalda’. These Windows-based platforms are intended to operate entirely in-memory and never touch disk in an unencrypted fashion, eluding native security products and standard Windows configurations with relative ease. The internal versioning of Mafalda suggests that this platform has been in use for some time, and its adaptability during our engagement alone highlights active and continuing development.We also found indications of additional implant(s):Part of the difficulty in tracking the breadth of Metador’s operations involves their strict adherence to infrastructure segmentation. The attackers use a single IP per victim and build.Attributing Metador remains a garbled mystery. We encountered multiple languages, with diverse idiosyncrasies indicative of multiple developers. There are indications of a separation between developers and operators, and despite a lack of samples, the version history for at least one of the platforms suggests a history of development that extends far beyond the intrusions we’ve uncovered.The Magnet of Threats in question deployed our XDR solution after they’d been infected by Metador for several months. As such, we have no indication of the original infection vector employed in this or other infections.Once on the target, the Metador operators can choose between multiple execution flows to load one or more of their modular frameworks. The execution flow used on our Magnet of Threats combines a WMI persistence mechanism with an unusual LOLbin in order to kick off the decryption of a multi-mode, in-memory implant we named ‘metaMain’.metaMain is a feature-rich backdoor, but in this case the Metador operators used the metaMain implant to decrypt a subsequent modular framework called ‘Mafalda’ into memory.Mafalda is a flexible interactive implant, supporting over 60 commands. It appears to be a highly-valuable asset to the Metador operators, with newer variants exhibiting intense obfuscation making them challenging to analyze.metaMain is an implant framework used to maintain long-term access to compromised machines. It provides operators with extensive functionality, like keyboard and mouse event logging, screenshot theft, file download and upload, and the ability to execute arbitrary shellcode.The backdoor is keenly aware of its own execution context and runs in one of two modes as a result. The developers designate these modes by writing out either “I am meta” or “I am main” to a log. We chose to name the platform ‘metaMain’ in reference to these two modes.As the name suggests, this execution scheme relies on CDB, the Microsoft Console Debugger, to carry out the execution process. Within this method, there are two possible variations based on whether the implant is invoked in meta- or main-mode. We witnessed its use in meta-mode, turning the metaMain implant into a glorified loader for a Mafalda implant.Five to six minutes after booting up, the event triggers the execution of a LOLbin, cdb.exe.The attackers used the following command line:A debugging script, cdb.ini, is used to inject a small amount of shellcode into the debugged process in order to load metaMain. The shellcode reads, decrypts, and executes metaMain’s reflective DLL Loader from c:\\windows\\system32\\Speech\\Speech02.db. The DLL’s sole purpose is to then read, decrypt, and load the metaMain orchestrator, stored as Speech03.db.When invoked in meta-mode, metaMain serves as a loader for the payload provided as an argument following -module. In our observed case, the executed module was fcache13.db, an encrypted Mafalda payload.The Mafalda implant extends the backdoor functionalities that metaMain provides and is an actively maintained, ongoing project. We observed two variants of the Mafalda backdoor::The newer Obfuscated Mafalda variant extends the number of supported commands from 54 to 67 and is rife with anti-analysis techniques that make analysis extremely challenging.Interestingly, we noted that Mafalda prints encrypted debugger messages if the name of the host is WIN-K4C3EKBSMMI, possibly indicating the name of the computer used by the developers.If Mafalda successfully establishes a connection to the C2 server, it builds and sends an initial packet containing information about the host environment and the version of Mafalda being run. Mafalda then executes in a loop, exchanging packets with the C2 server.Each packet is of a given type and subtype, uniquely identified by identification numbers, internally refered to as outer OPC and inner OPC, respectively:The Mafalda backdoor has a total of 67 commands, with 13 of these added in the newer variant, indicating that the Mafalda implant is a maintained, ongoing project.and sends the content to the C2 with a name prefixed with loot\\.The functionalities of the backdoor commands have a very broad scope and include credential theft, data and information theft, command execution, system registry and file system manipulation, and Mafalda reconfiguration.When the TCP KNOCK communication method is enabled, the metaMain and Mafalda implants can establish an indirect connection to the C2 server through another implant. On Windows systems, this implant is internally referred to as ‘Cryshell’. metaMain and Mafalda authenticate themselves to Cryshell through a port-knocking and handshake procedure.Mafalda also supports retrieval of data from Linux machines with another implant that sends data to the C2 as part of a packet with a name prefixed with loot_linux\\. Though it’s possible that this unnamed Linux implant and Cryshell are the same, Mafalda authenticates itself to the Linux implant through a different port-knocking and handshake procedure.In all Metador intrusions we’ve observed, the operators use a single external IP address per victim network. That IP is utilized for command-and-control over either HTTP (metaMain, Mafalda) or raw TCP (Mafalda). In all confirmed instances, the servers were hosted on LITESERVER, a Dutch hosting provider.In addition to HTTP, external Mafalda C2 servers also support raw TCP connections over port 29029. We also observed some of Metador’s infrastructure host an SSH server at an unusual port. While SSH is commonly used for remote access to *nix systems, we find it hard to believe that a mature threat actor would expose their infrastructure in such a way. Instead, it’s likely those were used to tunnel traffic through Mafalda’s internal portfwd commands.We were able to identify one additional server we believe is operated by Metador actors, also hosted on Liteserver – 5.2.78[.]14. This IP hosts what appears to be a malicious domain, networkselfhelp[.]com, which might have been used as a C2 for Metador intrusions. If so, it’s an indication that Metador operators not only utilize IPs for their intrusions, but also domains.The limited number of intrusions and long-term access to targets suggests that the threat actor’s primary motive is espionage. Moreover, the technical complexity of the malware and its active development suggest a well-resourced group able to acquire, maintain and extend multiple frameworks.Metador was observed mainly in Telecoms, Internet Service Providers (ISP), and Universities in the Middle East and Africa, and appears intended to provide long-term access in multiple redundant ways.Mafalda internal documentation suggests the implant is maintained and developed by a dedicated team, leaving comments for a separate group of operators.Running into Metador is a daunting reminder that a different class of threat actors continues to operate in the shadows with impunity. Previous threat intelligence discoveries have broadened our understanding of the kind of threats that are out there but so far, our collective ability to track these actors remains inconsistent at best. Developers of security products in particular should take this as an opportunity to proactively engineer their solutions towards monitoring for the most cunning, well-resourced threat actors. High-end threat actors are thriving in a market that primarily rewards compliance and perfunctory detections.From the perspective of the threat intelligence research community, we are deeply grateful for the contributions of the research teams and service providers who have willingly shared their expertise and telemetry for this research.Get notified when we post new content.Thanks! Keep an eye out for new content!In the era of interconnectivity, when markets, geographies, and jurisdictions merge in the melting pot of the digital domain, the perils of the threat ecosystem become unparalleled. Crimeware families achieve an unparalleled level of technical sophistication, APT groups are competing in fully-fledged cyber warfare, while once decentralized and scattered threat actors are forming adamant alliances of operating as elite corporate espionage teams.Get notified when we post new content.Thanks! Keep an eye out for new content!"
   },
   {
      "time": "2022-09-26",
      "title": "Erbium Stealer Malware Report - CYFIRMA",
      "text": " The Erbium malware is an information-stealer/ info stealer, which is distributed as Malware-as- a-Service (MaaS). CYFIRMA research team observed this malware binary in Aug-2022 while carrying out threat hunting activities. The team has also observed the stealer malware being advertised on Russian-speaking hacker forums.The malware sample we have analyzed is a 32-bit executable binary. It contains obfuscated contents to evade detection by security products and firewalls. The malicious executable decrypts the obfuscated contents by using XORing logic after which it drops the 32-bit Erbium stealer DLL binary in the %temp% location and loads that dropped file in the current process by calling LoadLibraryA API. The dropped DLL files establish a connection to the Erbium stealer C2 server. Erbium malware establishes the connection to Discord’s Content Delivery Network (CDN) servers. Discord is a chat program that enables real-time communication between users through the internet and is being abused by threat actors to deliver malware. Info stealer malware developers sell these types of malware in underground forums and sell the harvest details in underground forums as well as criminal marketplaces. Ransomware affiliates or other threat actors purchase such details and then use these valid credentials, VPN, etc. as initial access to compromise the organization.The malware [ErbiumStealer] has the following capabilities:Recently CYFIRMA’s research team detected a new sample of Erbium stealer in wild. We observed one of the recent gaming campaigns where the threat actors lure gamers/players who want to acquire an unfair or prohibited edge over other players with the malicious binary posted on MediaFire [free service for file hosting]. Threat actors are spreading this malware using drive-by-download techniques and pretending as cracked software/game hacks. CYFIRMA’s research team on further monitoring activities associated with this campaign conclude that the identity of the threat actor is currently unknown for this Erbium stealer malware sample.Erbium stealer malware is an information stealer, designed to gather sensitive data, including passwords for applications, credit card numbers, web browser cookies, auto-complete data, desktop files, machine data, installed software, crypto wallet stealing, etc, and send those details to the attacker command & control (C2) domain and can even download additional payloads from the C2 server.From our analysis, we were able to find the following functionality available in the sample:In recent years information stealers are one of the most popular malware types being used in the wild. Once the info stealers threat actor obtains the harvested information from victim systems, the threat actors/malware authors will act as an initial access broker[IAB]. These threat actors advertised those obtained details on the dark web such as breached[.]to as well as Russian language underground forum of XSS and special-access forums, along with cybercriminals marketplaces. Threat actors such as ransomware affiliates or other threat actors purchase these details. If a threat actor purchases these details, they have access to a variety of resources, which could lead to data exfiltration, lateral movement, and deploy other malware such as ransomware, etc. Even though there are other approaches, such as exploiting flaws in publicly accessible internet services, the use of stealer malware can cut down on costs and operation time. This is because this malware can access a system with valid credentials without hiring pen-testers for gaining initial access to the organization’s network, which reduces the risk of being discovered by perimeter protection systems.A wide range of threat actors leverages commodity information stealers which are distributed as MaaS model that will be sold on the underground forum for USD (prices) based on a subscription basis. For example, Red Line stealer’s prices range from USD 100 to USD 300.Another type of information stealer is private information stealers, which are developed by threat actors themselves by using already available stealer code on open-source platforms or developing [creating brand-new] information stealers, whenever the commodity information stealers do not fulfill threat actors’ requirements. private information stealers will be shared among a small set of cyber-criminals only for reduces the chances of detection. For example, recently, CYFIRMA’s research team observed Whisper Stealer selling on the underground forum for USD100 for a 1-month subscription. This stealer is C# .Net-based malware having the capabilities are collected from browsers, user credentials, cookies, autofill fields, credit cards, wallets, etc.Just like the information stealer developers who sell malware samples developed by them in the underground forums, the malware developers also post their advertisements in the underground forum for selling the obtained logs [from victims] to cybercriminals.The Erbium stealer malware is being sold on one of the Russian hacker forums at 500 Rubles per week, 1500 Rubles per month, and 10,000 Rubles per year. The Erbium stealer team is running the technical support as well, indicating the malware team’s add-on functionality in the future.Below are screenshots of reviews given by Erbium stealer malware subscribers. on the dark web. Based on these reviews/feedback the Erbium stealer malware author makes modifications in the next version of the malware.Basic Static Analysis of Erbium Stealer Malware:\nSample Details:\nMD5: 1EF9C948E6045D8D8794A89CC9545B0F\nSHA1: 7FA3530F3CC242075C04A43593FAEA2A8CE7A194\nSHA256: 04642249B0AD41B1C6CC8862EC372C3B9B1E855D104A16A6A3FAE694CC23EC0C File Type: Windows PE\nArchitecture: 32 Bit\nSubsystem: GUIThis malware was written in Microsoft Visual C++ programming language. This malware binary file’s size is 839227 (bytes). As shown in the below figure, this information stealer binary file has an entropy value is 6.71 and the code section was compressed by an unknown packer [custom].Upon execution of this file, it decompressed the required dynamic DLL file names and file strings, URL, etc, which on execution are compressed by an unknown compressor[packer]. After that, it is dropping the information stealer [ErbiumStealer] DLL file in the temp location. Once the DLL file is dropped, that file is loaded in memory.C:\\Users\\manoj\\AppData\\Local\\Microsoft\\Windows\\Temporary Internet Files\\Content.IE5\\8LFDVDUP\\clearkey[1].dll [md5:E53C97B18D69F5C6B7A854660E640700] ][product: Firefox] C:\\Users\\manoj\\AppData\\Local\\Microsoft\\Windows\\Temporary Internet Files\\Content.IE5\\BOT5RNIL\\softokn3[1].dll [md5:3A59B504F6C41324B0D6CB6EDBE3AD61] ][product: Firefox] C:\\Users\\manoj\\AppData\\Local\\Microsoft\\Windows\\Temporary Internet Files\\Content.IE5\\IIXT9CHD\\freebl3[1].dll [md5:ED6249F72BA742802B2FA3EF20900D18][product: Firefox] C:\\Users\\manoj\\AppData\\Local\\Microsoft\\Windows\\Temporary Internet Files\\Content.IE5\\IIXT9CHD\\nss3[1].dll[md5:05ED4FFBF6B785750D2CDACCA9287F10][product: Firefox] C:\\Users\\manoj\\AppData\\Local\\Microsoft\\Windows\\Temporary Internet Files\\Content.IE5\\TABIZERP\\mozglue[1].dll [md5:5D59E053D45049FFB8C6C08D8944E30C][product: Firefox] C:\\Users\\username\\AppData\\Local\\Temp\\hiokcmapbccbelnex.dll[6BC81580D318DC8EBF48B3555DD4C9D7]Once the Erbium Stealer file dropped the DLL file in the %temp% location, the dropped DLL [Erbium Stealer] file establishes a connection to the Panel: https[://] panel[.]erbium [.]ml, raw[.]githubusercontent[.]com and cdn[.]discordapp[.]com This malware tries to establish a connection to Discord’s Content Delivery Network (CDN) servers. While examining this malware code, this malicious file is not able to reach Discord’s Content Delivery Network (CDN) servers.Recently CYFIRMA’ s research team published a research report on the malicious use of the discord app. You may visit the link: https://www.cyfirma.com/cyber-research-on-the-malicious-use-of-discord/, to get more in-depth knowledge that how threat actors use the application as a tool for malicious purposes:This information stealer malware is decrypting the obfuscated code by the XOR logic, to decode the encrypted code malware authors use the starting key 31[Hexadecimal value]. Depending upon the obfuscated content length the decryption keys are incrementing by 1. Before executing the malicious code this malware initially decrypts the Erbium Stealer panel URL.Malware authors scatter the obfuscated contents as well as decryption logic code in the binary file to make it difficult for reverse engineering as well as writing the pattern [signature] to detect this malware by the antivirus engine.\nIt is followed by the malware getting the temp path by calling the GetTempPathA API then it creates a malicious DLL file [along with a legitimate DLL file] in the temp folder by calling the CreateFileA API.Next, the malicious executable writes the malicious DLL binary file content from the buffer to the created DLL file by calling WriteFile API.Once the malicious DLL file content has been written from the buffer to this file handle, the malware closes the handle and then decodes the required API function by executing above mentioned XOR logic. After that, this malicious DLL file loads into the address space of the calling process by calling LoadLibraryA API.Basic Static analysis of dropped Erbium Stealer [DLL]Sample Details:\nMD5: 6BC81580D318DC8EBF48B3555DD4C9D7\nSHA1: DABCED5B9F1EF63EFF6B29152192DFA1F1499481\nSHA256: E3DD6D5CA0C9A16D95E4C591B7BBAD40E3D4D78BCF29CE6D8EA80B263C67F1C5\nFile Type: Windows PE\nArchitecture: 32 Bit\nSubsystem: dynamic-link-libraryThis malware sample was also compiled in Microsoft Visual programming language. This malware’s binary file size is 2825728 (bytes). As shown in the below figure, this DLL file has an entropy value is 6.85 and the code section was compressed by an unknown [custom] packer.Similar to file hash: 1EF9C948E6045D8D8794A89CC9545B0F this malicious file initially decrypts the required DLL files name, File contents, etc by the XOR logic. In this file, the decryption logic code also scatters to make it difficult and delay analysing the malicious code while doing reverse engineering.This DLL file is stealer malware that targets victim stored browser history and steals browser information, passwords for applications, credit card numbers, web browser cookies, auto-complete data, desktop files, machine data, installed software, crypto wallet stealing, authentication-related software, and password managers, etc. The below figure is one part of the memory strings.Erbium stealer malware steals passwords, cookies, and autofill information from the following web browsers as shown in the memory dump.This malware also steals the data from the following crypto wallets:This info stealer malware collects data from two-factor (2FA), multifactor authentication (MFA), and then password management software as well.After that this DLL file de-obfuscate the obfuscated content, this malware obtains the user agent string Erbium-UA- 4ce7c27cb4be9d32e333bf032c88235a.\n\nLike file hash: 1EF9C948E6045D8D8794A89CC9545B0F, this DLL file is decrypting the ErbiumStealer panel URL. In this DLL file memory and creating socket connection then establishing a connection to panel[.]erbium[.]ml.\n\nAfter that this DLL file creates a thread by calling CreateThread API and executing the malicious code on the thread.\n\nThese threat actors sent the data to the threat actor-controlled server by calling the send API.\n\nThe figure below shows the Erbium stealer panel.\n\nThe figure below shows the Erbium stealer Dashboard. This Dashboard shows how many logs so far received from the victim machine. also, this Erbium stealer Dashboard shows when the subscription user registered with this MaaS service, and which date the subscription is going to end.\n\nRecently, CYFIRMA’s research team observed the Erbium stealer malware sample volume increased on the 2nd of September, in the wild.\n“Erbium stealer” malware is spread through several tactics, including spear-phishing, malicious advertising, exploit kits, and malware loaders such as Smoke Loader, Private Loader, etc. The malware is associated with an unknown threat actor. This malware gathers sensitive data, including passwords for applications, credit card numbers, web browser cookies, auto-complete data, desktop files, machine data, installed software, etc. This malware also has crypto wallet stealing capabilities. Finally, information stealer malware developers sell the gathered details on the underground forum and cybercriminal marketplaces.Copyright CYFIRMA. All rights reserved.Your iFrame Code"
   },
   {
      "time": "2022-09-26",
      "title": "QUAD Nations to Assist Each Other in Taking Action Against Malicious Cyber Activities - CySecurity News - Latest Information Security and Hacking Incidents",
      "text": "  your nameYour Emailyour message"
   },
   {
      "time": "2022-09-26",
      "title": "Signal Is Asking People Around the World to Help Iranians Access the Encrypted App",
      "text": " The popular encrypted chat app Signal is trying to help Iranians use the app, which is blocked in the country, by asking people to set up proxy servers that can help Iranians circumvent the government’s censorship. “Although it’s easy to launch new proxies if one gets blocked, we want to do everything we can to make things as difficult for Iranian censors as possible. As long as there are servers in the world, there is no limit to the number of Signal TLS Proxies that people can run,” Whittaker wrote. In the blog post, Whittaker explained how anyone can set up a proxy server, which would allow users in Iran to use the app with an Android phone. The blog post also included detailed step-by-step instructions that people can use to run proxies.“Like everyone else in the world, people in Iran deserve privacy. We hope this helps,” Whittaker wrote. Signal did not immediately respond to a request for comment.Nariman Gharib, an Iranian opposition activist based in the UK, told Motherboard that Signal’s proposal is “a great idea.”“I hope the government can't fingerprint their proxies. BUT I believe the community can spend their time and resources to create Tor bridges, so people can use it for other apps too,” Gharib said in an online chat. UPDATE, Sept. 23, 1:38 p.m. ET: this story has been updated to include more details about how the Signal proxy servers can be accessed from within Iran."
   },
   {
      "time": "2022-09-26",
      "title": "Harley Trojan Affecting the Users by Impersonating the Applications - CySecurity News - Latest Information Security and Hacking Incidents",
      "text": "  your nameYour Emailyour message"
   },
   {
      "time": "2022-09-26",
      "title": "Malicious Actors Exploit Zero-Day RCE Bug in Sophos Firewall - CySecurity News - Latest Information Security and Hacking Incidents",
      "text": "  your nameYour Emailyour message"
   },
   {
      "time": "2022-09-26",
      "title": "Teen Hacking Suspect Arrested by London Police for GTA 6 and Uber Breach - CySecurity News - Latest Information Security and Hacking Incidents",
      "text": " your nameYour Emailyour message"
   },
   {
      "time": "2022-09-26",
      "title": "BIND Updates Patch High-Severity Flaws - CySecurity News - Latest Information Security and Hacking Incidents",
      "text": " your nameYour Emailyour message"
   },
   {
      "time": "2022-09-26",
      "title": "Ransomware data theft tool may show a shift in extortion tactics",
      "text": " Data exfiltration malware known as Exmatter and previously linked with the BlackMatter ransomware group is now being upgraded with data corruption functionality that may indicate a new tactic that ransomware affiliates might switch to in the future.\"A randomly sized segment starting at the beginning of the second file is read into a buffer and then written into the beginning of the first file, overwriting it and corrupting the file.\"This tactic of using data from one exfiltrated file to corrupt another file might be part of an attempt to evade ransomware or wiper heuristic-based detection that could trigger when using randomly generated data.As Stairwell threat researchers found, Exmatter's partially-implemented data destruction capabilities are likely still in development given that:This data corruption feature is an interesting development, and while it may also be used to evade security software, researchers at Stairwell and Cyderes think it may be part of a shift in the strategy used by ransomware affiliates.Many ransomware operations run as a Ransomware-as-a-Service, where operators/developers are in charge of developing the ransomware, payment site, and handling negotiations, while affiliates join to breach corporate networks, steal data, delete backups, and encrypt devices.As part of this arrangement, the ransomware operators receive between 15-30% of any ransom payment, and the affiliates receive the rest.When this happens, the affiliates lose out on any potential revenue they would have received as part of a ransom payment.Due to this, the researchers believe that this new data corruption feature could be a new shift from traditional ransomware attacks, where data is stolen and then encrypted, to attacks where data is stolen and then deleted or corrupted.Under this method, the affiliate gets to keep all of the revenue generated from an attack, as they don't need to share a percentage with the encryptor developer.\"Affiliates have also lost out on profits from successful intrusions due to exploitable flaws in the ransomware deployed, as was the case with BlackMatter, the ransomware associated with previous appearances of this .NET-based exfiltration tool,\" Cyderes added.Destroying the sensitive data after exfiltrating it to their servers will prevent this from happening and will most likely also act as an additional incentive for victims to pay the ransom demands.\"Eliminating the step of encrypting the data makes the process faster and eliminates the risk of not getting the full payout, or that the victim will find other ways to decrypt the data,\" Cyderes said.This might be why we're seeing exfiltration tools in the process of being upgraded with in-development data corruption capabilities that would likely allow RaaS affiliates to remove the ransomware deployment part in their attacks to keep all the money for themselves.\"These factors culminate in a justifiable case for affiliates leaving the RaaS model to strike it out on their own, replacing development-heavy ransomware with data destruction.\""
   },
   {
      "time": "2022-09-26",
      "title": "New hacking group ‘Metador’ lurking in ISP networks for months",
      "text": " A previously unknown threat actor that researchers have named 'Metador' has been breaching telecommunications, internet services providers (ISPs), and universities for about two years.Metador targets organizations in the Middle East and Africa and their purpose appears to be long-term persistence for espionage. The group uses two Windows-based malware that have been described as \"extremely complex\" but there are indications of Linux malware, too.Analysis of the malware and the infrastructure did not reveal clues to attribute Metador with sufficient confidence, one characteristic of the group being that it is \"highly aware of operations security.\"SentinelLabs notes in their report that Metador is \"managing carefully segmented infrastructure per victim, and quickly deploying intricate countermeasures in the presence of security solutions.\"The researchers discovered the new threat group after the victim organization deployed Singularity, SentinelOne's extended detection and response (XDR) solution months after Metador compromised its network.Thus, details about the initial infection vector are not available. The two Windows-based malware frameworks, dubbed ‘metaMain’ and ‘Mafalda’, run in only in system memory, leaving no unencrypted trace on the compromised host.The custom implants were decrypted and loaded in memory through \"cdb.exe,\" the debugging tool in Windows - used in this attack as a LoLBin (living-off-the land binary) - to decrypt and loading in memory the two custom ‘metaMain’, and ‘Mafalda’, two custom Windows malware frameworks.Mafalda is a versatile implant that can accept up to 67 commands, while its multi-layered obfuscation makes it difficult to analyze in detail.The commands include file operations, reading contents of directories, manipulate the registry, reconnaissance of the network and the system, and exfiltrating data to the command and control (C2) server.Mafalda is likely developed by a dedicated team of authors, as SentinelLabs saw comments in the code addressed to the operators.The metaMain implant is used for more “hands-on” operations, like taking screenshots, performing file actions, logging keyboard events, and supports arbitrary shellcode execution.By digging deeper, the analysts found indications of a custom implant used for internal network bouncing named ‘Cryshell’ and an unnamed Linux tool that steals data from workstations and channels them back to Mafalda.SentinelLabs isn’t sure if Cryshell and the Linux implant are different but underscore a difference in the port-knocking and handshake procedure during authentication with Mafalda, pointing to two distinct tools.The custom implants and strict segmentation of the attack infrastructure (using a single IP address per victim and malware build) makes tracking Metador particularly challenging.Combined with the use of malware that runs entirely in memory and LoLBins, this allows the threat actor to stay hidden on victim networks for long periods without raising the suspicion of a compromise.However, despite these difficulties, SentinelLabs' investigation revealed that some metaMain samples dated since late December 2020, according to the timestamp in the execution log.Moreover, the complexity of the malware and its active development point to a well-resourced group that can improve the tools further.The researchers also found that the developers had documented the malware frameworks and provided \"guidance for a separate group of operators.\"Clues in the language used indicate that the developers are fluent in English, each with their indiosyncrasies; however the developer team is likely to have non-native English speakers. Spanish was also present in the code for Mafalda, referencing the homonymous cartoon in Argentina.Based on the documentation for Mafalda's commands, it appears that a dedicated team develops the malware and a different group is operating it.Linguistic and cultural breadcrumbs are insufficient for clear attribution in this case. However, SentinelLabs researchers theorize that behind Metador is \"a high-end contractor arrangement,\" like one typical for a nation-state operation."
   },
   {
      "time": "2022-09-26",
      "title": "Ukraine dismantles hacker gang that stole 30 million accounts",
      "text": " The cyber department of Ukraine's Security Service (SSU) has taken down a group of hackers that stole accounts of about 30 million individuals and sold them on the dark web.The hackers used malware to obtain credentials and other sensitive data available on victim systems in Ukraine and the European Union.The SSU says that the threat actor offered data packs, which were purchased in bulk by pro-Kremlin propagandists, who then used the accounts to spread fake news on social media, instill panic, and cause destabilization in Ukraine and other countries.They used anonymous dark web markets to sell this information and received payments via YuMoney, Qiwi, and WebMoney, which are prohibited in Ukraine.During the raids on the perpetrators' homes in Lviv, Ukraine, the police found and confiscated several hard drives with stolen personal data along with computers, SIM cards, mobile phones, and flash drives.The number of individuals arrested remains undisclosed but they are all facing criminal charges for unauthorized sale or distribution of information with limited access stored in computers and networks. These charges come with multi year prison sentences.Distributing fake news about the war has turned into an epidemic in Ukraine, starting immediately after the initial stages of the Russian invasion. The deluge of both disinformation and misinformation continues still.In many cases, bot farms are easier to spot but by using accounts of real individuals the chances for the operation to be uncovered are much lower because of the history of the posts and the organic activity."
   }
]