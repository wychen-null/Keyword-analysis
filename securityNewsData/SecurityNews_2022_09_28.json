[
   {
      "time": "2022-09-28",
      "title": "MAR-10400779-1.v1 – Zimbra 1 | CISA",
      "text": " An official website of the United States governmentHere’s how you know\nOfficial websites use .gov\n A .gov website belongs to an official government organization in the United States.\n              \nSecure .gov websites use HTTPS\n A lock (LockA locked padlock) or https:// means you’ve safely connected to the .gov website. Share sensitive information only on official, secure websites.\n              SearchThis report is provided \"as is\" for informational purposes only. The Department of Homeland Security (DHS) does not provide any warranties of any kind regarding any information contained herein. The DHS does not endorse any commercial product or service referenced in this bulletin or otherwise.CISA received seven files for analysis. Six Java Server Pages (JSP) webshells and a Bourne Again SHell (bash) file. Five JSP webshell files are designed to parse inbound requests for commands for execution, download files, and upload files. One JSP webshell file contains a form with input fields that prompts the attacker to enter the command in the input box and click \"run\" to execute. The command output will be displayed in a JSP page. The bash file is designed to perform ldapsearch queries and store the output into a newly created directory.28b7896bf81c5bcbe63c59ee7bfce3893894d93699949f59884834077694bd52 (TasksTtt.jsp)6dee4a1d4ac6b969b1f817e36cb5d36c5de84aa8fe512f3b6e7de80a2310caea (DatatypeConverter.jsp)9d2a842e7a39358adc68311dcc0bc550ba375eae7513a3d4de326e948d09c245 (test.jsp)c24ead55e58422365f034d173bb0415c16be78928b2843ef8f6f62feb15e1553 (xjhdshd.jsp)c602db153f48ab6580e5e85925677780c3d5a483c66c392a8ab8265aa108a409 (security.jsp)c8c1a0fae73b578480b15ff552499c271a1b49f7af2fb9fc7f8adaa4e984f614 (test2.jsp)d335d7e3a0ac77e132e9ea839591fa81f67cd8eef136ec6586a1d6b1f29e18f1 (test.sh)trojanwebshellNo matches found.This file is a JSP webshell and has also been identified as a Godzilla webshell. When the webshell is loaded, it parses the inbound request for the parameter named \"pass\". If the parameter is found in the request, it retrieves the value data (attack payload/command’s functional code) of the parameter and Base64 decodes it. The decoded data is decrypted a hard-coded Advanced Encryption Standard (AES) cipher. The AES decryption and encryption key is the hard-coded key value \"3c6e0b8a9c15224a\", which is the first 16 characters of the MD5 hash for the word \"key\".\t\t\tThe malware checks if the session used to store the decrypted data is empty. If it is empty, it stores the decrypted data in the session and uses the classloader to load the decrypted byte-code data. If it is not empty and there is an initialized payload, it will call the payload specific function. It assigns the decrypted data to a parameter and stores it into ByteArrayOutputStream and pageContext.\t\t\tThe content of the decrypted data will be executed to perform additional functions. The output of the command executed is AES encrypted and Base64 encoded before being sent to the Godzilla's server in an Hypertext Transfer Protocol (HTTP) response. Figure 1 - This code snippet contains a class constructor (class X) to create classes of attack payloads in string format. The x function is the encryption and decryption function of AES. It uses the Java ternary conditional operator to indicate AES decryption and encryption ( 1 is encryption mode, and 2 is the decryption mode). It generates the MD5 hash value of the hard-coded password and the key. Figure 2 - This code snippet parses inbound POST requests, decrypts its content with a hard-coded key, stores the decrypted payload in the session, executes it and returns the result of the command executed. The output is AES encrypted and Base64 encoded before being sent to the Godzilla's server in an HTTP response.utilityNo matches found.This file is a JSP file designed to use a shell command to remove an existing Java ARchive (jar) file \"/var/tmp/tmp.jar\", create a new tar archive file /var/tmp/tmp.jar\", and then create a symbolic link to the jar file.\t\t\tDisplayed below is the shell command used to remove the file \"/var/tmp/tmp.jar\":\t\t\t--Begin command--\n\t\t\t\"sh -c rm -rf /var/tmp/tmp.jar\"\n\t\t\t--End command--\t\t\tDisplayed below is the shell command used to combine and group the files below into a single archive file \"/var/tmp/tmp.jar\"\t\t\t--Begin command--\n\t\t\t\"sh -c tar czf /var/tmp/tmp.jar /opt/zimbra/backup/accounts.xml /opt/zimbra/backup/accounts.xml.old /opt/zimbra/data/ldap/config /opt/zimbra/data/ldap/ldap* /var/log/zimbra.log /opt/zimbra/jetty_base/webapps/zimbra/public/ /opt/zimbra/jetty_base/webapps/zimbraAdmin/public/ /tmp/ldap/ /etc/hosts /etc/passwd /opt/zimbra/conf/localconfig.xml\"\n\t\t\t--End command--\t\t\tDisplayed below is the shell command used to create a symbolic link in \"/opt/zimbra/jetty_base/webapps/zimbra/public/tmp.jar\" to the file \"/var/tmp/tmp.jar\":\t\t\t--Begin command--\n\t\t\t\"sh -c ln -s /var/tmp/tmp.jar /opt/zimbra/jetty_base/webapps/zimbra/public/tmp.jar\"\n\t\t\t--End command-- Figure 3 - The contents of the JSP file.backdoortrojanwebshellNo matches found.This file is a password protected JSP webshell designed to retrieve and execute certain parameters from the attacker. When the attacker makes a request to the malicious JSP file along with certain parameters, it checks if the password supplied by the attacker through the \"pwd\" parameter is equals to \"123456\". If the password is correct, it executes the command supplied by the attacker through the \"i\" parameter and outputs the command executed in the console. Figure 4 - The contents of the JSP file.backdoortrojanwebshellNo matches found.This file is a JSP webshell designed to allow an attacker to execute commands and read the output of the commands. When executed, it prompts the attacker to enter the command in the input box and click \"run\" to execute. The command output will be displayed in the JSP page. Figure 5 - The contents of the JSP file. It contains a form with input fields that prompts the attacker to enter the command in the input box and click \"run\" to execute.utilityNo matches found.No matches found.This file is a JSP webshell designed to retrieve and execute certain parameters from the attacker. The attacker can make a request to the malicious JSP file along with certain parameters to execute commands and output to console, download files, and zip compress files into \"/tmp/zimbra/\". It executes the file \"/opt/zimbra/jetty/webapps/zimbraAdmin/public/test.sh\" (ab28345b8aba13ae82f8bc0694f15804). Figure 6 - This code snippet retrieves and executes certain parameters from the attacker. The attacker can execute commands and output to console, download files, and zip compress files.credential-harvesterNo matches found.No matches found.This file is a bash script file. When loaded, it finds the below patterns in the Zimbra server's local configuration using the \"grep\" command:\t\t\t--Begin data--\n\t\t\tThe Lightweight Directory Access Protocol (LDAP) user password\n\t\t\tThe LDAP user\n\t\t\tThe LDAP user distinguished name (DN)\n\t\t\tThe LDAP Uniform Resource Locator (URL)\n\t\t\t--End data--\t\t\tIt uses the above search results data from the Zimbra server's local configuration to perform ldapsearch queries. It runs the ldapsearch queries with the \"-x\" option for simple authentication, the \"-H\" option to specify the host, the \"-D\" option for the bind DN, \"-W\" option for the password, the \"-b\" option to specify the search base.\t\t\tDisplayed below are ldapsearch queries performed at runtime:\t\t\t--Begin functions--\n\t\t\tLDAP search operation for \"userPassword\" attribute of users in the directory server and stores the output into a newly created file \"/tmp/zimbra/users.ldif\".\n\t\t\tLDAP search base for \"Common Name (CN) =config\",\"cn=zimbra\" and stores the output into a newly created file \"/tmp/zimbra/config.ldif\".\n\t\t\tLDAP search base for \"cn=servers\",\"cn=zimbra\" and stores the output into a newly created file \"/tmp/zimbra/service.ldif\".\n\t\t\t--End functions--\t\t\tIt removes the bash file \"test.sh\", the JSP file \"test.jsp\", and the newly created directory \"/tmp/zimbra\" using the commands below:\t\t\t--Begin commands--\n\t\t\trm -rf /opt/zimbra/jetty/webapps/zimbraAdmin/public/test.sh\n\t\t\trm -rf /opt/zimbra/jetty/webapps/zimbraAdmin/public/test.jsp\n\t\t\trm -rf /tmp/zimbra\n\t\t\t--End commands-- Figure 7 - This code snippet is used to find the LDAP user, password, user DN and URL in the zimbra local configuration.webshellNo matches found.This file is a JSP webshell. This file is designed to receive a form-data from the client side to perform file upload, command execution and output functions. The client side applet was not available for analysis. Analysis indicates that the command output is HTML encoded, and the files to be uploaded are Base64 encoded on client side and decoded on the server side. The uploaded files are read in as a byte stream by the JSP page. Figure 8 - This code snippet gets the body of the request.CISA recommends that users and administrators consider using the following best practices to strengthen the security posture of their organization's systems. Any configuration changes should be reviewed by system owners and administrators prior to implementation to avoid unwanted impacts.Additional information on malware incident prevention and handling can be found in National Institute of Standards and Technology (NIST) Special Publication 800-83, \"Guide to Malware Incident Prevention & Handling for Desktops and Laptops\".What is a MIFR? A Malware Initial Findings Report (MIFR) is intended to provide organizations with malware analysis in a timely manner. In most instances this report will provide initial indicators for computer and network defense. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.What is a MAR? A Malware Analysis Report (MAR) is intended to provide organizations with more detailed malware analysis acquired via manual reverse engineering. To request additional analysis, please contact CISA and provide information regarding the level of desired analysis.Can I submit malware to CISA? Malware samples can be submitted via three methods:Initial Version: September 27, 2022"
   },
   {
      "time": "2022-09-28",
      "title": "Securonix Threat Labs Security Advisory: Detecting STEEP#MAVERICK: New Covert Attack Campaign Targeting Military Contractors - Securonix",
      "text": " By Securonix Threat Labs, Threat Research: D. Iuzvyk, T. Peck, O. KolesnikovAs we’ll dive into a bit deeper in the next section, spearphishing was the primary means of initial compromise. The attack was carried out starting in late summer 2022 targeting at least two high-profile military contractor companies.The overall attack chain can be seen in the figure 1 below which highlights the initial compromise phase of the attack, which as you can see is quite robust compared to most loaders we’ve seen in the past.Figure 1: Attack Chain Figure 2: Company & Benefits.pdf.lnk The shortcut file does some tricky things to avoid detection. First, it attempts to hide its execution by calling forfiles rather than cmd.exe or powershell.exe like we’ve seen in the past.It then takes the powershell.exe executable file and then copies it to C:\\Windows, renames it to AdobeAcrobatPDFReader, and then uses it to execute the rest of the PowerShell string. Logs generated from Sysinternals Sysmon identify this in figure 3 below.Figure 3: Windows logs showing renamed PowerShell.exe The rest of the powershell script runs on a loop with a 120 second timeout or until an error is not produced. C2 communication is attempted at the URL: hxxps://terma[.]dev/0 to pull down the initial stager. Once the .lnk file is executed by the user, a rather large and robust chain of stagers will execute. Each stager is written in PowerShell and each is very heavily obfuscated. In total we observed eight layers to the stage which carry a wide range of techniques.Let’s start peeling back this onion of stagers by first examining the first stage as it is executed from the remote C2 server. The file which is loaded remotely via invoke expression is an extensionless file simply named “0”.Each encoded or obfuscated layer will be highlighted in the table below along with code snippets for a better visual. Figure 4Figure 5Figure 6Figure 7Figure 8Figure 9 Just before the last stage was downloaded and executed, stage 7 provided some interesting techniques involving obfuscation, counter forensics and anti-debugging.Figure 10: AMSI Evasion Counter-forensics or anti-debugging techniques were quite prevalent and nearly hostile! The code first checks for processes matching a long list of those which could be used for monitoring process execution flow, or disassembly.This list includes:fiddler, procmon, sysmon, idapro,ida64, ida64pro, dnSpy, OllyScript, OllyDbg, x64dbg, ghidra, processhacker, pestudio, Radare2, peexplorer, relyze, pwndbg, binaryninja, ida37fw [sic!], httptoolkit, hexrays, Scylla, PEiD, bincat, BinDiff, efiXplorer, Windbg, Hiew, autoruns, PE-bear, pebear, depends, cerproThe script then leverages WMI to check information related to the desktop monitor. Any system with a screen height of less than 777 pixels high will cause the script to fail.Next, it uses WMI again to check for the system install date and memory information. If the date is less than three days, the script will fail.Native PowerShell commands are used for two more checks, one looking for Win32_PhysicalMemory property for memory matching “QEMU|VirtualBox|VirtualPC|VMware|Hypervisor“. Get-ComputerInfo is then used for computer properties containing (“CsDomain”,”HyperVisorPresent”) -like “*WORKGROUP*True*“. This checks for the presence of a hypervisor or a non-domain joined system.Figure 11: Counter-forensics / Anti-analysis Most malware, when it fails a sandbox, or anti-analysis check, will typically halt execution and quit. This hostility in this script was interesting. When the check fails, rather than quitting, it will disable the systems network adapters, use netsh to configure the Windows Firewall to block all inbound and outbound traffic, and then uses an obfuscated PowerShell command “(&gal [?r0]*m)” in place of the “Remove-Item” commandlet, to delete everything in the user’s profile directory, G:\\, F:\\, and E:\\ drives recursively. Then the computer will shut down via the commandlet “Stop-Computer”.The next bit of code is interesting. If the system’s language is set to “*zh*” (Chinese) or to “*ru*” (Russian), then the code will simply exit and the computer will shut down.Figure 12: Language Detection Another trivial check it performs is looking for the amount of physical memory, and if it is less than 4gb, it’ll shut down the machine it’s running on quietly. If all checks pass, the malicious script will then begin disabling detection engines beginning with PowerShell Script Block Logging.Figure 13: Disable Script Block Logging Next, in an effort to further along the script block logging bypass, the “signatures” variable with a new empty hashset. Pairing this with the “force” parameter will cause the statement to never be true, which again bypasses logging.Event tracing for PowerShell and Application logging is then disabled using the “Remove-EtwTraceProvider” commandlet.In the figure 14 below, the last command sets 0 to the fields “System.Management.Automation.Tracing.PSEtwLogProvider” and “etwProvider.m_enabled” which effectively disables the PowerShell Suspicious ScriptBlock Logging functionality.Figure 14: Script Block Logging Bypass, cont. Lastly, module logging and the standard Microsoft PowerShell logs are disabled via “LogPipelineExecutionDetails” property and via registry edits. The next block of code checks for admin privileges using an SID match for “S-1-5-32-544”. If the match is true, it will add exclusions using the “” PowerShell commandlet for the processes, forfiles.exe, powershell.exe, and cmd.exe. It will then add exclusions for any file ending with the extensions: .lnk, .rar, and .exe. Exclusions are also set for the following paths:Lastly, archive scanning is disabled. The next line of code on line 68 of figure 15 below is a heavily obfuscated command which calls MpCmdRun.exe with the flags “-RemoveDefinitaions -All”Figure 15: Bypass DefenderThe script attempts several persistence methods. The first is embedding itself into the registry. The key “(Default)” is created with a value containing a malicious PowerShell script.The PowerShell script attempts to download and invoke terma[.]vip/w4/u. After analyzing the file “u” it appears to be the same script that we are currently analyzing, the 7th, deobfuscated stage of the original script.Several other keys are modified which can be used for IOC detections and will be included in the IoC section at the end of the article.Figure 16: Persistence – Registry The script also attempts to embed itself as a scheduled task on the affected host. The task names itself one of two names depending on the permission level:The task is created using some clever obfuscation to hide the call to “schtasks.exe”. It uses an invoke expression mixed with wildcard matching so “$env:???t??r???\\*2\\??h???k?*” translates to “$env:SYSTEMROOT\\System32\\schtasks.exe”.The task is designed to run the exact same script that we noticed in the registry persistence section, however the invoked script is named “w” instead of “u” and it was hosted on a different C2 URL, however the code was identical and produced matching file hashes.Figure 17: Persistence – Scheduled Tasks A startup shortcut is created into the user’s “APPDATA\\Microsoft\\Windows\\Start\\Menu\\Programs\\Startup\\” directory with the name “MicrosoftWS.lnk”. Similar to the shortcut used with the initial infection phase of the attack, the shortcut is modified to execute forfiles.exe, taking PowerShell.exe and masquerading it as MicrosoftStartupTask to execute the rest of the PowerShell string.The Lolbin wsreset.exe when executed by itself takes whatever data is stored in the value “HKCU\\Software\\Classes\\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\\Shell\\open\\command” and executes it. This key was modified earlier during the “registry persistence” phase of the execution flow.Figure 18: Persistence – Startup Shortcut Figure 18: Persistence – WMI Subscription The final block of code downloads, decrypts and executes a remote payload named “header.png” from the URL “terma[.]app/s/static/img/header.png”. While we were able to download and analyze the header.png file, we were not able to decode it as we believe the campaign was completed and our theory is that the file was replaced in order to prevent further analysis. Our attempts to decode the payload would only produce garbage data.The payload was encrypted using AES encryption and decrypted and executed via an obfuscated invoke expression located on the last line of the code.Figure 19: Decode and Execute The threat actors maintained a robust C2 network which consisted of several observed domains. We observed the following domains used in various portions of the attack chain:The domains above first appeared in July 2022 and were pointed to DigitalOcean servers under the IP address 28[.]199.53.243 and 165[.]227.139.39. They were later pointed to CloudFlare servers to provide CDN and security services, which would also mask their original IP addresses and provide other functions such as HTTPS/TLS encryption as well as geoblocking.From the original IP addresses we were able to gather additional domain-related information. We discovered that the related website “cobham-satcom.onrender[.]com” was also used. Overall, it is clear that this attack was relatively sophisticated with the malicious threat actor paying specific attention to opsec. There were a lot of relatively recent attack techniques at play, some of which were unfamiliar and required additional analysis such as leveraging the PowerShell Get-Alias commandlet to perform an invoke expression.Persistence was a step above what we typically see as well. Leveraging the registry, WMI subscriptions, scheduled tasks, and incorporating Lolbins with the process was overall clever and needs to be monitored for. While this was a very targeted attack, the tactics and techniques used are well known and it is important to stay vigilant. Securonix customers can take advantage of the detections and seeded hunting queries below.  T1140: Deobfuscate/Decode Files or Information\nT1202: Indirect Command ExecutionT1005: Data from Local System\nT1562.001: Impair Defenses: Disable or Modify ToolsT1112: Modify Registry        Securonix 2022. All Rights Reserved"
   },
   {
      "time": "2022-09-28",
      "title": "Malaysian Telecom RedOne hit by DESORDEN",
      "text": " The Office of Inadequate SecurityAccording to statements made to DataBreaches by DESORDEN, when redONE didn’t respond to DESORDEN’s demands, DESORDEN launched a second attack on or about September 21, hitting their redCARD and redCARE programs.As DESORDEN wrote on a popular hacking forum:This data breach involved both redONE databases and source coding. Personal data include full name, NRIC (national identification number), address, phone, email, etc.As is their usual pattern, DESORDEN provided samples of data. In this case, there were samples from redONE, redCARD, and redCARE. All three samples included personal information on customers, and all three samples had fields for NRIC.DataBreaches ran some of the sample data through redONE’s site and confirmed that individuals whose NRIC appeared in the sample data from redONE do have or did have accounts with redONE. The ID checker page has since been taken offline by redONE, but an archived copy of the form as it appeared last year appears below. To verify that the data in DESORDEN’s sample were real, DataBreaches picked some random entries in the redONE sample, entered the NRIC in the “Identification No” field, and entered the captcha.  For each NRIC tested, the redONE checker returned information on the customer’s Account ID, when the account was activated and when it terminated.Although DESORDEN has been just leaking some data recently rather than trying to sell it, they claimed that if they did not hear from redOne within 48 hours of their last email, the data will be posted for sale publicly. It has been about 24 hours or so since their last email.DataBreaches sent email inquiries to redONE yesterday to ask them if they would confirm or deny DESORDEN’S claims about the breach but has received no reply.This site doesn’t accept sponsored posts and doesn’t respond to requests about them.Email:Signal: +1 516-776-7756© 2009 – 2023, DataBreaches.net and DataBreaches LLC. All rights reserved.“You translate “Nerd” into understandable “English” — Victor Gevers of GDI Foundation, talking about DataBreaches.net"
   },
   {
      "time": "2022-09-28",
      "title": "International conflicts driving increased strength of DDoS attacks: report",
      "text": " Wars and regional disputes are fueling an increase in powerful distributed denial-of-service (DDoS) attacks, according to a new report from cybersecurity firm NETSCOUT.While the six million attacks seen mirrors activity in the second half of 2021, most attacks tracked by NETSCOUT were an extension of Russia's invasion of Ukraine or Chinese aggression toward Taiwan and Hong Kong.Russia and Ukraine bombarded each other with DDoS attacks since the invasion began in February, but several other countries have been on the receiving end of incidents. Finland saw a 258% year-over-year increase in DDoS attacks once it announced the intent to apply for NATO membership.NETSCOUT found surges in DDoS attacks on countries providing assistance to Ukraine — like Ireland — or those failing to condemn Russia — like India.Richard Hummel, senior manager of threat intelligence at NETSCOUT, told The Record that in the past, most DDoS attacks deployed by nation-state criminals were diversionary tactics designed to draw attention.While the same is largely true today, Hummel said it is increasingly being used for a variety of other reasons: disruption, smokescreen, morale degradation, communications interruption, and other purposes.“While a large number of DDoS attacks are motivated by monetary gain, the number of attacks for other reasons continue to grow. For example, North America saw Elementary Education hit hard with very simple single vector attacks,” Hummel said. “This is notable in that all of these attacks can be launched for free from booter/stresser platforms. A study done in the UK in 2019 showed that children as young as 9-years-old both knew how to and had engaged in launching DDoS attacks. So, I don't think it's as clear cut anymore.”Part of why the attacks have grown in frequency is because they are cheap, easy to deploy and are accessible with very little risk or repercussions, according to Hummel. By their nature, DDoS attacks lend themselves to anonymity because of how distributed they are. There are also many free tools that now assist with the DDoS attack process. He noted that while DDoS attacks may appear to simply knock a website offline for a few hours, they do often cause significant damage. According to NETSCOUT, all the DDoS attacks that appear to be related to the Ukraine/Russia conflict utilize well-known DDoS attack vectors. “In terms of attack characteristics and impact, most can be attributed to standard DDoS-for-hire services, well-known botnets like Meris and Dvinis, and manually driven DDoS attack tools like LOIC and Killnet Vera,” the researchers said. Multiple security companies have similarly reported an evolution in the the size and scope of DDoS attacks. “The attack was highly distributed, targeting over 1,800 IPs and 6 global data centers at the height of the attack. This was a big, highly targeted, and sophisticated effort to take down this customer,” he said, explaining that the type of attacks they track were typically targeted at network equipment and infrastructure. Last month, Google said it stopped the largest DDoS attack ever recorded — 76% larger than the previously reported record,To put it in perspective, they compared the attack to “receiving all the daily requests to Wikipedia (one of the top 10 trafficked websites in the world) in just 10 seconds.”“DDoS is an effective tool for disrupting networks and degrading morale for countries embroiled in sociopolitical upheaval,” NETSCOUT researchers said.  “But adversaries don’t need a particular reason to launch an attack; they’re happy to do so under the guise of activism, religious, nihilism, military conquest, and more.”Jonathan Greig is a Breaking News Reporter at Recorded Future News. Jonathan has worked across the globe as a journalist since 2014. Before moving back to New York City, he worked for news outlets in South Africa, Jordan and Cambodia. He previously covered cybersecurity at ZDNet and TechRepublic.© Copyright 2023 | The Record from Recorded Future News"
   },
   {
      "time": "2022-09-28",
      "title": "US Forex Scam Lasted for Ten Years - CySecurity News - Latest Information Security and Hacking Incidents",
      "text": " your nameYour Emailyour message"
   },
   {
      "time": "2022-09-28",
      "title": "Ukraine Neutralizes Pro-Russian Hacking Group for Selling Data of 30 million Accounts - CySecurity News - Latest Information Security and Hacking Incidents",
      "text": "  your nameYour Emailyour message"
   },
   {
      "time": "2022-09-28",
      "title": "North Korea's Lazarus Hackers Targeting macOS Users Interested in Crypto Jobs",
      "text": " The infamous Lazarus Group has continued its pattern of leveraging unsolicited job opportunities to deploy malware targeting Apple's macOS operating system.In the latest variant of the campaign observed by cybersecurity company SentinelOne last week, decoy documents advertising positions for the Singapore-based cryptocurrency exchange firm Crypto[.]com have been used to mount the attacks.Although the exact distribution vector for the malware remains unknown, it's suspected that potential targets are singled out via direct messages on the business networking site LinkedIn.The downloader, also similar to the safarifontagent library employed in the Coinbase attack chain, subsequently acts as a conduit for a bare-bones second-stage bundle named \"WifiAnalyticsServ.app,\" which is a copycat version of \"FinderFontsUpdater.app.\"The final payload delivered to the compromised machine is unknown owing to the fact that the C2 server responsible for hosting the malware is currently offline.\"The threat actors have made no effort to encrypt or obfuscate any of the binaries, possibly indicating short-term campaigns and/or little fear of detection by their targets,\" the researchers said.Discover how application detection, response, and automated behavior modeling can revolutionize your defense against insider threats.Join the conversation to learn how to combat Zenbleed and Kubernetes attacks.Sign up for free and start receiving your daily dose of cybersecurity news, insights and tips."
   },
   {
      "time": "2022-09-28",
      "title": "MS SQL servers are getting hacked to deliver ransomware to orgs - Help Net Security",
      "text": " Cybercriminals wielding the FARGO (aka Mallox, aka TargetCompany) ransomware are targeting Microsoft SQL (MS SQL) servers, AhnLab’s ASEC analysis team has warned.They haven’t pinpointed how the attackers are getting access to the targeted servers, but noted that typical attacks targeting database servers include brute force and dictionary attacks aimed at ferreting out the passwords of existing, poorly secured accounts.“And there may be vulnerability attacks on systems that do not have a vulnerability patch applied,” they added.After the MS SQL server has been compromised, the attackers make it download a .NET file via Command Prompt (cmd.exe) and PowerShell (powershell.exe), which in turn downloads and loads additional malware.“The ransomware’s behavior begins by being injected into AppLaunch.exe, a normal Windows program. It attempts to delete a registry key on a certain path, and executes the recovery deactivation command, and closes certain processes. The ransomware encrypts some files and avoids others, including files with an extension associated with its own activities (.FARGO, .FARGO2, etc.) and that of GlobeImposter, another ransomware threat targeting vulnerable MS SQL servers.Finally, it shows the ransom note:To prevent falling victim to this and other threats coming via compromised MS SQL servers, admins are advised to regularly patch their installations and to use complex, unique passwords to protect their accounts."
   }
]