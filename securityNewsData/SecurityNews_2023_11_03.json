[
   {
      "time": "2023-11-03",
      "title": "\r\n\tAI Safety Summit: Biden Administration Launches US AI Safety Institute - Infosecurity Magazine\r\n",
      "text": " Reporter, Infosecurity MagazineThe US Department of Commerce has created a new government body to lead the US government’s efforts on AI safety and trust, the US Artificial Intelligence Safety Institute (USAISI).US Vice-President Kamala Harris made the announcement during her speech at the UK’s AI Safety Summit in Bletchley Park on November 1.USAISI will be part of the US National Institute of Innovation and Technology (NIST). It will be tasked to facilitate the development of standards for the safety, security, and testing of AI models, develop standards for authenticating AI-generated content, and provide testing environments for researchers to evaluate emerging AI risks and address known impacts.To achieve its mission, USAISI will leverage outside expertise, including working with partners in academia, industry, government, and civil society to advance AI safety.It will work with similar institutes in ally and partner nations, including the UK’s AI Safety Institute, to align and coordinate work in this sphere.The US Secretary of Commerce, Gina Raimondo, attended the AI Safety Summit alongside Harris. She commented: “Together, in coordination with federal agencies across government and in lockstep with our international partners and allies, we will work to fulfill the President’s vision to manage the risks and harness the benefits of AI.”NIST director Laurie E. Locascio said her organization was “thrilled to take on this critical role for the United States that will expand on our wide-ranging efforts in AI.”These include:"
   },
   {
      "time": "2023-11-03",
      "title": "\r\n\tUK Banks Warn Quantum Will Imperil Entire Payment System - Infosecurity Magazine\r\n",
      "text": " UK / EMEA News Reporter, Infosecurity MagazineThe UK finance industry has warned that quantum computing could unravel the security used to protect the country’s entire payment system.Banking body UK Finance issued the warning in a new report published this week: Identifying and Minimising the Risks Posed by Quantum Technology.Quantum computing is still in development, but if viable computers can be built using the technology, they could use Shor’s algorithm to crack the asymmetric (PKI) encryption used by the finance industry, rendering it practically useless.These warnings are not new, but the banking industry is now lending them an added urgency, calling on industry and government to collaborate more closely on a post-quantum future.“We cannot ignore the risks … and the reality that when a Cryptographically Relevant Quantum Computer is developed, it could break the encryption underpinning all payments and electronic commerce,” warned Jana Mackintosh, managing director of payments, innovation & resilience at UK Finance.“We must be ready. Industry and government must work together now to secure the financial services industry against these threats, and put the UK at the head of the pack to seize the opportunities.”   Other quantum risks highlighted by UK Finance include:To address both opportunity and risk, UK Finance set out seven recommendations for government:"
   },
   {
      "time": "2023-11-03",
      "title": "\r\n\tThe People Hacker: AI a Game-Changer in Social Engineering Attacks - Infosecurity Magazine\r\n",
      "text": " Deputy Editor, Infosecurity MagazineCybercriminals are using artificial intelligence (AI) to launch more sophisticated social engineering attacks, and experts are warning that it is becoming increasingly difficult to distinguish between what is real and what is AI-generated.This trend is being highlighted at the UK government's AI Safety Summit, which is focusing on the risks of AI and strategies to mitigate them.Prominent ways generative AI tools are being used by malicious actors is to launch more realistic phishing emails and using deepfakes to impersonate the voice of senior business leaders to defraud companies out of vast sums.These threats are on the radar of renowned social engineering expert Jenny Radcliffe, aka the People Hacker. During the recent ISC2 Security Congress, she told Infosecurity that AI will be “game-changer” in social engineering attacks.“Unfortunately, its on the side of the criminals because its difficult to distinguish what’s real and what’s AI-generated. The technology is learning all the time, correcting any mistakes that we do spot, and I think normal people are going to really struggle to spot a scam or con that’s AI generated,” said Radcliffe.Radcliffe advocated a “four eyes for everything” approach in organizations, in which no financial decision can be authorized by a single person and must go through a second person. This second person should be aware they need to perform a social engineering check.To prevent such an approach impacting productivity, technical solutions like watermarks will be crucial, she added.Education will be a major component of combatting threats. Awareness programs will have to evolve over time as we gain more understand of AI and the gaps it is causing in organizations’ security.Throughout her career, Radcliffe has observed and adapted to an evolving landscape in social engineering. Another important trend is more targeted attacks involving individuals’ social media accounts – both through engaging them on these platforms and using the vast amount of personal data people give away about themselves and their family and friends.The end goal is generally to infiltrate the company they work for – hooking people into a scam and layering them on to ultimately reach where they and their family work.“We’re definitely seeing that chain of scams, probably because most companies have technology controls and education now. Attackers are starting the process outside of work and then working their way in,” explained Radcliffe.Radcliffe said organizations are improving their ability to detect and protect against social engineering attacks. This is a result of most organizations adopting comprehensive cybersecurity awareness programs combined with an increased awareness of such attacks among the public.“They can picture someone trying to break into an office, or a con person at the end of a phone – that resonates with people,” she noted.Radcliffe added that she is being stopped and questioned more while conducting her work trying to physically break into companies. “I wouldn’t say it is necessarily stopping us succeeding, but we are being stopped more,” she said.One problem that remains is how to report scams. “One of the big issues is where do you report it and how useful is it to report it. People don’t know the answer that, they don’t always feel like scams will be followed up,” outlined Radcliffe.She noted that the issue of getting help and justice from being scammed remains a “grey area” in this space.A new regulation from the UK’s Payments Systems Regulator (PSR), which will require banks to reimburse victims of Authorised Push Payment (APP) fraud, attempts to provide an answer to this issue. However, Radcliffe is concerned such an approach could lead to personal responsibility being taken away from the public in terms of avoiding such scams.“Unfortunately, there will always be a victim somewhere of criminal activity, but you can’t automatically blame banks unless it was caused by a gap in their operation,” she added.Despite an increasingly digitized society, Radcliffe’s message is that humans remain both the primary target for cyber-attacks while also being the main means of protecting against them."
   },
   {
      "time": "2023-11-03",
      "title": "\r\n\tSpy Module Discovered in WhatsApp Mods - Infosecurity Magazine\r\n",
      "text": " Freelance JournalistUsers seeking additional features in mobile apps have been increasingly turning to third-party developers who offer mods that often come with a hidden and malicious agenda.The findings by Kaspersky particularly focus on several popular WhatsApp mods. These mods were found to contain a spy module identified as Trojan-Spy.AndroidOS.CanesSpy.According to an advisory published by the security experts earlier today, the spy module functions by utilizing suspicious components in the trojanized client manifest, including a service and a broadcast receiver that are not present in the official WhatsApp client. These components listen for various system and application events, such as phone charging, text messages and file downloads. Once activated, the receiver triggers the spy module, usually when the phone is turned on or begins charging.The malicious implant then transmits crucial device information to a command-and-control (C2) server, including the IMEI, phone number, mobile country code, mobile network code and more. Additionally, it uploads data on the victim’s contacts and accounts every five minutes. The spy module continuously checks the C2 server for instructions, referred to as “orders,” and executes them at pre-configured intervals.One notable aspect of this case is the discovery of messages sent to the C2 server in Arabic, suggesting the involvement of an Arabic-speaking developer. The distribution of these spy mods was primarily identified through popular Telegram channels, where several mod versions were found to contain the malicious module.“To avoid losing your personal data, we recommend using official instant messaging clients only,” wrote Kaspersky’s security researcher Dmitry Kalinin in the advisory. “Should you need the extra features, we advise that you use a reliable security solution that can detect and block the malware if the mod you chose proves to be infected.”Image credit: MardeFondos / Shutterstock.com"
   },
   {
      "time": "2023-11-03",
      "title": "\r\n\tRussian Security Services Arrest Suspected Ukrainian Hackers - Infosecurity Magazine\r\n",
      "text": " UK / EMEA News Reporter, Infosecurity MagazineRussia’s feared security service the FSB has detained two men suspected of launching cyber-attacks against domestic IT assets in support of Ukraine, according to reports.One of the two men is currently studying at Tomsk State University of Control Systems and Radioelectronics, according to Moscow-headquartered newspaper Kommersant.The man is suspected of joining Ukrainian-supervised cyber-forces and has carried out attacks on “Russian information infrastructure facilities,” according to the report.It’s unclear what kind of attacks these are, but if the article is referring to the volunteer organization the IT Army of Ukraine, it’s most likely to be distributed denial of service (DDoS) or web defacement. The man’s home was searched and he was apparently transported by plane to Moscow.The second man was detained in the mining town of Belovo, also in Siberia. He’s suspected of joining a Ukrainian cyber unit working under the direction of the country’s intelligence services.“As part of it, he carried out computer attacks using malicious software on Russian information resources, which led to disruption of the country’s critical infrastructure facilities,” the FSB reportedly said in a statement on the arrests.Videos have emerged of the man being thrown to the ground by FSB officers and bundled into a vehicle. His home was searched and computer equipment and storage media seized.It’s unclear if the two cases were connected in any way, although there are many inside Russia who share anti-Putin views that the regime regards as treasonous.Last week, a 23-year-old from Krasnoyarsk was reportedly arrested for filming and photographing infrastructure facilities including railway junctions and energy facilities and sending the details to Ukrainian intelligence."
   },
   {
      "time": "2023-11-03",
      "title": "\r\n\tIsraeli Entities Under Attack By MuddyWater’s Advanced Tactics - Infosecurity Magazine\r\n",
      "text": " Freelance JournalistA new social engineering campaign conducted by the “MuddyWater” group has been observed targeting two Israeli entities with tactics, techniques and procedures (TTPs) previously associated with this threat actor.MuddyWater, a group known for spear-phishing emails since 2020, has historically employed links and PDFs, RTFs and HTML attachments that direct victims to archives hosted on different file-sharing platforms. These archives typically contained legitimate remote administration tools. According to an advisory published by the Deep Instinct Threat Research team on Wednesday, during the Israel-Hamas conflict, MuddyWater has reused these known remote administration tools, as well as leveraging a new file-sharing service called “Storyblok.”On October 30, Deep Instinct reportedly discovered two archives hosted on Storyblok featuring a new multi-stage infection vector. This vector conceals files, including an LNK file initiating the infection and an executable file, executing an Advanced Monitoring Agent, a remote administration tool.According to the security experts, this marks the first public report of MuddyWater employing this particular remote administration tool.At the same time, the new campaign’s initial infection mechanism likely involves a spear-phishing email, similar to past campaigns. The archive contains several hidden folders, including a deceptive LNK shortcut resembling a directory called “Attachments.” When the LNK file is opened, the infection sequence is initiated, executing the “Diagnostic.exe” file, present in both archives observed by Deep Instinct. This file then launches “Windows.Diagnostic.Document.EXE,” a legitimate installer for “Advanced Monitoring Agent.”In addition to executing the remote administration tool, “Diagnostic.exe” also opens a Windows Explorer window for the hidden “Document” folder, creating a ruse to deceive the victim.After infection, MuddyWater operators likely conduct reconnaissance before executing PowerShell code, causing the infected host to communicate with a custom command-and-control (C2) server. Notably, MuddyWater recently used a new C2 framework called “MuddyC2Go.”"
   },
   {
      "time": "2023-11-03",
      "title": "Mysterious Kill Switch Disrupts Mozi IoT Botnet Operations",
      "text": " The unexpected drop in malicious activity connected with the Mozi botnet in August 2023 was due to a kill switch that was distributed to the bots.Specifically, the kill switch demonstrated capabilities to terminate the malware's process, disable system services such as SSHD and Dropbear, and ultimately replace Mozi with itself.\"Despite the drastic reduction in functionality, Mozi bots have maintained persistence, indicating a deliberate and calculated takedown,\" security researchers Ivan Bešina, Michal Škuta, and Miloš Čermák said.A second variant of the control payload came fitted with minor changes, including a feature to ping a remote server, likely for statistical purposes. What's more, the kill switch exhibits a strong overlap with the botnet's original source code and is signed with the correct private key previously used by the original Mozi operators.\"There are two potential instigators for this takedown: the original Mozi botnet creator or Chinese law enforcement, perhaps enlisting or forcing the cooperation of the original actor or actors,\" Bešina said.\"The sequential targeting of India and then China suggests that the takedown was carried out deliberately, with one country targeted first and the other a week later.\"Discover how application detection, response, and automated behavior modeling can revolutionize your defense against insider threats.Join the conversation to learn how to combat Zenbleed and Kubernetes attacks.Sign up for free and start receiving your daily dose of cybersecurity news, insights and tips."
   },
   {
      "time": "2023-11-03",
      "title": "Clop group obtained access to the email addresses of about 632,000 US federal employees",
      "text": " The news of the attacks on the government departments was reported by federal cybersecurity officers to the House Science, Space and Technology Committee in July.A report written by the US Office of Personnel Management, and obtained through a Freedom of Information Act request, provides more details about the attacks.The Office of Personnel Management labeled the security breach as a “major incident,” however, at the time the government agency downplayed the risk of homeland security because the compromised data was “generally of low sensitivity” and not classified.The report confirmed that attackers gained access to the data by exploiting the MOVEit flaw in a system used by Westat Inc., which is a service provider of OPM.\nCopyright@securityaffairs 2023 "
   },
   {
      "time": "2023-11-03",
      "title": "Okta discloses a data breach after a third-party vendor was hacked",
      "text": " Cloud identity and access management solutions provider Okta warns nearly 5,000 employees that their personal information was exposed due to a data breach suffered by the third-party vendor Rightway Healthcare.According to the data breach notification, Rightway Healthcare notified Okta that an unauthorized actor gained access an eligibility census file maintained by the provider in its provision of services to Okta.Exposed data include name, Social Security Number, and health or medical insurance plan number. The notification states that the company is not aware of any misuse of the exposed personal information.According to the Data Breach Notification, the security breach impacted a total of 4,961 employees.Okta is offering them access to 24 months of complementary credit monitoring, identity restoration, and fraud detection services, through the Experian Identity Works product.\nCopyright@securityaffairs 2023 "
   },
   {
      "time": "2023-11-03",
      "title": "Suspected exploitation of Apache ActiveMQ flaw CVE-2023-46604 to install HelloKitty ransomware",
      "text": " The vulnerability affects the following versions –Post-exploitation, the attackers attempted to load remote binaries named M2.png and M4.png using MSIExec. The researchers noticed that in one of the incidents Rapid7 observed, there were more than half a dozen unsuccessful attempts to encrypt assets.Rapid7 published Indicators of Compromise (IoCs) for these attacks.\nCopyright@securityaffairs 2023 "
   },
   {
      "time": "2023-11-03",
      "title": "DoNot APT expands its arsenal to spy on victim's VoIP calls — Cyble",
      "text": " DoNot, also known as APT-C-35, is an Advanced Persistent Threat (APT) group that has been active since 2016. This APT group has a history of targeting government and military organizations, as well as foreign affairs ministries and embassies in South Asian countries. DoNot APT has been observed using both Windows and Android malware in its operations.During the same period, an enhanced version of this Android malware came to our attention. In this updated version, two-layer string encryption was eliminated, and new functionalities were introduced. These enhancements encompassed the capability to steal conversations from messaging applications, screen recording, taking photos using the device’s camera, and capturing screenshots. This revised file was also mentioned in the same article, and its hash was specified as “b2b857553e0bbf098d35198a6dead03798fcf786c086e9f50e4e1f5eaeaad5e8 (AppsUpdate.apk).”Similar to the previous version, some of these updated malicious files posed as messaging apps, while others pretended to be settings or app update applications, and the package names included Chinese characters. The figure below depicts the features incorporated into the updated version of the malware, with the new features highlighted in red.As previously mentioned, the latest version of the malware has introduced several new features. These additions encompass recording VoIP calls from messaging apps, capturing clipboard contents, downloading payloads during runtime, gathering browser history, as well as collecting other Personally Identifiable Information (PII) data and ShareMe activity. Notably, in this updated version, the malware has expanded its target list to include additional messaging and social media applications. The figure below illustrates the disparities between the malware that emerged in April 2023 (on the right) and the most recently updated malware (on the left).APK Metadata Information  The malware employs the Firebase Cloud Messaging (FCM) server as its initial Command and Control (C&C) server to receive commands. The FCM server is responsible for various functions, including obtaining the new C&C server URL, setting up databases, deleting the application, sending text messages from the infected device, adding contacts, call log entries, and downloading the APK file.Below, we have listed the commands received via the FCM server:The malware stores an alternative C&C server URL in a text file named “KYLK00.txt”. The malware has two hardcoded C&C server URLs embedded in its code, namely “hxxps://capsup[.]buzz” and “hxxps://toolgpt[.]buzz.” The choice of C&C URL in the text file depends on the below scenario:The malware employs the Retrofit Library for its communication with the C&C server. Within the malware, two distinct Retrofit instances are identified: one is specifically for “hxxps://capsup[.]buzz,” while the other is designated for the URL stored in “KYLK00.txt.” The first Retrofit instance is solely responsible for transmitting device information and providing responses once the malware acquires the C&C URL from the FCM server. On the other hand, the second Retrofit instance is extensively utilized throughout the malware’s code, primarily for sending various types of stolen data to various endpoints.The implemented C&C architecture ensures that the malware can sustain communication with backup servers in case of communication failures with the current server.The malware uses the Accessibility service to track user interactions with messaging and social media applications. Below is a list of targeted applications, with the highlighted ones indicating the new additions in the current variant:By employing the resource identifier of the targeted application, the malware attempts to locate user interface elements associated with calls and messages. It then extracts relevant data, including the recipient’s name, message content, message status, and timestamps.The malware saves this extracted data from messaging and social media applications into SQLite databases. Specifically, the malware creates 22 separate databases to store each type of stolen information. The figure below illustrates the process of creating these databases.The malware has enrolled a Notification Listener service that observes notifications related to incoming/outgoing voice or video calls within specific messaging and social media applications. When the victim receives a call, the malware initiates the audio recording of that call.After the notification for calls made through targeted applications is removed, the malware dispatches an “end” call state signal to the audio recording service class and subsequently stops the audio recording.As explained earlier, the malware receives a range of commands from the FCM server. Among these commands, the “ccinst” command is responsible for downloading an additional APK file titled “Resource1.apk” from the URL provided with the command received from the FCM server.Upon obtaining the payload from the server, the malware accesses the payload component using the Dex ClassLoader. The figure below illustrates the classes loaded by the malware through the use of the “loadClass” method. While conducting dynamic analysis, we were unable to retrieve the additional payload, which could potentially introduce other malicious functionalities.The malware stores flags corresponding to various categories of exfiltrated data in a GeoFlag database. Depending on the values of these flags, the malware transmits the stolen data to the C&C server.Below is the comprehensive list of data that the malware can pilfer from a compromised device and sends them to the C&C server:We have listed some essential cybersecurity best practices that create the first line of control against attackers. We recommend that our readers follow the best practices given below:\n\t\t\t\tCyble Research Lab has conducted a detailed analysis on the DoNot APT group that is using a fake chat app to spread a spyware variant.\t\t\t\n\t\t\t\tCyble's deep-dive analysis of a fake CoronApp targeting Android users from Colombia\t\t\t"
   },
   {
      "time": "2023-11-03",
      "title": "Elastic catches DPRK passing out KANDYKORN — Elastic Security Labs",
      "text": " Elastic Security Labs exposes an attempt by the DPRK to infect blockchain engineers with novel macOS malware.Elastic Security Labs is disclosing a novel intrusion targeting blockchain engineers of a crypto exchange platform. The intrusion leveraged a combination of custom and open source capabilities for initial access and post-exploitation.We discovered this intrusion when analyzing attempts to reflectively load a binary into memory on a macOS endpoint. The intrusion was traced to a Python application posing as a cryptocurrency arbitrage bot delivered via a direct message on a public Discord server.We attribute this activity to DPRK and recognize overlaps with the Lazarus Group based on our analysis of the techniques, network infrastructure, code-signing certificates, and custom Lazarus Group detection rules; we track this intrusion set as REF7001.\nREF7001 Execution FlowThis execution kicked off the primary malware execution flow of the REF7001 intrusion, culminating in KANDYKORN:The initial breach was orchestrated via a camouflaged Python application designed and advertised as an arbitrage bot targeted at blockchain engineers. This application was distributed as a .zip file titled Cross-Platform Bridges.zip. Decompressing it reveals a Main.py script accompanied by a folder named order_book_recorder, housing 13 Python scripts.\nCross-Platform Bridges.zip folder structureThe victim manually ran the Main.py script via their PyCharm IDE Python interpreter.Initially, the Main.py script appears benign. It imports the accompanying Python scripts as modules and seems to execute some mundane functions.While analyzing the modules housed in the order_book_recorder folder, one file -- Watcher.py -- clearly stood out and we will see why.Main.py acts as the initial trigger, importing Watcher.py as a module that indirectly executes the script. The Python interpreter runs every top-level statement in Watcher.py sequentially.The script starts off by establishing local directory paths and subsequently attempts to generate a _log folder at the specified location. If the folder already exists, the script remains passive.\nCreating a folder within the Python application directory structure and name it _logThe script pre-defines a testSpeed.py file path (destined for the just created _log folder) and assigns it to the output variable. The function import_networklib is then defined. Within it, a Google Drive URL is initialized.Utilizing the Python urllib library, the script fetches content from this URL and stashes it in the s_args variable. In case of retrieval errors, it defaults to returning the operating system's name. Subsequently, the content from Google Drive (now in s_args) is written into the testSpeed.py file.\nMalicious downloader function import_networklib\nConnect to Google Drive url and download data saved to a variable s_args\nWrite data from s_args to testSpeed.py file in newly created _log directoryThe next function, get_modules_base_version, probes the Python version and invokes the import_networklib function if it detects version 3. This call sets the entire sequence in motion.\nCheck if Python version 3, calls the import_networklib functionWatcher.py imports testSpeed.py as a module, executing the contents of the script.\nImport testSpeed.py to execute itConcluding its operation, the malicious script tidies up, deleting the testSpeed.py file immediately after its one-time execution.\nDelete the downloaded testSpeed.py file following its import and execution\nWatcher.py deletes the testSpeed.py immediately following its executionWhen executed, testSpeed.py establishes an outbound network connection and fetches another Python file from a Google Drive URL, named FinderTools. This new file is saved to the /Users/Shared/ directory, with the method of retrieval mirroring the Watcher.py script.\ntestSpeed.py network connection\n_FinderTools file creation _After download, testSpeed.py launches FinderTools, providing a URL (tp-globa[.]xyz//OdhLca1mLUp/lZ5rZPxWsh/7yZKYQI43S/fP7savDX6c/bfC) as an argument which initiates an outbound network connection.\nFinderTools execution\nFinderTools network connectionsFinderTools is yet another dropper, downloading and executing a hidden second stage payload .sld also written to the /Users/Shared/ directory.\nFinderTools executes .sldStage 2 involves the execution of an obfuscated binary we have named SUGARLOADER, which is utilized twice under two separate names (.sld and .log).SUGARLOADER is first observed at /Users/shared/.sld. The second instance of SUGARLOADER, renamed to .log, is used in the persistence mechanism REF7001 implements with Discord.SUGARLOADER is used for initial access on the machine, and initializing the environment for the final stage. This binary is obfuscated using a binary packer, limiting what can be seen with static analysis.The start function of this binary consists of a jump (JMP) to an undefined address. This is common for binary packers.Executing the macOS file object tool otool -l ./log lists all the sections that will be loaded at runtime.__mod_init_func contains initialization functions. The C++ compiler places static constructors here. This is the code used to unpack the binary in memory.A successful method of reverse engineering such files is to place a breakpoint right after the execution of initialization functions and then take a snapshot of the process's virtual memory. When the breakpoint is hit, the code will already be decrypted in memory and can be analyzed using traditional methods.\nSUGARLOADER VirusTotal DetectionsThe primary purpose of SUGARLOADER is to connect to a Command and Control server (C2), in order to download a final stage payload we refer to as KANDYKORN, and execute it directly in memory.SUGARLOADER checks for the existence of a configuration file at /Library/Caches/com.apple.safari.ck. If the configuration file is missing, it will be downloaded and created via a default C2 address provided as a command line argument to the .sld binary. In our sample, the C2 address was 23.254.226[.]90 over TCP port 443. We provide additional information about the C2 in the Network Infrastructure section below.\nSUGARLOADER C2 established and configuration file download\nSUGARLOADER writing configuration fileThe configuration file is encrypted using RC4 and the encryption key (in the Observations section) is hardcoded within SUGARLOADER itself. The com.apple.safari.ck file is utilized by both SUGARLOADER and KANDYKORN for establishing secure network communications.computerId is a randomly generated string identifying the victim’s computer.A C2 server can either be identified with a fully qualified URL (c2_urls) or with an IP address and port (c2_ip_ddress). It supports two C2 servers, one as the main server, and the second one as a fallback. The specification or hardcoding of multiple servers like this is commonly used by malicious actors to ensure their connection with the victim is persistent should the original C2 be taken down or blocked. sleepInterval is the default sleeping interval for the malware between separate actions.Once the configuration file is read into memory and decrypted, the next step is to initialize a connection to the remote server. All the communication between the victim’s computer and the C2 server is detailed in the Network Protocol section.SUGARLOADER reflectively loads a binary (KANDYKORN) and then creates a new file initially named appname which we refer to as HLOADER which we took directly from the process code signature’s signing identifier.\nSUGARLOADER reflective binary load alert\nSUGARLOADER creates HLOADER\nHLOADER code signature identifier\nPseudocode for SUGARLOADER (stage2)\nHLOADER VirusTotal DetectionsThe legitimate binary /Applications/Discord.app/Contents/MacOS/Discord was renamed to .lock, and replaced by HLOADER.\nDiscord replaced by HLOADERBelow is the code signature information for HLOADER, which has a self-signed identifier structure consistent with other Lazarus Group samples.When executed, HLOADER performs the following operations:\nHLOADER execution event chain\nHLOADER Discord Application HijackThe following process tree also visually depicts how persistence is obtained. The root node Discord is actually HLOADER disguised as the legitimate app. As presented above, it first runs .lock, which is in fact Discord, and, alongside, spawns SUGARLOADER as a process named .log.\nProcess Tree AnalyzerAs seen in stage 2, SUGARLOADER reads the configuration file, connects to the C2 server, and waits for a payload to be received. Another alert is generated when the new payload (KANDYKORN) is loaded into memory.\nReflective Dylib Load Alert for KANDYKORNKANDYKORN is the final stage of this execution chain and possesses a full-featured set of capabilities to access and exfiltrate data from the victim’s computer. Elastic Security Labs was able to retrieve this payload from one C2 server which hadn’t been deactivated yet.KANDYCORN processes are forked and run in the background as daemons before loading their configuration file from /Library/Caches/com.apple.safari.ck. The configuration file is read into memory then decrypted using the same RC4 key, and parsed for C2 settings. The communication protocol is similar to prior stages using the victim ID value for authentication.Once communication is established, KANDYKORN awaits commands from the server. This is an interesting characteristic in that the malware waits for commands instead of polling for commands. This would reduce the number of endpoint and network artifacts generated and provide a way to limit potential discovery.Each command is represented by an integer being transmitted, followed by the data that is specific to each action. Below is a list of the available commands KANDYKORN provides.Action: Exit command where the program gracefully exists.Name: resp_basicinfo\nAction: Gathers information about the system such as hostname, uid, osinfo, and image path of the current process, and reports back to the server.\nresp_basicinfo routineName: resp_file_dir\nAction: Lists content of a directory and format the output similar to ls -al, including type, name, permissions, size, acl, path, and access time.\nresp_file_dir routineName: resp_file_propAction: Recursively read a directory and count the number of files, number of subdirectories, and total size.\nresp_file_prop routineName: resp_file_uploadAction: Used by the adversary to upload a file from their C2 server to the victim’s computer. This command specifies a path, creates it, and then proceeds to download the file content and write it to the victim’s computer.Name: resp_file_downAction: Used by the adversary to transfer a file from the victim’s computer to their infrastructure.Name: resp_file_zipdownAction: Archive a directory and exfiltrate it to the C2 server. The newly created archive’s name has the following pattern/tmp/tempXXXXXXX.\n_resp_file_zipdown routine _Name: resp_file_wipe\nAction: Overwrites file content to zero and deletes the file. This is a common technique used to impede recovering the file through digital forensics on the filesystem.\nresp_file_wipe routineName: resp_proc_listAction: Lists all running processes on the system along with their PID, UID and other information.Name: resp_proc_killAction: Kills a process by specified PID.\nresp_proc_kill routineName: resp_cmd_sendAction: Executes a command on the system by using a pseudoterminal.Name: resp_cmd_recvAction: Reads the command output from the previous command resp_cmd_send.Name: resp_cmd_createAction: Spawns a shell on the system and communicates with it via a pseudoterminal. Once the shell process is executed, commands are read and written through the /dev/pts device.\nresp_cmd_create routine (interactive shell)Name: resp_cfg_getAction: Sends the current configuration to the C2 from /Library/Caches/com.apple.safari.ck.Name: resp_cfg_setAction: Download a new configuration file to the victim’s machine. This is used by the adversary to update the C2 hostname that should be used to retrieve commands from.Name: resp_sleepAction: Sleeps for a number of seconds.KANDYKORN is an advanced implant with a variety of capabilities to monitor, interact with, and avoid detection. It utilizes reflective loading, a direct-memory form of execution that may bypass detections.All the executables that communicate with the C2 (both stage 3 and stage 4) are using the same protocol. All the data is encrypted with RC4 and uses the same key previously referenced in the configuration file.Both samples implement wrappers around the send-and-receive system calls. It can be observed in the following pseudocode that during the send routine, the buffer is first encrypted and then sent to the socket, whereas when data is received it is first decrypted and then processed.\nsend routine\nrecv routineWhen the malware first connects to the C2 during the initialization phase, there is a handshake that needs to be validated in order to proceed. Should the handshake fail, the attack would stop and no other commands would be processed.On the client side, a random number is generated and sent to the C2, which replies with a nonce variable. The client then computes a challenge with the random number and the received nonce and sends the result back to the server. If the challenge is successful and the server accepts the connection, it replies with a constant such as 0x41C3372 which appears in the analyzed sample.\nHandshake routineOnce the connection is established, the client sends its ID and awaits commands from the server. Any subsequent data sent or received from here is serialized following a common schema used to serialize binary objects. First, the length of the content is sent, then the payload, followed by a return code which indicates if any error occurred.\nOverview of communication protocolDuring REF7001, the adversary was observed communicating with network infrastructure to collect various payloads and loaders for different stages of the intrusion.As detailed in the Stage 1 section above, the link to the initial malware archive, Cross-Platform Bridges.zip, was provided in a direct message on a popular blockchain Discord server. This archive was hosted on a Google Drive (https://drive.google[.]com/file/d1KW5nQ8MZccug6Mp4QtKyWLT3HIZzHNIL2), but this was removed shortly after the archive was downloaded.Throughout the analysis of the REF7001 intrusion, there were two C2 servers observed.23.254.226[.]90 is the C2 IP used for the .sld file (SUGARLOADER malware). How this IP is used for C2 is highlighted in the stage 2 section above.As noted above, this is likely an attempt to typosquat a legitimate domain for a decentralized NFT data platform. We do not have any information to indicate that the legitimate company is involved in this intrusion.All registered domains, 48 as of this writing, for 192.119.64[.]43 are included in the observables bundle.The domain reported on Reddit was group.pro-tokyo[.]top//OcRLY4xsFlN/vMZrXIWONw/6OyCZl89HS/fP7savDX6c/bfC which follows the same structure as the REF7001 URL (tp-globa[.]xyz//OdhLca1mLUp/lZ5rZPxWsh/7yZKYQI43S/fP7savDX6c/bfC):While we did not observe GitHub in our intrusion, the Redditors who reported this did observe GitHub profiles being used. They have all been deactivated.Those accounts were:The DPRK, via units like the LAZARUS GROUP, continues to target crypto-industry businesses with the goal of stealing cryptocurrency in order to circumvent international sanctions that hinder the growth of their economy and ambitions. In this intrusion, they targeted blockchain engineers active on a public chat server with a lure designed to speak to their skills and interests, with the underlying promise of financial gain.The infection required interactivity from the victim that would still be expected had the lure been legitimate. Once executed, via a Python interpreter, the REF7001 execution flow went through 5 stages:Elastic traced this campaign to April 2023 through the RC4 key used to encrypt the SUGARLOADER and KANDYKORN C2. This threat is still active and the tools and techniques are being continuously developed.Elastic Security utilizes the Diamond Model to describe high-level relationships between adversaries, capabilities, infrastructure, and victims of intrusions. While the Diamond Model is most commonly used with single intrusions, and leveraging Activity Threading (section 8) as a way to create relationships between incidents, an adversary-centered (section 7.1.4) approach allows for an, although cluttered, single diamond.\nREF7001 Diamond ModelTactics represent the why of a technique or sub-technique. It is the adversary’s tactical goal: the reason for performing an action.Techniques represent how an adversary achieves a tactical goal by performing an action.The events for EQL are provided with the Elastic Agent using the Elastic Defend integration. Hunting queries could return high signals or false positives. These queries are used to identify potentially suspicious behavior, but an investigation is required to validate the findings.Using the Timeline section of the Security Solution in Kibana under the “Correlation” tab, you can use the below EQL queries to hunt for similar behaviors.The following EQL query can be used to identify when a hidden executable creates and then immediately deletes a file within a temporary directory:The following EQL query can be used to identify when a hidden file makes an outbound network connection followed by the immediate download of an executable file:The following EQL query can be used to identify when a macOS application binary gets renamed to a hidden file name within the same directory:The following EQL query can be used to identify when an IP address is supplied as an argument to a hidden executable:The following EQL query can be used to identify the rename or modification of a hidden executable file within the /Users/Shared directory or the execution of a hidden unsigned or untrusted process in the /Users/Shared directory:The following EQL query can be used to identify when a URL is supplied as an argument to a python script via the command line:The following EQL query can be used to identify the attempt of in memory Mach-O loading specifically by looking for the predictable temporary file creation of \"NSCreateObjectFileImageFromMemory-*\":The following EQL query can be used to identify the attempt of in memory Mach-O loading by looking for the load of the \"NSCreateObjectFileImageFromMemory-*\" file or a load with no dylib name provided:Elastic Security has created YARA rules to identify this activity. Below are YARA rules to identify the payloads:The following observables were discussed in this research.The following were referenced throughout the above research:© 2023. Elasticsearch B.V. All Rights Reserved."
   }
]