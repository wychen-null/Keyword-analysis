[
   {
      "time": "2022-12-02",
      "title": "Who’s swimming in South Korean waters? Meet ScarCruft’s Dolphin",
      "text": " \n      Award-winning news, views, and insight from the ESET security community\n    \n        Award-winning news, views, and insight from the ESET security community\n      ESET ResearchESET researchers uncover Dolphin, a sophisticated backdoor extending the arsenal of the ScarCruft APT group\n30 Nov 2022\n • \n, \n14 min. read\nESET researchers have analyzed a previously unreported backdoor used by the ScarCruft APT group. The backdoor, which we named Dolphin, has a wide range of spying capabilities, including monitoring drives and portable devices and exfiltrating files of interest, keylogging and taking screenshots, and stealing credentials from browsers. Its functionality is reserved for selected targets, to which the backdoor is deployed after initial compromise using less advanced malware. In line with other ScarCruft tools, Dolphin abuses cloud storage services – specifically Google Drive – for C&C communication.During our investigation, we saw continued development of the backdoor and attempts by the malware authors to evade detection. A notable feature of earlier Dolphin versions we analyzed is the ability to modify the settings of victims’ signed-in Google and Gmail accounts to lower their security, most likely to maintain access to victims’ email inboxes.Key points in this blogpost:\n\nESET researchers analyzed Dolphin, a previously unreported backdoor used by the ScarCruft APT group.\nDolphin is deployed on selected targets only; it searches the drives of compromised systems for interesting files and exfiltrates them to Google Drive.\nThe backdoor was used as the final payload of a multistage attack in early 2021, involving a watering-hole attack on a South Korean online newspaper, an Internet Explorer exploit, and another ScarCruft backdoor, named BLUELIGHT.\nSince the initial discovery of Dolphin in April 2021, ESET researchers have observed multiple versions of the backdoor, in which the threat actors improved the backdoor’s capabilities and made attempts to evade detection.\nA notable feature of earlier Dolphin versions we analyzed is the ability to modify the settings of victims’ signed-in Google and Gmail accounts to lower their security.\n\nScarCruft, also known as APT37 or Reaper, is an espionage group that has been operating since at least 2012. It primarily focuses on South Korea, but other Asian countries also have been targeted. ScarCruft seems to be interested mainly in government and military organizations, and companies in various industries linked to the interests of North Korea.In those reports, the BLUELIGHT backdoor was described as the attack’s final payload. However, when analyzing the attack, we discovered through ESET telemetry a second, more sophisticated backdoor, deployed on selected victims via BLUELIGHT. We named this backdoor Dolphin based on a PDB path found in the executable.While the BLUELIGHT backdoor performs basic reconnaissance and evaluation of the compromised machine after exploitation, Dolphin is more sophisticated and manually deployed only against selected victims. Both backdoors are capable of exfiltrating files from a path specified in a command, but Dolphin also actively searches drives and automatically exfiltrates files with extensions of interest to ScarCruft.Figure 1 provides an overview of the attack components leading to the execution of the Dolphin backdoor.Figure 1. Overview of the attack components leading to the execution of the Dolphin backdoorAnalysis of Dolphin’s components and their capabilities is provided in the following section.The analysis is based on the first version of the backdoor that we found, 1.9 (based on a string found in the code) with additional information about changes in newer versions. A summarized description of the version changes can be found in the Dolphin evolution section.Ensuing sections describe the installer and loader components responsible for the execution of the Dolphin backdoor in the analyzed attack scenario.It is worth noting that this installer and the deployed loader are not exclusive to Dolphin, and were previously seen used with other ScarCruft malware.The installer shellcode follows these main objectives:The installer downloads a CAB file from OneDrive, containing a legitimate Python 2.7 interpreter. The CAB is unpacked to %APPDATA%, and depending on architecture, the interpreter ends up in one of the following directories:The installer generates two file paths for loading-chain components, <loader_step_1> and <loader_encrypted_step_2>, with the format <base_dir>\\<inf_name>\\<dll_name>.<base_dir> is randomly selected from<inf_name> and <dll_name> are randomly selected from existing filenames (without extension) in %windir%\\inf\\*.inf and %windir%\\system32\\*.dll.To generate Step 1 of Loader, it uses a script template that is filled with randomly generated names (variables, function). The template with generated example is shown in Figure 2.Figure 2. Step 1 template and generated exampleThe script is then written to <loader_step_1>.Step 2 (embedded in the installer) containing the rest of the loading chain, including the payload, is encrypted with a one-byte XOR key derived from the current time and written to <loader_encrypted_step_2>.In order to persist the start of the loading chain, the installer sets a Run registry value:HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\<random_run_name>\\\"%appdata%\\Python27({32|64})\\pythonw.exe\" \"<loader_step_1>\" \"<loader_encrypted_step_2>\"The <random_run_name> is randomly selected from existing filenames matching %WINDIR%\\inf\\*.inf, discarding the .inf extension.To start the loading chain after installation, it creates a one-time scheduled task.The Dolphin loader consists of a Python script and shellcode.Step 1, the Python script, reads a specified file, XOR-decrypts its contents, and executes the resulting shellcode.Step 2, shellcode, creates a host process (random CLI executable from %WINDIR%\\System32\\*.exe), XOR-decrypts further shellcode carried within itself, and injects it into the created process.Step 3, another shellcode, XOR-decrypts an embedded PE file – the Dolphin backdoor – and loads and executes it using a custom PE loader.Dolphin is a backdoor that collects information and executes commands issued by its operators. The backdoor is a regular Windows executable, written in C++. It communicates with Google Drive cloud storage, which is used as its C&C server.We named the backdoor Dolphin based on a PDB path found in the executable:D:\\Development\\BACKDOOR\\Dolphin\\x64\\Release\\Dolphin.pdbThe backdoor periodically checks and creates its own persistence by making sure that Step 1 of the loader is run every time the system is started, via a registry Run value, in the same way as in the installer:HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\<random_run_name>\\\"%appdata%\\Python27({32|64})\\pythonw.exe\" \"<loader_step_1>\" \"<loader_encrypted_step_2>\"The following basic information about the computer and the backdoor is collected:Dolphin downloads commands, issued by its operators, from Google Drive storage and executes them. After execution, the output of commands is uploaded. Most of Dolphin’s capabilities are controlled through commands.The most relevant capabilities are described below.By default, Dolphin searches all non-fixed drives (USBs), creates directory listings and exfiltrates files by extension. This search can be extended to fixed drives (HDDs), via dedicated commands.The following file extensions of interest, specific to media, documents, emails, and certificates, are specified in the default configuration:jpg, doc, xls, ppt, hwp, url, csv, pdf, show, cell, eml, odt, rtf, nxl, amr, 3gp, m4a, txt, msg, key, der, cer, docx, xlsx, pptx, pfx, mp3Besides this automatic search, specific files can be exfiltrated.In the newer versions, the default search was extended to fixed drives. The command to get specific files was improved, by caching/storing it in the configuration until completion.Among regular drives, Dolphin also searches portable devices such as smartphones, using the Windows Portable Device (WPD) API. It creates directory listings and exfiltrates files. This functionality appeared to be under development in the first version we found, for several reasons:Apart from automatic search, the operators can specify individual files to be exfiltrated from portable devices.In newer versions, this capability was finished and improved by adding extension filtering. For unknown reasons, the command to retrieve specific files from portable devices was removed.Dolphin logs keystrokes for windows with titles containing substrings specified in its configuration. The defaults are chrome and internet explore (sic). This is done via the GetAsyncKeyState API, with keystrokes being logged along with the window name and current time. Screenshots are also taken at a configurable interval; the default is once every 30 seconds.Screenshots and keylogging are enabled by default, and can be toggled via a command.Dolphin can receive shellcode for execution. The shellcode is stored in the registry, under one of the following keys:It can be executed either locally or in a specified separate process that is created and injected.In the newer versions, the shellcode is stored in files instead of the registry, and the stored shellcode is loaded and executed on Dolphin’s startup, which was not the case in version 1.9 (the original version we analyzed).Dolphin can execute shell commands; this is done via the popen API and their output is retrieved.Dolphin can retrieve credentials from browsers in the form of saved passwords and cookies. The following browsers are supported:In version 2.2, this capability was removed, presumably to avoid detection. It was later restored in version 3.0, but in a different form. It is now dynamically received from the C&C in the form of shellcode.Another one of Dolphin’s commands modifies the settings of the currently logged-in Google account, lowering its security relative to default settings. It steals the existing cookie of the logged-in account from the browser and crafts requests that modify the settings.First, it enables access to Gmail via the IMAP protocol by sending an HTTP POST request to:Then it enables “less secure app access” by sending an undocumented RPC request via an HTTP POST to:These modifications are referred to as “thunder access” in the backdoor, likely being a reference to the Thunderbird email client. Accessing their victims’ inboxes with a third-party client via IMAP probably helps ScarCruft operators maintain access to the victims’ emails after stealing credentials, which may not be enough on their own, due to Google’s detection of suspicious login attempts.This feature was found in versions 1.9 and 2.0 of the backdoor; it is not present in versions 2.2 or 3.0.Dolphin exfiltrates data to Google Drive storage, staging the data in encrypted ZIP archives before upload. The backdoor also maintains a list of files in the form of MD5 hashes, in order to avoid uploading the same file multiple times. This list can be reset via a dedicated command.The backdoor contains an initial default configuration that is persisted on first run and loaded on subsequent runs. It is stored in the file %ProgramData%\\<variable_cfg_name>.inf, where <variable_cfg_name> is randomly selected from existing filenames matching %windir%\\inf\\*.inf. The content is encrypted using AES CBC with random 16-byte keys and IVs, which are stored at the file’s beginning. The configuration uses JSON format, with hash-like keys. An example of a decrypted configuration is shown in Figure 3.Figure 3. Dolphin backdoor configurationThe configuration can be modified through commands. It contains, among others, the following:Since the initial discovery of Dolphin in April 2021, we have observed multiple versions of the backdoor, in which the threat actors improved the backdoor’s capabilities and made attempts to evade detection. Figure 4 summarizes the versions seen; a more detailed description of the version changes is provided below.Figure 4. Dolphin evolution timelineVersion 2.0 introduced the following changes to the version found in April 2021:Changes introduced in version 2.2 focused mainly on detection evasion. The credential-stealing capability and commands related to it – the credential stealing and Google account commands – were removed. Most strings in this version are base64 encoded.In version 3.0, the code was reorganized and classes renamed, with capabilities remaining unchanged. The base64-encoded strings were plaintext again in this version. We observed the following additional changes:The differences between versions 2.2 and 3.0, especially the discrepancy in string encoding, suggest the possibility that the versions were being developed in parallel by different people.Dolphin is another addition to ScarCruft’s extensive arsenal of backdoors abusing cloud storage services. After being deployed on selected targets, it searches the drives of compromised systems for interesting files and exfiltrates them to Google Drive. One unusual capability found in prior versions of the backdoor is the ability to modify the settings of victims’ Google and Gmail accounts to lower their security, presumably in order to maintain account access for the threat actors. During our analysis of multiple versions of the Dolphin backdoor, we saw continued development and attempts to evade detection.\n\n\nSHA-1\nFilename\nESET detection name\nDescription\n\n\n\n\nF9F6C0184CEE9C1E4E15C2A73E56D7B927EA685B\nN/A\nWin64/Agent.MS\nDolphin backdoor version 1.9 (x64)\n\n\n5B70453AB58824A65ED0B6175C903AA022A87D6A\nN/A\nWin32/Spy.Agent.QET\nDolphin backdoor version 2.0 (x86)\n\n\n21CA0287EC5EAEE8FB2F5D0542E378267D6CA0A6\nN/A\nWin64/Agent.MS\nDolphin backdoor version 2.0 (x64)\n\n\nD9A369E328EA4F1B8304B6E11B50275F798E9D6B\nN/A\nWin32/Agent.UYO\nDolphin backdoor version 3.0 (x86)\n\n\n2C6CC71B7E7E4B28C2C176B504BC5BDB687C4D41\nN/A\nWin64/Agent.MS\nDolphin backdoor version 3.0 (x64)\n\n\n\n      Sign up for our newsletters\n    ESET ResearchUnlucky Kamran: Android malware spying on Urdu-speaking residents of Gilgit-BaltistanESET ResearchUnlucky Kamran: Android malware spying on Urdu-speaking residents of Gilgit-Baltistan • ESET ResearchWho killed Mozi? Finally putting the IoT zombie botnet in its graveESET ResearchWho killed Mozi? Finally putting the IoT zombie botnet in its grave • ESET Research, Threat ReportsESET APT Activity Report Q2–Q3 2023ESET Research, Threat ReportsESET APT Activity Report Q2–Q3 2023 • \n            Award-winning news, views, and insight from the ESET security community\n          "
   },
   {
      "time": "2022-12-02",
      "title": "Artifact Poisoning in GitHub Actions Imports Malware via Software Pipelines",
      "text": " An attacker submitting changes to an open source repository on GitHub could cause downstream software projects that include the latest version of a component to compile updates with malicious code.That's according to software supply chain security firm Legit Security, which said in an advisory published on Dec. 1 that this \"artifact poisoning\" weakness could affect software projects that use GitHub Actions — a service for automating development pipelines — by triggering the build process when a change is detected in a software dependency. The vulnerability is not theoretical: Legit Security simulated an attack on the project that manages Rust, causing the project to recompile using a customized — and malicious — version of the popular GCC software library, the company stated in the advisory.The problem likely affects a large number of open source projects because maintainers typically will run tests on contributed code before they actually analyze the code themselves, says Liav Caspi, chief technology officer of Legit Security.\"It is a common pattern today,\" he says. \"A lot of open source projects today, upon a change request, they run a bunch of tests to validate the request because the maintainer does not want to have to review the code first. Instead, it automatically run tests.\"The attack takes advantage of the automated build process through GitHub Actions. In the case of the Rust programming language, the vulnerable pattern could have allowed an attacker to execute code in a privileged way as part of the development pipeline, stealing repository secrets and potentially tampering with code, Legit Security said.\"[T]he lack of native GitHub implementation for cross-workflow artifacts communication led many projects and the GitHub Actions community to develop insecure solutions for cross-workflow communication and made this threat highly prevalent,\" Legit Security stated in the advisory.GitHub confirmed the issue and paid a bounty for the information, while Rust fixed its vulnerable pipeline, Legit Security stated.The vulnerability is the latest security issue to affect software supply chains. Industry and government agencies have increasingly sought to bolster the security of open source software and software provided as a service.The security issue belongs to a hard-to-find class of problems known as logic issues, which include issues with permissions, the potential for forked repositories to be inserted into a pipeline, and a lack of differentiation between forked and base repositories.Because software projects often use automated scripts to check code submissions before forwarded them to the maintainers, pull requests will be run through automation before any human checks them for malicious code. While the automation saves time, it also should be considered a way for attackers to insert malicious code into the pipeline.\"When you are doing open source development, the problem is bigger, because you are accepting contribution from anyone in the world,\" Caspi says. \"You are executing things that you cannot trust.\"\"Anyone that does anything like the Rust project did — trusting the input from a third party — then they are still vulnerable,\" Caspi says. \"It is a logic problem. GitHub just made it easier to write a safer script.\"Copyright © 2023 Informa PLC Informa UK Limited is a company registered in England and Wales with company number 1072954 whose registered office is 5 Howick Place, London, SW1P 1WG."
   },
   {
      "time": "2022-12-02",
      "title": "One Year After Log4Shell, Most Firms Are Still Exposed to Attack",
      "text": " The Log4j vulnerability continues to present a major threat to enterprise organizations one year after the Apache Software Foundation disclosed it last November — even though the number of publicly disclosed attacks targeting the flaw itself has been less than many might have initially expected.A high percentage of systems still remain unpatched against the flaw, and organizations face challenges in finding and remediating the issue and then preventing the flaw from being reintroduced into the environment, security researchers say.\"The fact that Log4j is used in [nearly] 64% of Java applications and only 50% of those have updated to a fully fixed version means attackers will continue to target it,\" says David Lindner, CISO at Contrast Security. \"At least for now, attackers continue to have a field day in finding paths to exploit through Log4j.\"However, that does not mean the threat from Log4j has diminished over the past year, security researchers note.In many instances — 29%, in fact — servers, Web applications, containers, and other assets became vulnerable to Log4j soon after initial remediation.\"Assuming organizations build the fix into the left side of the equation — during the build pipeline for software — rates of reintroduction should diminish,\" Huber says. \"Much of the rate of reintroduction and change depends greatly on an organization's software release cycle.\"Also, despite almost ubiquitous awareness of the flaw within the cybersecurity community, vulnerable versions of Log4j remain vexingly hard to find at many organizations because of how applications use it. Some applications might use the open source logging component as a direct dependency in their applications, and in other instances an application might use Log4j as a transitive dependency — or a dependency of another dependency, says Brian Fox, CTO at Sonatype.\"Since transitive dependencies are introduced from your direct dependency choices, they may not always be known or directly visible to your developers,\" Fox says.In many cases, when the Apache Foundation first disclosed Log4Shell, companies had to send out thousands of internal emails, collect results in spreadsheets, and recursively scan file systems, Fox says. \"This cost companies valuable time and resources to patch the component and prolonged the magnitude of the vulnerability's malicious effect,\" he says.Security researchers tracking the bug say that the positive fallout from Log4j is the heightened attention it has drawn to practices such as software composition analysis and software bill of materials (SBOM). The challenges that organizations have faced just determining whether they are vulnerable or where the vulnerability might exist in their environment has fostered a better understanding of the need for visibility into all the components in their codebase — especially those from open source and third-party sources.\"The investigation into the Log4J issue has reaffirmed the need for better software supply chain attestation in addition to SBOMs that keep up with the speed of DevOps,\" says Matthew Rose, CISO at ReversingLabs. \"Application security and architecture teams have realized that just looking for risk in parts of the application like source code, APIs, or open source packages is not enough. They now realize that a complete understanding of the application's architecture is just as important as finding SQLI or cross-site scripting bugs (XSS),\" he says.Copyright © 2023 Informa PLC Informa UK Limited is a company registered in England and Wales with company number 1072954 whose registered office is 5 Howick Place, London, SW1P 1WG."
   },
   {
      "time": "2022-12-02",
      "title": "CISA: Cuba ransomware group has stolen $60 million from at least 100 organizations",
      "text": " The Cuba ransomware group has launched attacks against 100 organizations around the world and brought in $60 million between December 2021 and August 2022, according to a new advisory from the Cybersecurity and Infrastructure Security Agency (CISA) and FBI.The two agencies also said there is no indication that the group is based in or has any connection to the Republic of Cuba.CISA said that since the FBI flash report, the number of U.S. entities attacked by the Cuba ransomware group has doubled and the amount of ransoms demanded and paid has increased.The group has continued to target the same five critical infrastructure sectors: financial services, government facilities, healthcare and public health, critical manufacturing, and information technology.Cuba ransomware actors have demanded at least $145 million in payments over the last 9 months, according to CISA data. The notice also links the ransomware actors to people behind other malicious tools like the RomCom Remote Access Trojan and the Industrial Spy ransomware. Much of the advisory included information spotlighted by the FBI in December 2021, including the fact that the group distributes the Cuba ransomware through Hancitor — a loader known for dropping or executing stealers, such as Remote Access Trojans (RATs) and other types of ransomware, onto victims’ networks.The Palo Alto Networks report added that the group used a variety of tools to evade detection, including a tool that “terminates security products.”The group typically extorts victims by threatening to leak stolen data and since May 2022, has moved from marketing the stolen information on their own leak site to selling it on the Industrial Spy online market – a platform rife with stolen data. The report comes on the same day that the group claimed to have attacked German media firm Landau Media. The company confirmed it had been attacked in a notice on its website, warning visitors not to engage with anything on the site. \"We have been the victim of a targeted cyberattack. We do not know whether our customers' systems are also at risk from the cyberattack. We therefore ask you to be careful when using our online services and environments,\" the company said on Thursday. \"Unfortunately, our production systems are also partially affected. We are working on a solution as soon as possible!\"Jonathan Greig is a Breaking News Reporter at Recorded Future News. Jonathan has worked across the globe as a journalist since 2014. Before moving back to New York City, he worked for news outlets in South Africa, Jordan and Cambodia. He previously covered cybersecurity at ZDNet and TechRepublic.© Copyright 2023 | The Record from Recorded Future News"
   },
   {
      "time": "2022-12-02",
      "title": "Android malware infected 300,000 devices to steal Facebook accounts",
      "text": " An Android malware campaign masquerading as reading and education apps has been underway since 2018, attempting to steal Facebook account credentials from infected devices.According to a new report by Zimperium, the campaign has infected at least 300,000 devices across 71 countries, primarily focusing on Vietnam.Some apps used for spreading the trojan, which Zimperium named 'Schoolyard Bully,' were previously on Google Play but have since been removed.However, Zimperium warns that the apps continue to be spread through third-party Android app stores.The Schoolyard Bully malware gets its name from masquerading as harmless and even beneficial educational apps.However, the main goal of the 'malware is to steal Facebook account credentials (email and password), account ID, username, device name, device RAM, and device API.The trojan steals these details by opening a legitimate Facebook login page inside the app using WebView and injecting malicious JavaScript to extract the user inputs.\"The javascript code extracts the value of elements with 'ids m_login_email' and 'm_login_password,' which are placeholders for the phone number, email address, and password.\"Moreover, the malware uses native libraries to hide its malicious code from security software and analysis tools.Zimperium says that they have detected this malware on 300,000 victims in 71 countries based on their telemetry data.Also, since the 37 apps associated with this campaign are distributed via third-party app stores, the number of victims is likely higher as there is no reliable way to measure victim counts on these platforms.Zimperium also warns that there are likely more apps in addition to those its researchers discovered behind this campaign."
   },
   {
      "time": "2022-12-02",
      "title": "New Redigo malware drops stealthy backdoor on Redis servers",
      "text": " A new Go-based malware threat that researchers call Redigo has been targeting Redis servers vulnerable to CVE-2022-0543 to plant a stealthy backdoor and allow command execution.The name of the malware, Redigo, was coined from the machine it targets and the programming language for building it.AquaSec says that Redigo attacks start with scans on port 6379 to locate Redis servers exposed on the open web. After locating a target endpoint, the atacker connect and run the following commands:Using the command execution abilities of the implanted backdoor, the attackers collect hardware info about the host and then download Redigo (redis-1.2-SNAPSHOT). The malware is executed after escalating privileges.The attackers simulate normal Redis communication over port 6379 to evade detection by network analysis tools while attempting to hide traffing from Redigo's command and control server.Due to attack duration limitations in AquaSec's honeypots, its analysts couldn't determine exactly what Redigo does after establishing its foothold in the environment.AquaSec says it's likely that the ultimate goal of Redigo is to add the vulnerable server as a bot in a network for distributed denial-of-service (DDoS) attacks or to run cryptocurrency miners on the compromised systems.Also, since Redis is a database, accessing the data to steal it would also be a plausible scenario in Redigo attacks."
   },
   {
      "time": "2022-12-02",
      "title": "Researchers Disclose Critical RCE Vulnerability Affecting Quarkus Java Framework",
      "text": " A critical security vulnerability has been disclosed in the Quarkus Java framework that could be potentially exploited to achieve remote code execution on affected systems.This could take the form of a spear-phishing or a watering hole attack without requiring any further interaction on the part of the victim. Alternatively, the attack can be pulled off by serving rogue ads on popular websites frequented by developers.Users are recommended to upgrade to version 2.14.2.Final and 2.13.5.Final to safeguard against the flaw. A potential workaround is to move all the non-application endpoints to a random root path.Join us for our webinar to learn how to tackle challenges, launch a program, and choose the right solution.Join the conversation to learn how to combat Zenbleed and Kubernetes attacks.Sign up for free and start receiving your daily dose of cybersecurity news, insights and tips."
   },
   {
      "time": "2022-12-02",
      "title": "New DuckLogs malware service claims having thousands of ‘customers’",
      "text": " A new malware-as-a-service (MaaS) operation named 'DuckLogs' has emerged, giving low-skilled attackers easy access to multiple modules to steal information, log key strokes, access clipboard data, and remote access to the compromised host.DuckLogs is entirely web-based. It claims to have thousands of cybercriminals paying a subscription to generate and launch more than 4,000 malware builds.The operators appear to provide additional services to some customers, helping them to distribute the payload, a tool to drop files, and an extension changer.The web panel shows that more than 2,000 cyberscriminals are using the malicious platform and the current victim count is above 6,000.DuckLogs includes mainly an information stealer and a remote access trojan (RAT) component but it has more than 100 individual modules that target specific applications.Below is a list of some of the data and applications the info-stealing component targets:The RAT component supports functions that allow fetching files from the command and control (C2) server and run them on the host, display a crash screen, shutdown, restart, logout, or lock the device, or open URLs in the browser.Other DuckLogs modules allow logging keystrokes to steal sensitive information, a clipper (typically used to hijack cryptocurrency transactions), and a tool to take screenshots.Cyble researchers say that the malware also supports Telegram notifications, encrypted logs and communication, code obfuscation, process hollowing to launch payloads in memory, a persistence mechanism, and a bypass for the Windows User Account Control.The web-based panel is currently available on four clearnet domains and appears to provide powerful payload-building features with options for the modules and functions to be added to the final malware build.Additionally, the builder provides some anti-evasion choices, like adding an exclusion for Windows Defender, payload execution delay, or disabling the Task Manager on the host.Cyble says that the initial infection vector is likely to occur over email (spam, phishing). The researchers recommend users to check the authenticity of suspicious messages and not to open links from untrusted sources.Furthermore, sensitive data copied to clipboard should be carefully inspected after pasting it to ensure that hackers have not changed details such as the destination of a transaction.Another useful precaution is to avoid downloading executables from torrents or shady sites, and to keep security software up to date."
   },
   {
      "time": "2022-12-02",
      "title": "Malware Authors 'Accidentally' Crash KmsdBot Cryptocurrency Mining Botnet",
      "text": " An ongoing analysis into an up-and-coming cryptocurrency mining botnet known as KmsdBot has led to it being accidentally taken down by the threat actors themselves.The botnet strikes both Windows and Linux devices spanning a wide range of microarchitectures with the primary goal of deploying mining software and corralling the compromised hosts into a DDoS bot.Some of the major targets included gaming firms, technology companies, and luxury car manufacturers.Akamai researcher Larry W. Cashdollar, in a new update, explained how commands sent by the malware operators to carry out a DDoS attack against the bitcoin[.]com website inadvertently neutralized the malware.This, in turn, was made possible due to the lack of an error-checking mechanism built into the source code to validate the received commands. Specifically, an instruction issued without a space between the target website and the port number caused the entire Go binary running on the infected machine to crash and stop interacting with its command-and-control server, effectively killing the botnet.The fact that KmsdBot doesn't have a persistence mechanism also means that the malware operator will have to re-infect the machines again and re-build the infrastructure from scratch.\"This botnet has been going after some very large luxury brands and gaming companies, and yet, with one failed command it cannot continue,\" Cashdollar concluded. \"This is a strong example of the fickle nature of technology and how even the exploiter can be exploited by it.\"(The story has been revised to reflect the fact that the authors of KmsdBot crashed the malware themselves, and not the researchers as previously stated.)Join us for our webinar to learn how to tackle challenges, launch a program, and choose the right solution.Join the conversation to learn how to combat Zenbleed and Kubernetes attacks.Sign up for free and start receiving your daily dose of cybersecurity news, insights and tips."
   },
   {
      "time": "2022-12-02",
      "title": "Google Accuses Spanish Spyware Vendor of Exploiting Chrome, Firefox, & Windows Zero-Days",
      "text": " A Barcelona-based surveillanceware vendor named Variston IT is said to have surreptitiously planted spyware on targeted devices by exploiting several zero-day flaws in Google Chrome, Mozilla Firefox, and Windows, some of which date back to December 2018.The vulnerabilities, which have been patched by Google, Microsoft, and Mozilla in 2021 and early 2022, are believed to have been utilized as zero-days to help customers install malware of their choice on the targeted systems.Heliconia comprises a trio of components, namely Noise, Soft, and Files, each of which are responsible for deploying exploits against bugs in Chrome, Windows, and Firefox, respectively.However, the attack banks on the prerequisite that the victim accesses a booby-trapped webpage to trigger the first-stage exploit.Heliconia Noise can be additionally configured by the purchaser using a JSON file to set different parameters like the maximum number of times to serve the exploits, an expiration date for the servers, redirect URLs for non-target visitors, and rules specifying when a visitor should be considered a valid target.Google TAG said it became aware of the Heliconia attack framework after receiving an anonymous submission to its Chrome bug reporting program. It further noted that there's no current evidence of exploitation, either indicating the toolset has been put to rest or evolved further.\"The growth of the spyware industry puts users at risk and makes the Internet less safe, and while surveillance technology may be legal under national or international laws, they are often used in harmful ways to conduct digital espionage against a range of groups,\" the researchers said.Join us for our webinar to learn how to tackle challenges, launch a program, and choose the right solution.Join the conversation to learn how to combat Zenbleed and Kubernetes attacks.Sign up for free and start receiving your daily dose of cybersecurity news, insights and tips."
   },
   {
      "time": "2022-12-02",
      "title": "Hyundai app bugs allowed hackers to remotely unlock, start cars",
      "text": " Vulnerabilities in mobile apps exposed Hyundai and Genesis car models after 2012 to remote attacks that allowed unlocking and even starting the vehicles.Security researchers found the issues and explored similar attack surfaces in the SiriusXM \"smart vehicle\" platform used in cars from other makers (Toyota, Honda, FCA, Nissan, Acura, and Infinity) that allowed them to \"remotely unlock, start, locate, flash, and honk\" them.The mobile apps of Hyundai and Genesis, named MyHyundai and MyGenesis, allow authenticated users to start, stop, lock, and unlock their vehicles.After intercepting the traffic generated from the two apps, the researchers analyzed it and were able to extract API calls for further investigation.They found that validation of the owner is done based on the user's email address, which was included in the JSON body of POST requests.Next, the analysts discovered that MyHyundai did not require email confirmation upon registration. They created a new account using the target's email address with an additional control character at the end.Finally, they sent an HTTP request to Hyundai's endpoint containing the spoofed address in the JSON token and the victim's address in the JSON body, bypassing the validity check.To verify that they could use this access for an attack on the car, they tried to unlock a Hyundai car used for the research. A few seconds later, the car unlocked.The multi-step attack was eventually baked into a custom Python script, which only needed the target's email address for the attack.SiriusXM Connected Vehicle Services is a vehicle telematics service provider used by more than 15 car manufacturers The vendor claims to operate 12 million connected cars that run over 50 services under a unified platform.Yuga Labs analysts found that the mobile apps for Acura, BMW, Honda, Hyundai, Infiniti, Jaguar, Land Rover, Lexus, Nissan, Subaru, and Toyota, use SiriusXM technology to implement remote vehicle management features.They inspected the network traffic from Nissan's app and found that it was possible to send forged HTTP requests to the endpoint only by knowing the target's vehicle identification number (VIN).The response to the unauthorized request contained the target's name, phone number, address, and vehicle details.Considering that VINs are easy to locate on parked cars, typically visible on a plate where the dashboard meets the windshield, an attacker could easily access it. These identification numbers are also available on specialized car selling websites, for potential buyers to check the vehicle's history.In addition to information disclosure, the requests can also carry commands to execute actions on the cars.BleepingComputer has contacted Hyundai and SiriusXM to ask if the above issues have been exploited against real customers but has not received a reply by publishing time.Before posting the details, the researchers informed both Hyundai and SiriusXM of the flaws and associated risks. The two vendors have fixed the vulnerabilities.Update 1 (12/1) - Researcher Sam Curry clarified to BleepingComputer what the commands on SiriusXM case can do, sending the following comment:For every one of the car brands (using SiriusXM) made past 2015, it could be remotely tracked, locked/unlocked, started/stopped, honked, or have their headlights flashed just by knowing their VIN number. For cars built before that, most of them are still plugged into SiriusXM and it would be possible to scan their VIN number through their windshield and takeover their SiriusXM account, revealing their name, phone number, address, and billing information hooked up to their SiriusXM account.Update 2 (12/1) - A Hyundai spokesperson shared the following comment with BleepingComputer:Hyundai worked diligently with third-party consultants to investigate the purported vulnerability as soon as the researchers brought it to our attention.Importantly, other than the Hyundai vehicles and accounts belonging to the researchers themselves, our investigation indicated that no customer vehicles or accounts were accessed by others as a result of the issues raised by the researchers. We also note that in order to employ the purported vulnerability, the e-mail address associated with the specific Hyundai account and vehicle as well as the specific web-script employed by the researchers were required to be known.Nevertheless, Hyundai implemented countermeasures within days of notification to further enhance the safety and security of our systems. Hyundai would also like to clarify that we were not affected by the SXM authorization flaw.We value our collaboration with security researchers and appreciate this team’s assistance.Update 3 (12/1) - A SiriusXM spokesperson sent the following comment to BleepingComputer:We take the security of our customers’ accounts seriously and participate in a bug bounty program to help identify and correct potential security flaws impacting our platforms.As part of this work, a security researcher submitted a report to Sirius XM's Connected Vehicle Services on an authorization flaw impacting a specific telematics program. The issue was resolved within 24 hours after the report was submitted. At no point was any subscriber or other data compromised nor was any unauthorized account modified using this method.Update 12/2/21: This article incorrectly stated the researchers worked for Yuga Labs."
   }
]